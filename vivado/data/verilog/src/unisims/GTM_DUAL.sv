///////////////////////////////////////////////////////////////////////////////
//  Copyright (c) 1995/2018 Xilinx, Inc.
//  All Right Reserved.
///////////////////////////////////////////////////////////////////////////////
//   ____  ____
//  /   /\/   /
// /___/  \  /     Vendor      : Xilinx
// \   \   \/      Version     : 2019.1
//  \   \          Description : Xilinx Unified Simulation Library Component
//  /   /                        GTM_DUAL
// /___/   /\      Filename    : GTM_DUAL.v
// \   \  /  \
//  \___\/\___\
//
///////////////////////////////////////////////////////////////////////////////
//  Revision:
//
//  End Revision:
///////////////////////////////////////////////////////////////////////////////

`timescale 1 ps / 1 ps

`celldefine

module GTM_DUAL #(
`ifdef XIL_TIMING
  parameter LOC = "UNPLACED",
`endif
  parameter [15:0] A_CFG = 16'b0000100001000000,
  parameter [15:0] A_SDM_DATA_CFG0 = 16'b0000000011010000,
  parameter [15:0] A_SDM_DATA_CFG1 = 16'b0000000011010000,
  parameter [15:0] BIAS_CFG0 = 16'b0000000000000000,
  parameter [15:0] BIAS_CFG1 = 16'b0000000000000000,
  parameter [15:0] BIAS_CFG2 = 16'b0001000000000000,
  parameter [15:0] BIAS_CFG3 = 16'b0000000000000001,
  parameter [15:0] BIAS_CFG4 = 16'b0000000000000000,
  parameter [15:0] BIAS_CFG5 = 16'b0000000000000000,
  parameter [15:0] BIAS_CFG6 = 16'b0000000010000000,
  parameter [15:0] BIAS_CFG7 = 16'b0000000000000000,
  parameter [15:0] CH0_A_CH_CFG0 = 16'b0000000000000011,
  parameter [15:0] CH0_A_CH_CFG1 = 16'b0000000000000000,
  parameter [15:0] CH0_A_CH_CFG2 = 16'b0111101111110000,
  parameter [15:0] CH0_A_CH_CFG3 = 16'b0000000000000000,
  parameter [15:0] CH0_A_CH_CFG4 = 16'b0000000000000000,
  parameter [15:0] CH0_A_CH_CFG5 = 16'b0000000000000000,
  parameter [15:0] CH0_A_CH_CFG6 = 16'b0000000000000000,
  parameter [15:0] CH0_RST_LP_CFG0 = 16'b0001000000010000,
  parameter [15:0] CH0_RST_LP_CFG1 = 16'b0011001000010000,
  parameter [15:0] CH0_RST_LP_CFG2 = 16'b0110010100000100,
  parameter [15:0] CH0_RST_LP_CFG3 = 16'b0011001000010000,
  parameter [15:0] CH0_RST_LP_CFG4 = 16'b0000000001000100,
  parameter [15:0] CH0_RST_LP_ID_CFG0 = 16'b0011000001110000,
  parameter [15:0] CH0_RST_LP_ID_CFG1 = 16'b0001000000010000,
  parameter [15:0] CH0_RST_TIME_CFG0 = 16'b0000010000100001,
  parameter [15:0] CH0_RST_TIME_CFG1 = 16'b0000010000100001,
  parameter [15:0] CH0_RST_TIME_CFG2 = 16'b0000010000100001,
  parameter [15:0] CH0_RST_TIME_CFG3 = 16'b0000010000100000,
  parameter [15:0] CH0_RST_TIME_CFG4 = 16'b0000010000100001,
  parameter [15:0] CH0_RST_TIME_CFG5 = 16'b0000000000000001,
  parameter [15:0] CH0_RST_TIME_CFG6 = 16'b0000000000100001,
  parameter [15:0] CH0_RX_ADC_CFG0 = 16'b0011010010001111,
  parameter [15:0] CH0_RX_ADC_CFG1 = 16'b0011111001010101,
  parameter [15:0] CH0_RX_ANA_CFG0 = 16'b1000000000011101,
  parameter [15:0] CH0_RX_ANA_CFG1 = 16'b1110100010000000,
  parameter [15:0] CH0_RX_ANA_CFG2 = 16'b0000000010001010,
  parameter [15:0] CH0_RX_APT_CFG0A = 16'b0000000001110000,
  parameter [15:0] CH0_RX_APT_CFG0B = 16'b0000000001110000,
  parameter [15:0] CH0_RX_APT_CFG10A = 16'b0000000001110000,
  parameter [15:0] CH0_RX_APT_CFG10B = 16'b0000000001010000,
  parameter [15:0] CH0_RX_APT_CFG11A = 16'b0000000001000000,
  parameter [15:0] CH0_RX_APT_CFG11B = 16'b0000000001110000,
  parameter [15:0] CH0_RX_APT_CFG12A = 16'b0000000001010000,
  parameter [15:0] CH0_RX_APT_CFG12B = 16'b0000000000000000,
  parameter [15:0] CH0_RX_APT_CFG13A = 16'b0000000000000000,
  parameter [15:0] CH0_RX_APT_CFG13B = 16'b0000000000000000,
  parameter [15:0] CH0_RX_APT_CFG14A = 16'b0000000000000000,
  parameter [15:0] CH0_RX_APT_CFG14B = 16'b0000000000000000,
  parameter [15:0] CH0_RX_APT_CFG15A = 16'b0000000000000000,
  parameter [15:0] CH0_RX_APT_CFG15B = 16'b0000100000000000,
  parameter [15:0] CH0_RX_APT_CFG16A = 16'b0000000000000000,
  parameter [15:0] CH0_RX_APT_CFG16B = 16'b0010000000000000,
  parameter [15:0] CH0_RX_APT_CFG17A = 16'b0000000000000000,
  parameter [15:0] CH0_RX_APT_CFG17B = 16'b0001000001000000,
  parameter [15:0] CH0_RX_APT_CFG18A = 16'b0000100000100000,
  parameter [15:0] CH0_RX_APT_CFG18B = 16'b0000000000000000,
  parameter [15:0] CH0_RX_APT_CFG19A = 16'b0000000000000000,
  parameter [15:0] CH0_RX_APT_CFG19B = 16'b0000100000000000,
  parameter [15:0] CH0_RX_APT_CFG1A = 16'b0000000001110000,
  parameter [15:0] CH0_RX_APT_CFG1B = 16'b0000000001110000,
  parameter [15:0] CH0_RX_APT_CFG20A = 16'b1110000000100000,
  parameter [15:0] CH0_RX_APT_CFG20B = 16'b0000000001000000,
  parameter [15:0] CH0_RX_APT_CFG21A = 16'b0001000000000100,
  parameter [15:0] CH0_RX_APT_CFG21B = 16'b0000000000000000,
  parameter [15:0] CH0_RX_APT_CFG22A = 16'b0000000001110000,
  parameter [15:0] CH0_RX_APT_CFG22B = 16'b0000000001110000,
  parameter [15:0] CH0_RX_APT_CFG23A = 16'b0000100000000000,
  parameter [15:0] CH0_RX_APT_CFG23B = 16'b0000000000000000,
  parameter [15:0] CH0_RX_APT_CFG24A = 16'b0000000000000000,
  parameter [15:0] CH0_RX_APT_CFG24B = 16'b0000000000000000,
  parameter [15:0] CH0_RX_APT_CFG25A = 16'b0000000000000000,
  parameter [15:0] CH0_RX_APT_CFG25B = 16'b0000000000000000,
  parameter [15:0] CH0_RX_APT_CFG26A = 16'b0000000000000000,
  parameter [15:0] CH0_RX_APT_CFG26B = 16'b0000000000000000,
  parameter [15:0] CH0_RX_APT_CFG27A = 16'b0100000000000000,
  parameter [15:0] CH0_RX_APT_CFG27B = 16'b0000000000000000,
  parameter [15:0] CH0_RX_APT_CFG28A = 16'b0000000000000000,
  parameter [15:0] CH0_RX_APT_CFG28B = 16'b1000000000000000,
  parameter [15:0] CH0_RX_APT_CFG2A = 16'b0000000001110000,
  parameter [15:0] CH0_RX_APT_CFG2B = 16'b0000000001110000,
  parameter [15:0] CH0_RX_APT_CFG3A = 16'b0000000001110000,
  parameter [15:0] CH0_RX_APT_CFG3B = 16'b0000000001110000,
  parameter [15:0] CH0_RX_APT_CFG4A = 16'b0000000001110000,
  parameter [15:0] CH0_RX_APT_CFG4B = 16'b0000000001110000,
  parameter [15:0] CH0_RX_APT_CFG5A = 16'b0000000001110000,
  parameter [15:0] CH0_RX_APT_CFG5B = 16'b0000000001110000,
  parameter [15:0] CH0_RX_APT_CFG6A = 16'b0000000001110000,
  parameter [15:0] CH0_RX_APT_CFG6B = 16'b0000000001110000,
  parameter [15:0] CH0_RX_APT_CFG7A = 16'b0000000001110000,
  parameter [15:0] CH0_RX_APT_CFG7B = 16'b0000000001110000,
  parameter [15:0] CH0_RX_APT_CFG8A = 16'b0000100000000000,
  parameter [15:0] CH0_RX_APT_CFG8B = 16'b0000100000000000,
  parameter [15:0] CH0_RX_APT_CFG9A = 16'b0000000001110000,
  parameter [15:0] CH0_RX_APT_CFG9B = 16'b0000000001110000,
  parameter [15:0] CH0_RX_APT_CTRL_CFG2 = 16'b0000000000000100,
  parameter [15:0] CH0_RX_APT_CTRL_CFG3 = 16'b0000000000000000,
  parameter [15:0] CH0_RX_CAL_CFG0A = 16'b0000000000000000,
  parameter [15:0] CH0_RX_CAL_CFG0B = 16'b0011001100110000,
  parameter [15:0] CH0_RX_CAL_CFG1A = 16'b1110111011100001,
  parameter [15:0] CH0_RX_CAL_CFG1B = 16'b1111111100000100,
  parameter [15:0] CH0_RX_CAL_CFG2A = 16'b0000000000000000,
  parameter [15:0] CH0_RX_CAL_CFG2B = 16'b0011000000000000,
  parameter [15:0] CH0_RX_CDR_CFG0A = 16'b0000000000000011,
  parameter [15:0] CH0_RX_CDR_CFG0B = 16'b0000000000000000,
  parameter [15:0] CH0_RX_CDR_CFG1A = 16'b0000000000000000,
  parameter [15:0] CH0_RX_CDR_CFG1B = 16'b0000000000000000,
  parameter [15:0] CH0_RX_CDR_CFG2A = 16'b1001000101100100,
  parameter [15:0] CH0_RX_CDR_CFG2B = 16'b0000000100100100,
  parameter [15:0] CH0_RX_CDR_CFG3A = 16'b0101110011110110,
  parameter [15:0] CH0_RX_CDR_CFG3B = 16'b0000000000001011,
  parameter [15:0] CH0_RX_CDR_CFG4A = 16'b0000000000000110,
  parameter [15:0] CH0_RX_CDR_CFG4B = 16'b0000000000000000,
  parameter [15:0] CH0_RX_CLKGN_CFG0 = 16'b1100000000000000,
  parameter [15:0] CH0_RX_CLKGN_CFG1 = 16'b0000000110000000,
  parameter [15:0] CH0_RX_CTLE_CFG0 = 16'b0011010010001000,
  parameter [15:0] CH0_RX_CTLE_CFG1 = 16'b0010000000100010,
  parameter [15:0] CH0_RX_CTLE_CFG2 = 16'b0000101000000000,
  parameter [15:0] CH0_RX_CTLE_CFG3 = 16'b1111001001000000,
  parameter [15:0] CH0_RX_DSP_CFG = 16'b0000000000000000,
  parameter [15:0] CH0_RX_MON_CFG = 16'b0000000000000000,
  parameter [15:0] CH0_RX_PAD_CFG0 = 16'b0001111000000000,
  parameter [15:0] CH0_RX_PAD_CFG1 = 16'b0001100000001010,
  parameter [15:0] CH0_RX_PCS_CFG0 = 16'b0000000100000000,
  parameter [15:0] CH0_RX_PCS_CFG1 = 16'b0000000000000000,
  parameter [15:0] CH0_TX_ANA_CFG0 = 16'b0000001010101111,
  parameter [15:0] CH0_TX_ANA_CFG1 = 16'b0000000100000000,
  parameter [15:0] CH0_TX_ANA_CFG2 = 16'b1000000000010100,
  parameter [15:0] CH0_TX_ANA_CFG3 = 16'b0000101000100010,
  parameter [15:0] CH0_TX_ANA_CFG4 = 16'b0000000000000000,
  parameter [15:0] CH0_TX_CAL_CFG0 = 16'b0000000000100000,
  parameter [15:0] CH0_TX_CAL_CFG1 = 16'b0000000001000000,
  parameter [15:0] CH0_TX_DRV_CFG0 = 16'b0000000000000000,
  parameter [15:0] CH0_TX_DRV_CFG1 = 16'b0000000000100111,
  parameter [15:0] CH0_TX_DRV_CFG2 = 16'b0000000000000000,
  parameter [15:0] CH0_TX_DRV_CFG3 = 16'b0110110000000000,
  parameter [15:0] CH0_TX_DRV_CFG4 = 16'b0000000011000101,
  parameter [15:0] CH0_TX_DRV_CFG5 = 16'b0000000000000000,
  parameter [15:0] CH0_TX_LPBK_CFG0 = 16'b0000000000000011,
  parameter [15:0] CH0_TX_LPBK_CFG1 = 16'b0000000000000000,
  parameter [15:0] CH0_TX_PCS_CFG0 = 16'b0000000101100000,
  parameter [15:0] CH0_TX_PCS_CFG1 = 16'b0000000000000000,
  parameter [15:0] CH0_TX_PCS_CFG10 = 16'b0000000000000000,
  parameter [15:0] CH0_TX_PCS_CFG11 = 16'b0000000000000000,
  parameter [15:0] CH0_TX_PCS_CFG12 = 16'b0000000000000000,
  parameter [15:0] CH0_TX_PCS_CFG13 = 16'b0000000000000000,
  parameter [15:0] CH0_TX_PCS_CFG14 = 16'b0000000000000000,
  parameter [15:0] CH0_TX_PCS_CFG15 = 16'b0000000000000000,
  parameter [15:0] CH0_TX_PCS_CFG16 = 16'b0000000000000000,
  parameter [15:0] CH0_TX_PCS_CFG17 = 16'b0000000000000000,
  parameter [15:0] CH0_TX_PCS_CFG2 = 16'b0000000000000000,
  parameter [15:0] CH0_TX_PCS_CFG3 = 16'b0000000000000000,
  parameter [15:0] CH0_TX_PCS_CFG4 = 16'b0000000000000000,
  parameter [15:0] CH0_TX_PCS_CFG5 = 16'b0000000000000000,
  parameter [15:0] CH0_TX_PCS_CFG6 = 16'b0000000000000000,
  parameter [15:0] CH0_TX_PCS_CFG7 = 16'b0000000000000000,
  parameter [15:0] CH0_TX_PCS_CFG8 = 16'b0000000000000000,
  parameter [15:0] CH0_TX_PCS_CFG9 = 16'b0000000000000000,
  parameter [15:0] CH1_A_CH_CFG0 = 16'b0000000000000011,
  parameter [15:0] CH1_A_CH_CFG1 = 16'b0000000000000000,
  parameter [15:0] CH1_A_CH_CFG2 = 16'b0111101111110000,
  parameter [15:0] CH1_A_CH_CFG3 = 16'b0000000000000000,
  parameter [15:0] CH1_A_CH_CFG4 = 16'b0000000000000000,
  parameter [15:0] CH1_A_CH_CFG5 = 16'b0000000000000000,
  parameter [15:0] CH1_A_CH_CFG6 = 16'b0000000000000000,
  parameter [15:0] CH1_RST_LP_CFG0 = 16'b0001000000010000,
  parameter [15:0] CH1_RST_LP_CFG1 = 16'b0011001000010000,
  parameter [15:0] CH1_RST_LP_CFG2 = 16'b0110010100000100,
  parameter [15:0] CH1_RST_LP_CFG3 = 16'b0011001000010000,
  parameter [15:0] CH1_RST_LP_CFG4 = 16'b0000000001000100,
  parameter [15:0] CH1_RST_LP_ID_CFG0 = 16'b0011000001110000,
  parameter [15:0] CH1_RST_LP_ID_CFG1 = 16'b0001000000010000,
  parameter [15:0] CH1_RST_TIME_CFG0 = 16'b0000010000100001,
  parameter [15:0] CH1_RST_TIME_CFG1 = 16'b0000010000100001,
  parameter [15:0] CH1_RST_TIME_CFG2 = 16'b0000010000100001,
  parameter [15:0] CH1_RST_TIME_CFG3 = 16'b0000010000100000,
  parameter [15:0] CH1_RST_TIME_CFG4 = 16'b0000010000100001,
  parameter [15:0] CH1_RST_TIME_CFG5 = 16'b0000000000000001,
  parameter [15:0] CH1_RST_TIME_CFG6 = 16'b0000000000100001,
  parameter [15:0] CH1_RX_ADC_CFG0 = 16'b0011010010001111,
  parameter [15:0] CH1_RX_ADC_CFG1 = 16'b0011111001010101,
  parameter [15:0] CH1_RX_ANA_CFG0 = 16'b1000000000011101,
  parameter [15:0] CH1_RX_ANA_CFG1 = 16'b1110100010000000,
  parameter [15:0] CH1_RX_ANA_CFG2 = 16'b0000000010001010,
  parameter [15:0] CH1_RX_APT_CFG0A = 16'b0000000001110000,
  parameter [15:0] CH1_RX_APT_CFG0B = 16'b0000000001110000,
  parameter [15:0] CH1_RX_APT_CFG10A = 16'b0000000001110000,
  parameter [15:0] CH1_RX_APT_CFG10B = 16'b0000000001010000,
  parameter [15:0] CH1_RX_APT_CFG11A = 16'b0000000001000000,
  parameter [15:0] CH1_RX_APT_CFG11B = 16'b0000000001110000,
  parameter [15:0] CH1_RX_APT_CFG12A = 16'b0000000001010000,
  parameter [15:0] CH1_RX_APT_CFG12B = 16'b0000000000000000,
  parameter [15:0] CH1_RX_APT_CFG13A = 16'b0000000000000000,
  parameter [15:0] CH1_RX_APT_CFG13B = 16'b0000000000000000,
  parameter [15:0] CH1_RX_APT_CFG14A = 16'b0000000000000000,
  parameter [15:0] CH1_RX_APT_CFG14B = 16'b0000000000000000,
  parameter [15:0] CH1_RX_APT_CFG15A = 16'b0000000000000000,
  parameter [15:0] CH1_RX_APT_CFG15B = 16'b0000100000000000,
  parameter [15:0] CH1_RX_APT_CFG16A = 16'b0000000000000000,
  parameter [15:0] CH1_RX_APT_CFG16B = 16'b0010000000000000,
  parameter [15:0] CH1_RX_APT_CFG17A = 16'b0000000000000000,
  parameter [15:0] CH1_RX_APT_CFG17B = 16'b0001000001000000,
  parameter [15:0] CH1_RX_APT_CFG18A = 16'b0000100000100000,
  parameter [15:0] CH1_RX_APT_CFG18B = 16'b0000100010000000,
  parameter [15:0] CH1_RX_APT_CFG19A = 16'b0000000000000000,
  parameter [15:0] CH1_RX_APT_CFG19B = 16'b0000100000000000,
  parameter [15:0] CH1_RX_APT_CFG1A = 16'b0000000001110000,
  parameter [15:0] CH1_RX_APT_CFG1B = 16'b0000000001110000,
  parameter [15:0] CH1_RX_APT_CFG20A = 16'b1110000000100000,
  parameter [15:0] CH1_RX_APT_CFG20B = 16'b0000000001000000,
  parameter [15:0] CH1_RX_APT_CFG21A = 16'b0001000000000100,
  parameter [15:0] CH1_RX_APT_CFG21B = 16'b0000000000000000,
  parameter [15:0] CH1_RX_APT_CFG22A = 16'b0000000001110000,
  parameter [15:0] CH1_RX_APT_CFG22B = 16'b0000000001110000,
  parameter [15:0] CH1_RX_APT_CFG23A = 16'b0000100000000000,
  parameter [15:0] CH1_RX_APT_CFG23B = 16'b0000100000000000,
  parameter [15:0] CH1_RX_APT_CFG24A = 16'b0000000000000000,
  parameter [15:0] CH1_RX_APT_CFG24B = 16'b0000000000000000,
  parameter [15:0] CH1_RX_APT_CFG25A = 16'b0000000000000000,
  parameter [15:0] CH1_RX_APT_CFG25B = 16'b0000000000000000,
  parameter [15:0] CH1_RX_APT_CFG26A = 16'b0000000000000000,
  parameter [15:0] CH1_RX_APT_CFG26B = 16'b0000000000000000,
  parameter [15:0] CH1_RX_APT_CFG27A = 16'b0100000000000000,
  parameter [15:0] CH1_RX_APT_CFG27B = 16'b0000000000000000,
  parameter [15:0] CH1_RX_APT_CFG28A = 16'b0000000000000000,
  parameter [15:0] CH1_RX_APT_CFG28B = 16'b1000000000000000,
  parameter [15:0] CH1_RX_APT_CFG2A = 16'b0000000001110000,
  parameter [15:0] CH1_RX_APT_CFG2B = 16'b0000000001110000,
  parameter [15:0] CH1_RX_APT_CFG3A = 16'b0000000001110000,
  parameter [15:0] CH1_RX_APT_CFG3B = 16'b0000000001110000,
  parameter [15:0] CH1_RX_APT_CFG4A = 16'b0000000001110000,
  parameter [15:0] CH1_RX_APT_CFG4B = 16'b0000000001110000,
  parameter [15:0] CH1_RX_APT_CFG5A = 16'b0000000001110000,
  parameter [15:0] CH1_RX_APT_CFG5B = 16'b0000000001110000,
  parameter [15:0] CH1_RX_APT_CFG6A = 16'b0000000001110000,
  parameter [15:0] CH1_RX_APT_CFG6B = 16'b0000000001110000,
  parameter [15:0] CH1_RX_APT_CFG7A = 16'b0000000001110000,
  parameter [15:0] CH1_RX_APT_CFG7B = 16'b0000000001110000,
  parameter [15:0] CH1_RX_APT_CFG8A = 16'b0000100000000000,
  parameter [15:0] CH1_RX_APT_CFG8B = 16'b0000100000000000,
  parameter [15:0] CH1_RX_APT_CFG9A = 16'b0000000001110000,
  parameter [15:0] CH1_RX_APT_CFG9B = 16'b0000000001110000,
  parameter [15:0] CH1_RX_APT_CTRL_CFG2 = 16'b0000000000000100,
  parameter [15:0] CH1_RX_APT_CTRL_CFG3 = 16'b0000000000000000,
  parameter [15:0] CH1_RX_CAL_CFG0A = 16'b0000000000000000,
  parameter [15:0] CH1_RX_CAL_CFG0B = 16'b0011001100110000,
  parameter [15:0] CH1_RX_CAL_CFG1A = 16'b1110111011100001,
  parameter [15:0] CH1_RX_CAL_CFG1B = 16'b1111111100000100,
  parameter [15:0] CH1_RX_CAL_CFG2A = 16'b0000000000000000,
  parameter [15:0] CH1_RX_CAL_CFG2B = 16'b0011000000000000,
  parameter [15:0] CH1_RX_CDR_CFG0A = 16'b0000000000000011,
  parameter [15:0] CH1_RX_CDR_CFG0B = 16'b0000000000000000,
  parameter [15:0] CH1_RX_CDR_CFG1A = 16'b0000000000000000,
  parameter [15:0] CH1_RX_CDR_CFG1B = 16'b0000000000000000,
  parameter [15:0] CH1_RX_CDR_CFG2A = 16'b1001000101100100,
  parameter [15:0] CH1_RX_CDR_CFG2B = 16'b0000000100100100,
  parameter [15:0] CH1_RX_CDR_CFG3A = 16'b0101110011110110,
  parameter [15:0] CH1_RX_CDR_CFG3B = 16'b0000000000001011,
  parameter [15:0] CH1_RX_CDR_CFG4A = 16'b0000000000000110,
  parameter [15:0] CH1_RX_CDR_CFG4B = 16'b0000000000000000,
  parameter [15:0] CH1_RX_CLKGN_CFG0 = 16'b1100000000000000,
  parameter [15:0] CH1_RX_CLKGN_CFG1 = 16'b0000000110000000,
  parameter [15:0] CH1_RX_CTLE_CFG0 = 16'b0011010010001000,
  parameter [15:0] CH1_RX_CTLE_CFG1 = 16'b0010000000100010,
  parameter [15:0] CH1_RX_CTLE_CFG2 = 16'b0000101000000000,
  parameter [15:0] CH1_RX_CTLE_CFG3 = 16'b1111001001000000,
  parameter [15:0] CH1_RX_DSP_CFG = 16'b0000000000000000,
  parameter [15:0] CH1_RX_MON_CFG = 16'b0000000000000000,
  parameter [15:0] CH1_RX_PAD_CFG0 = 16'b0001111000000000,
  parameter [15:0] CH1_RX_PAD_CFG1 = 16'b0001100000001010,
  parameter [15:0] CH1_RX_PCS_CFG0 = 16'b0000000100000000,
  parameter [15:0] CH1_RX_PCS_CFG1 = 16'b0000000000000000,
  parameter [15:0] CH1_TX_ANA_CFG0 = 16'b0000001010101111,
  parameter [15:0] CH1_TX_ANA_CFG1 = 16'b0000000100000000,
  parameter [15:0] CH1_TX_ANA_CFG2 = 16'b1000000000010100,
  parameter [15:0] CH1_TX_ANA_CFG3 = 16'b0000101000100010,
  parameter [15:0] CH1_TX_ANA_CFG4 = 16'b0000000000000000,
  parameter [15:0] CH1_TX_CAL_CFG0 = 16'b0000000000100000,
  parameter [15:0] CH1_TX_CAL_CFG1 = 16'b0000000001000000,
  parameter [15:0] CH1_TX_DRV_CFG0 = 16'b0000000000000000,
  parameter [15:0] CH1_TX_DRV_CFG1 = 16'b0000000000100111,
  parameter [15:0] CH1_TX_DRV_CFG2 = 16'b0000000000000000,
  parameter [15:0] CH1_TX_DRV_CFG3 = 16'b0110110000000000,
  parameter [15:0] CH1_TX_DRV_CFG4 = 16'b0000000011000101,
  parameter [15:0] CH1_TX_DRV_CFG5 = 16'b0000000000000000,
  parameter [15:0] CH1_TX_LPBK_CFG0 = 16'b0000000000000011,
  parameter [15:0] CH1_TX_LPBK_CFG1 = 16'b0000000000000000,
  parameter [15:0] CH1_TX_PCS_CFG0 = 16'b0000000101100000,
  parameter [15:0] CH1_TX_PCS_CFG1 = 16'b0000000000000000,
  parameter [15:0] CH1_TX_PCS_CFG10 = 16'b0000000000000000,
  parameter [15:0] CH1_TX_PCS_CFG11 = 16'b0000000000000000,
  parameter [15:0] CH1_TX_PCS_CFG12 = 16'b0000000000000000,
  parameter [15:0] CH1_TX_PCS_CFG13 = 16'b0000000000000000,
  parameter [15:0] CH1_TX_PCS_CFG14 = 16'b0000000000000000,
  parameter [15:0] CH1_TX_PCS_CFG15 = 16'b0000000000000000,
  parameter [15:0] CH1_TX_PCS_CFG16 = 16'b0000000000000000,
  parameter [15:0] CH1_TX_PCS_CFG17 = 16'b0000000000000000,
  parameter [15:0] CH1_TX_PCS_CFG2 = 16'b0000000000000000,
  parameter [15:0] CH1_TX_PCS_CFG3 = 16'b0000000000000000,
  parameter [15:0] CH1_TX_PCS_CFG4 = 16'b0000000000000000,
  parameter [15:0] CH1_TX_PCS_CFG5 = 16'b0000000000000000,
  parameter [15:0] CH1_TX_PCS_CFG6 = 16'b0000000000000000,
  parameter [15:0] CH1_TX_PCS_CFG7 = 16'b0000000000000000,
  parameter [15:0] CH1_TX_PCS_CFG8 = 16'b0000000000000000,
  parameter [15:0] CH1_TX_PCS_CFG9 = 16'b0000000000000000,
  parameter real DATARATE = 10.000,
  parameter [15:0] DRPEN_CFG = 16'b0000000000000000,
  parameter [15:0] FEC_CFG0 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG1 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG10 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG11 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG12 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG13 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG14 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG15 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG16 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG17 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG18 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG19 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG2 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG20 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG21 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG22 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG23 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG24 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG25 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG26 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG27 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG3 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG4 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG5 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG6 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG7 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG8 = 16'b0000000000000000,
  parameter [15:0] FEC_CFG9 = 16'b0000000000000000,
  parameter FEC_MODE = "BYPASS",
  parameter real INS_LOSS_NYQ = 20.000,
  parameter integer INTERFACE_WIDTH = 64,
  parameter MODULATION_MODE = "NRZ",
  parameter [15:0] PLL_CFG0 = 16'b0001100111110000,
  parameter [15:0] PLL_CFG1 = 16'b0000111101110000,
  parameter [15:0] PLL_CFG2 = 16'b1000000111101000,
  parameter [15:0] PLL_CFG3 = 16'b0100000000000000,
  parameter [15:0] PLL_CFG4 = 16'b0111111111101010,
  parameter [15:0] PLL_CFG5 = 16'b0100101100111000,
  parameter [15:0] PLL_CFG6 = 16'b0000000000100101,
  parameter [15:0] PLL_CRS_CTRL_CFG0 = 16'b0000101100100000,
  parameter [15:0] PLL_CRS_CTRL_CFG1 = 16'b1100010111010100,
  parameter [0:0] PLL_IPS_PIN_EN = 1'b1,
  parameter integer PLL_IPS_REFCLK_SEL = 0,
  parameter [0:0] RCALSAP_TESTEN = 1'b0,
  parameter [0:0] RCAL_APROBE = 1'b0,
  parameter [15:0] RST_CFG = 16'b0000000000000010,
  parameter [15:0] RST_PLL_CFG0 = 16'b0111011000010100,
  parameter [15:0] SAP_CFG0 = 16'b0000000000000000,
  parameter [15:0] SDM_CFG0 = 16'b0001100001000000,
  parameter [15:0] SDM_CFG1 = 16'b0000000000000000,
  parameter [15:0] SDM_CFG2 = 16'b0000000000000000,
  parameter [15:0] SDM_SEED_CFG0 = 16'b0000000000000000,
  parameter [15:0] SDM_SEED_CFG1 = 16'b0000000000000000,
  parameter SIM_DEVICE = "ULTRASCALE_PLUS_ES1",
  parameter integer TX_AMPLITUDE_SWING = 250
)(
  output [27:0] CH0_AXISTDATA,
  output CH0_AXISTLAST,
  output CH0_AXISTVALID,
  output [31:0] CH0_DMONITOROUT,
  output CH0_DMONITOROUTCLK,
  output CH0_GTMTXN,
  output CH0_GTMTXP,
  output [15:0] CH0_PCSRSVDOUT,
  output [15:0] CH0_PMARSVDOUT,
  output CH0_RESETEXCEPTION,
  output [2:0] CH0_RXBUFSTATUS,
  output [255:0] CH0_RXDATA,
  output [3:0] CH0_RXDATAFLAGS,
  output CH0_RXDATAISAM,
  output CH0_RXDATASTART,
  output CH0_RXOUTCLK,
  output CH0_RXPMARESETDONE,
  output CH0_RXPRBSERR,
  output CH0_RXPRBSLOCKED,
  output CH0_RXPRGDIVRESETDONE,
  output CH0_RXPROGDIVCLK,
  output CH0_RXRESETDONE,
  output [1:0] CH0_TXBUFSTATUS,
  output CH0_TXOUTCLK,
  output CH0_TXPMARESETDONE,
  output CH0_TXPRGDIVRESETDONE,
  output CH0_TXPROGDIVCLK,
  output CH0_TXRESETDONE,
  output [27:0] CH1_AXISTDATA,
  output CH1_AXISTLAST,
  output CH1_AXISTVALID,
  output [31:0] CH1_DMONITOROUT,
  output CH1_DMONITOROUTCLK,
  output CH1_GTMTXN,
  output CH1_GTMTXP,
  output [15:0] CH1_PCSRSVDOUT,
  output [15:0] CH1_PMARSVDOUT,
  output CH1_RESETEXCEPTION,
  output [2:0] CH1_RXBUFSTATUS,
  output [255:0] CH1_RXDATA,
  output [3:0] CH1_RXDATAFLAGS,
  output CH1_RXDATAISAM,
  output CH1_RXDATASTART,
  output CH1_RXOUTCLK,
  output CH1_RXPMARESETDONE,
  output CH1_RXPRBSERR,
  output CH1_RXPRBSLOCKED,
  output CH1_RXPRGDIVRESETDONE,
  output CH1_RXPROGDIVCLK,
  output CH1_RXRESETDONE,
  output [1:0] CH1_TXBUFSTATUS,
  output CH1_TXOUTCLK,
  output CH1_TXPMARESETDONE,
  output CH1_TXPRGDIVRESETDONE,
  output CH1_TXPROGDIVCLK,
  output CH1_TXRESETDONE,
  output CLKTESTSIG2PAD,
  output DMONITOROUTPLLCLK,
  output [15:0] DRPDO,
  output DRPRDY,
  output FECRX0ALIGNED,
  output FECRX0CORRCWINC,
  output FECRX0CWINC,
  output FECRX0UNCORRCWINC,
  output FECRX1ALIGNED,
  output FECRX1CORRCWINC,
  output FECRX1CWINC,
  output FECRX1UNCORRCWINC,
  output [7:0] FECRXLN0BITERR0TO1INC,
  output [7:0] FECRXLN0BITERR1TO0INC,
  output [14:0] FECRXLN0DLY,
  output [3:0] FECRXLN0ERRCNTINC,
  output [1:0] FECRXLN0MAPPING,
  output [7:0] FECRXLN1BITERR0TO1INC,
  output [7:0] FECRXLN1BITERR1TO0INC,
  output [14:0] FECRXLN1DLY,
  output [3:0] FECRXLN1ERRCNTINC,
  output [1:0] FECRXLN1MAPPING,
  output [7:0] FECRXLN2BITERR0TO1INC,
  output [7:0] FECRXLN2BITERR1TO0INC,
  output [14:0] FECRXLN2DLY,
  output [3:0] FECRXLN2ERRCNTINC,
  output [1:0] FECRXLN2MAPPING,
  output [7:0] FECRXLN3BITERR0TO1INC,
  output [7:0] FECRXLN3BITERR1TO0INC,
  output [14:0] FECRXLN3DLY,
  output [3:0] FECRXLN3ERRCNTINC,
  output [1:0] FECRXLN3MAPPING,
  output FECTRXLN0LOCK,
  output FECTRXLN1LOCK,
  output FECTRXLN2LOCK,
  output FECTRXLN3LOCK,
  output GTPOWERGOOD,
  output PLLFBCLKLOST,
  output PLLLOCK,
  output PLLREFCLKLOST,
  output PLLREFCLKMONITOR,
  output PLLRESETDONE,
  output [15:0] PLLRSVDOUT,
  output RCALCMP,
  output [4:0] RCALOUT,
  output RXRECCLK0,
  output RXRECCLK1,

  input BGBYPASSB,
  input BGMONITORENB,
  input BGPDB,
  input [4:0] BGRCALOVRD,
  input BGRCALOVRDENB,
  input CH0_AXISEN,
  input CH0_AXISRST,
  input CH0_AXISTRDY,
  input CH0_CFGRESET,
  input CH0_DMONFIFORESET,
  input CH0_DMONITORCLK,
  input CH0_GTMRXN,
  input CH0_GTMRXP,
  input CH0_GTRXRESET,
  input CH0_GTTXRESET,
  input [2:0] CH0_LOOPBACK,
  input [15:0] CH0_PCSRSVDIN,
  input [15:0] CH0_PMARSVDIN,
  input CH0_RESETOVRD,
  input CH0_RXADAPTRESET,
  input CH0_RXADCCALRESET,
  input CH0_RXADCCLKGENRESET,
  input CH0_RXBUFRESET,
  input CH0_RXCDRFREQOS,
  input CH0_RXCDRFRRESET,
  input CH0_RXCDRHOLD,
  input CH0_RXCDRINCPCTRL,
  input CH0_RXCDROVRDEN,
  input CH0_RXCDRPHRESET,
  input CH0_RXDFERESET,
  input CH0_RXDSPRESET,
  input CH0_RXEQTRAINING,
  input CH0_RXEYESCANRESET,
  input CH0_RXFECRESET,
  input [2:0] CH0_RXOUTCLKSEL,
  input CH0_RXPCSRESET,
  input [3:0] CH0_RXPCSRESETMASK,
  input CH0_RXPMARESET,
  input [7:0] CH0_RXPMARESETMASK,
  input CH0_RXPOLARITY,
  input CH0_RXPRBSCNTSTOP,
  input CH0_RXPRBSCSCNTRST,
  input [3:0] CH0_RXPRBSPTN,
  input CH0_RXPROGDIVRESET,
  input CH0_RXQPRBSEN,
  input [1:0] CH0_RXRESETMODE,
  input CH0_RXSPCSEQADV,
  input CH0_RXUSRCLK,
  input CH0_RXUSRCLK2,
  input CH0_RXUSRRDY,
  input CH0_RXUSRSTART,
  input CH0_RXUSRSTOP,
  input CH0_TXCKALRESET,
  input [5:0] CH0_TXCTLFIRDAT,
  input [255:0] CH0_TXDATA,
  input CH0_TXDATASTART,
  input [4:0] CH0_TXDRVAMP,
  input [5:0] CH0_TXEMPMAIN,
  input [4:0] CH0_TXEMPPOST,
  input [4:0] CH0_TXEMPPRE,
  input [3:0] CH0_TXEMPPRE2,
  input CH0_TXFECRESET,
  input CH0_TXINHIBIT,
  input CH0_TXMUXDCDEXHOLD,
  input CH0_TXMUXDCDORWREN,
  input [2:0] CH0_TXOUTCLKSEL,
  input CH0_TXPCSRESET,
  input [1:0] CH0_TXPCSRESETMASK,
  input CH0_TXPMARESET,
  input [1:0] CH0_TXPMARESETMASK,
  input CH0_TXPOLARITY,
  input CH0_TXPRBSINERR,
  input [3:0] CH0_TXPRBSPTN,
  input CH0_TXPROGDIVRESET,
  input CH0_TXQPRBSEN,
  input [1:0] CH0_TXRESETMODE,
  input CH0_TXSPCSEQADV,
  input CH0_TXUSRCLK,
  input CH0_TXUSRCLK2,
  input CH0_TXUSRRDY,
  input CH1_AXISEN,
  input CH1_AXISRST,
  input CH1_AXISTRDY,
  input CH1_CFGRESET,
  input CH1_DMONFIFORESET,
  input CH1_DMONITORCLK,
  input CH1_GTMRXN,
  input CH1_GTMRXP,
  input CH1_GTRXRESET,
  input CH1_GTTXRESET,
  input [2:0] CH1_LOOPBACK,
  input [15:0] CH1_PCSRSVDIN,
  input [15:0] CH1_PMARSVDIN,
  input CH1_RESETOVRD,
  input CH1_RXADAPTRESET,
  input CH1_RXADCCALRESET,
  input CH1_RXADCCLKGENRESET,
  input CH1_RXBUFRESET,
  input CH1_RXCDRFREQOS,
  input CH1_RXCDRFRRESET,
  input CH1_RXCDRHOLD,
  input CH1_RXCDRINCPCTRL,
  input CH1_RXCDROVRDEN,
  input CH1_RXCDRPHRESET,
  input CH1_RXDFERESET,
  input CH1_RXDSPRESET,
  input CH1_RXEQTRAINING,
  input CH1_RXEYESCANRESET,
  input CH1_RXFECRESET,
  input [2:0] CH1_RXOUTCLKSEL,
  input CH1_RXPCSRESET,
  input [3:0] CH1_RXPCSRESETMASK,
  input CH1_RXPMARESET,
  input [7:0] CH1_RXPMARESETMASK,
  input CH1_RXPOLARITY,
  input CH1_RXPRBSCNTSTOP,
  input CH1_RXPRBSCSCNTRST,
  input [3:0] CH1_RXPRBSPTN,
  input CH1_RXPROGDIVRESET,
  input CH1_RXQPRBSEN,
  input [1:0] CH1_RXRESETMODE,
  input CH1_RXSPCSEQADV,
  input CH1_RXUSRCLK,
  input CH1_RXUSRCLK2,
  input CH1_RXUSRRDY,
  input CH1_RXUSRSTART,
  input CH1_RXUSRSTOP,
  input CH1_TXCKALRESET,
  input [5:0] CH1_TXCTLFIRDAT,
  input [255:0] CH1_TXDATA,
  input CH1_TXDATASTART,
  input [4:0] CH1_TXDRVAMP,
  input [5:0] CH1_TXEMPMAIN,
  input [4:0] CH1_TXEMPPOST,
  input [4:0] CH1_TXEMPPRE,
  input [3:0] CH1_TXEMPPRE2,
  input CH1_TXFECRESET,
  input CH1_TXINHIBIT,
  input CH1_TXMUXDCDEXHOLD,
  input CH1_TXMUXDCDORWREN,
  input [2:0] CH1_TXOUTCLKSEL,
  input CH1_TXPCSRESET,
  input [1:0] CH1_TXPCSRESETMASK,
  input CH1_TXPMARESET,
  input [1:0] CH1_TXPMARESETMASK,
  input CH1_TXPOLARITY,
  input CH1_TXPRBSINERR,
  input [3:0] CH1_TXPRBSPTN,
  input CH1_TXPROGDIVRESET,
  input CH1_TXQPRBSEN,
  input [1:0] CH1_TXRESETMODE,
  input CH1_TXSPCSEQADV,
  input CH1_TXUSRCLK,
  input CH1_TXUSRCLK2,
  input CH1_TXUSRRDY,
  input [10:0] DRPADDR,
  input DRPCLK,
  input [15:0] DRPDI,
  input DRPEN,
  input DRPRST,
  input DRPWE,
  input FECCTRLRX0BITSLIPFS,
  input FECCTRLRX1BITSLIPFS,
  input GTGREFCLK2PLL,
  input GTNORTHREFCLK,
  input GTREFCLK,
  input GTSOUTHREFCLK,
  input [7:0] PLLFBDIV,
  input PLLMONCLK,
  input PLLPD,
  input [2:0] PLLREFCLKSEL,
  input PLLRESET,
  input PLLRESETBYPASSMODE,
  input [1:0] PLLRESETMASK,
  input [15:0] PLLRSVDIN,
  input RCALENB,
  input [25:0] SDMDATA,
  input SDMTOGGLE
);

// define constants
  localparam MODULE_NAME = "GTM_DUAL";
  
  reg trig_attr;
// include dynamic registers - XILINX test only
`ifdef XIL_DR
  `include "GTM_DUAL_dr.v"
`else
  reg [15:0] A_CFG_REG = A_CFG;
  reg [15:0] A_SDM_DATA_CFG0_REG = A_SDM_DATA_CFG0;
  reg [15:0] A_SDM_DATA_CFG1_REG = A_SDM_DATA_CFG1;
  reg [15:0] BIAS_CFG0_REG = BIAS_CFG0;
  reg [15:0] BIAS_CFG1_REG = BIAS_CFG1;
  reg [15:0] BIAS_CFG2_REG = BIAS_CFG2;
  reg [15:0] BIAS_CFG3_REG = BIAS_CFG3;
  reg [15:0] BIAS_CFG4_REG = BIAS_CFG4;
  reg [15:0] BIAS_CFG5_REG = BIAS_CFG5;
  reg [15:0] BIAS_CFG6_REG = BIAS_CFG6;
  reg [15:0] BIAS_CFG7_REG = BIAS_CFG7;
  reg [15:0] CH0_A_CH_CFG0_REG = CH0_A_CH_CFG0;
  reg [15:0] CH0_A_CH_CFG1_REG = CH0_A_CH_CFG1;
  reg [15:0] CH0_A_CH_CFG2_REG = CH0_A_CH_CFG2;
  reg [15:0] CH0_A_CH_CFG3_REG = CH0_A_CH_CFG3;
  reg [15:0] CH0_A_CH_CFG4_REG = CH0_A_CH_CFG4;
  reg [15:0] CH0_A_CH_CFG5_REG = CH0_A_CH_CFG5;
  reg [15:0] CH0_A_CH_CFG6_REG = CH0_A_CH_CFG6;
  reg [15:0] CH0_RST_LP_CFG0_REG = CH0_RST_LP_CFG0;
  reg [15:0] CH0_RST_LP_CFG1_REG = CH0_RST_LP_CFG1;
  reg [15:0] CH0_RST_LP_CFG2_REG = CH0_RST_LP_CFG2;
  reg [15:0] CH0_RST_LP_CFG3_REG = CH0_RST_LP_CFG3;
  reg [15:0] CH0_RST_LP_CFG4_REG = CH0_RST_LP_CFG4;
  reg [15:0] CH0_RST_LP_ID_CFG0_REG = CH0_RST_LP_ID_CFG0;
  reg [15:0] CH0_RST_LP_ID_CFG1_REG = CH0_RST_LP_ID_CFG1;
  reg [15:0] CH0_RST_TIME_CFG0_REG = CH0_RST_TIME_CFG0;
  reg [15:0] CH0_RST_TIME_CFG1_REG = CH0_RST_TIME_CFG1;
  reg [15:0] CH0_RST_TIME_CFG2_REG = CH0_RST_TIME_CFG2;
  reg [15:0] CH0_RST_TIME_CFG3_REG = CH0_RST_TIME_CFG3;
  reg [15:0] CH0_RST_TIME_CFG4_REG = CH0_RST_TIME_CFG4;
  reg [15:0] CH0_RST_TIME_CFG5_REG = CH0_RST_TIME_CFG5;
  reg [15:0] CH0_RST_TIME_CFG6_REG = CH0_RST_TIME_CFG6;
  reg [15:0] CH0_RX_ADC_CFG0_REG = CH0_RX_ADC_CFG0;
  reg [15:0] CH0_RX_ADC_CFG1_REG = CH0_RX_ADC_CFG1;
  reg [15:0] CH0_RX_ANA_CFG0_REG = CH0_RX_ANA_CFG0;
  reg [15:0] CH0_RX_ANA_CFG1_REG = CH0_RX_ANA_CFG1;
  reg [15:0] CH0_RX_ANA_CFG2_REG = CH0_RX_ANA_CFG2;
  reg [15:0] CH0_RX_APT_CFG0A_REG = CH0_RX_APT_CFG0A;
  reg [15:0] CH0_RX_APT_CFG0B_REG = CH0_RX_APT_CFG0B;
  reg [15:0] CH0_RX_APT_CFG10A_REG = CH0_RX_APT_CFG10A;
  reg [15:0] CH0_RX_APT_CFG10B_REG = CH0_RX_APT_CFG10B;
  reg [15:0] CH0_RX_APT_CFG11A_REG = CH0_RX_APT_CFG11A;
  reg [15:0] CH0_RX_APT_CFG11B_REG = CH0_RX_APT_CFG11B;
  reg [15:0] CH0_RX_APT_CFG12A_REG = CH0_RX_APT_CFG12A;
  reg [15:0] CH0_RX_APT_CFG12B_REG = CH0_RX_APT_CFG12B;
  reg [15:0] CH0_RX_APT_CFG13A_REG = CH0_RX_APT_CFG13A;
  reg [15:0] CH0_RX_APT_CFG13B_REG = CH0_RX_APT_CFG13B;
  reg [15:0] CH0_RX_APT_CFG14A_REG = CH0_RX_APT_CFG14A;
  reg [15:0] CH0_RX_APT_CFG14B_REG = CH0_RX_APT_CFG14B;
  reg [15:0] CH0_RX_APT_CFG15A_REG = CH0_RX_APT_CFG15A;
  reg [15:0] CH0_RX_APT_CFG15B_REG = CH0_RX_APT_CFG15B;
  reg [15:0] CH0_RX_APT_CFG16A_REG = CH0_RX_APT_CFG16A;
  reg [15:0] CH0_RX_APT_CFG16B_REG = CH0_RX_APT_CFG16B;
  reg [15:0] CH0_RX_APT_CFG17A_REG = CH0_RX_APT_CFG17A;
  reg [15:0] CH0_RX_APT_CFG17B_REG = CH0_RX_APT_CFG17B;
  reg [15:0] CH0_RX_APT_CFG18A_REG = CH0_RX_APT_CFG18A;
  reg [15:0] CH0_RX_APT_CFG18B_REG = CH0_RX_APT_CFG18B;
  reg [15:0] CH0_RX_APT_CFG19A_REG = CH0_RX_APT_CFG19A;
  reg [15:0] CH0_RX_APT_CFG19B_REG = CH0_RX_APT_CFG19B;
  reg [15:0] CH0_RX_APT_CFG1A_REG = CH0_RX_APT_CFG1A;
  reg [15:0] CH0_RX_APT_CFG1B_REG = CH0_RX_APT_CFG1B;
  reg [15:0] CH0_RX_APT_CFG20A_REG = CH0_RX_APT_CFG20A;
  reg [15:0] CH0_RX_APT_CFG20B_REG = CH0_RX_APT_CFG20B;
  reg [15:0] CH0_RX_APT_CFG21A_REG = CH0_RX_APT_CFG21A;
  reg [15:0] CH0_RX_APT_CFG21B_REG = CH0_RX_APT_CFG21B;
  reg [15:0] CH0_RX_APT_CFG22A_REG = CH0_RX_APT_CFG22A;
  reg [15:0] CH0_RX_APT_CFG22B_REG = CH0_RX_APT_CFG22B;
  reg [15:0] CH0_RX_APT_CFG23A_REG = CH0_RX_APT_CFG23A;
  reg [15:0] CH0_RX_APT_CFG23B_REG = CH0_RX_APT_CFG23B;
  reg [15:0] CH0_RX_APT_CFG24A_REG = CH0_RX_APT_CFG24A;
  reg [15:0] CH0_RX_APT_CFG24B_REG = CH0_RX_APT_CFG24B;
  reg [15:0] CH0_RX_APT_CFG25A_REG = CH0_RX_APT_CFG25A;
  reg [15:0] CH0_RX_APT_CFG25B_REG = CH0_RX_APT_CFG25B;
  reg [15:0] CH0_RX_APT_CFG26A_REG = CH0_RX_APT_CFG26A;
  reg [15:0] CH0_RX_APT_CFG26B_REG = CH0_RX_APT_CFG26B;
  reg [15:0] CH0_RX_APT_CFG27A_REG = CH0_RX_APT_CFG27A;
  reg [15:0] CH0_RX_APT_CFG27B_REG = CH0_RX_APT_CFG27B;
  reg [15:0] CH0_RX_APT_CFG28A_REG = CH0_RX_APT_CFG28A;
  reg [15:0] CH0_RX_APT_CFG28B_REG = CH0_RX_APT_CFG28B;
  reg [15:0] CH0_RX_APT_CFG2A_REG = CH0_RX_APT_CFG2A;
  reg [15:0] CH0_RX_APT_CFG2B_REG = CH0_RX_APT_CFG2B;
  reg [15:0] CH0_RX_APT_CFG3A_REG = CH0_RX_APT_CFG3A;
  reg [15:0] CH0_RX_APT_CFG3B_REG = CH0_RX_APT_CFG3B;
  reg [15:0] CH0_RX_APT_CFG4A_REG = CH0_RX_APT_CFG4A;
  reg [15:0] CH0_RX_APT_CFG4B_REG = CH0_RX_APT_CFG4B;
  reg [15:0] CH0_RX_APT_CFG5A_REG = CH0_RX_APT_CFG5A;
  reg [15:0] CH0_RX_APT_CFG5B_REG = CH0_RX_APT_CFG5B;
  reg [15:0] CH0_RX_APT_CFG6A_REG = CH0_RX_APT_CFG6A;
  reg [15:0] CH0_RX_APT_CFG6B_REG = CH0_RX_APT_CFG6B;
  reg [15:0] CH0_RX_APT_CFG7A_REG = CH0_RX_APT_CFG7A;
  reg [15:0] CH0_RX_APT_CFG7B_REG = CH0_RX_APT_CFG7B;
  reg [15:0] CH0_RX_APT_CFG8A_REG = CH0_RX_APT_CFG8A;
  reg [15:0] CH0_RX_APT_CFG8B_REG = CH0_RX_APT_CFG8B;
  reg [15:0] CH0_RX_APT_CFG9A_REG = CH0_RX_APT_CFG9A;
  reg [15:0] CH0_RX_APT_CFG9B_REG = CH0_RX_APT_CFG9B;
  reg [15:0] CH0_RX_APT_CTRL_CFG2_REG = CH0_RX_APT_CTRL_CFG2;
  reg [15:0] CH0_RX_APT_CTRL_CFG3_REG = CH0_RX_APT_CTRL_CFG3;
  reg [15:0] CH0_RX_CAL_CFG0A_REG = CH0_RX_CAL_CFG0A;
  reg [15:0] CH0_RX_CAL_CFG0B_REG = CH0_RX_CAL_CFG0B;
  reg [15:0] CH0_RX_CAL_CFG1A_REG = CH0_RX_CAL_CFG1A;
  reg [15:0] CH0_RX_CAL_CFG1B_REG = CH0_RX_CAL_CFG1B;
  reg [15:0] CH0_RX_CAL_CFG2A_REG = CH0_RX_CAL_CFG2A;
  reg [15:0] CH0_RX_CAL_CFG2B_REG = CH0_RX_CAL_CFG2B;
  reg [15:0] CH0_RX_CDR_CFG0A_REG = CH0_RX_CDR_CFG0A;
  reg [15:0] CH0_RX_CDR_CFG0B_REG = CH0_RX_CDR_CFG0B;
  reg [15:0] CH0_RX_CDR_CFG1A_REG = CH0_RX_CDR_CFG1A;
  reg [15:0] CH0_RX_CDR_CFG1B_REG = CH0_RX_CDR_CFG1B;
  reg [15:0] CH0_RX_CDR_CFG2A_REG = CH0_RX_CDR_CFG2A;
  reg [15:0] CH0_RX_CDR_CFG2B_REG = CH0_RX_CDR_CFG2B;
  reg [15:0] CH0_RX_CDR_CFG3A_REG = CH0_RX_CDR_CFG3A;
  reg [15:0] CH0_RX_CDR_CFG3B_REG = CH0_RX_CDR_CFG3B;
  reg [15:0] CH0_RX_CDR_CFG4A_REG = CH0_RX_CDR_CFG4A;
  reg [15:0] CH0_RX_CDR_CFG4B_REG = CH0_RX_CDR_CFG4B;
  reg [15:0] CH0_RX_CLKGN_CFG0_REG = CH0_RX_CLKGN_CFG0;
  reg [15:0] CH0_RX_CLKGN_CFG1_REG = CH0_RX_CLKGN_CFG1;
  reg [15:0] CH0_RX_CTLE_CFG0_REG = CH0_RX_CTLE_CFG0;
  reg [15:0] CH0_RX_CTLE_CFG1_REG = CH0_RX_CTLE_CFG1;
  reg [15:0] CH0_RX_CTLE_CFG2_REG = CH0_RX_CTLE_CFG2;
  reg [15:0] CH0_RX_CTLE_CFG3_REG = CH0_RX_CTLE_CFG3;
  reg [15:0] CH0_RX_DSP_CFG_REG = CH0_RX_DSP_CFG;
  reg [15:0] CH0_RX_MON_CFG_REG = CH0_RX_MON_CFG;
  reg [15:0] CH0_RX_PAD_CFG0_REG = CH0_RX_PAD_CFG0;
  reg [15:0] CH0_RX_PAD_CFG1_REG = CH0_RX_PAD_CFG1;
  reg [15:0] CH0_RX_PCS_CFG0_REG = CH0_RX_PCS_CFG0;
  reg [15:0] CH0_RX_PCS_CFG1_REG = CH0_RX_PCS_CFG1;
  reg [15:0] CH0_TX_ANA_CFG0_REG = CH0_TX_ANA_CFG0;
  reg [15:0] CH0_TX_ANA_CFG1_REG = CH0_TX_ANA_CFG1;
  reg [15:0] CH0_TX_ANA_CFG2_REG = CH0_TX_ANA_CFG2;
  reg [15:0] CH0_TX_ANA_CFG3_REG = CH0_TX_ANA_CFG3;
  reg [15:0] CH0_TX_ANA_CFG4_REG = CH0_TX_ANA_CFG4;
  reg [15:0] CH0_TX_CAL_CFG0_REG = CH0_TX_CAL_CFG0;
  reg [15:0] CH0_TX_CAL_CFG1_REG = CH0_TX_CAL_CFG1;
  reg [15:0] CH0_TX_DRV_CFG0_REG = CH0_TX_DRV_CFG0;
  reg [15:0] CH0_TX_DRV_CFG1_REG = CH0_TX_DRV_CFG1;
  reg [15:0] CH0_TX_DRV_CFG2_REG = CH0_TX_DRV_CFG2;
  reg [15:0] CH0_TX_DRV_CFG3_REG = CH0_TX_DRV_CFG3;
  reg [15:0] CH0_TX_DRV_CFG4_REG = CH0_TX_DRV_CFG4;
  reg [15:0] CH0_TX_DRV_CFG5_REG = CH0_TX_DRV_CFG5;
  reg [15:0] CH0_TX_LPBK_CFG0_REG = CH0_TX_LPBK_CFG0;
  reg [15:0] CH0_TX_LPBK_CFG1_REG = CH0_TX_LPBK_CFG1;
  reg [15:0] CH0_TX_PCS_CFG0_REG = CH0_TX_PCS_CFG0;
  reg [15:0] CH0_TX_PCS_CFG1_REG = CH0_TX_PCS_CFG1;
  reg [15:0] CH0_TX_PCS_CFG10_REG = CH0_TX_PCS_CFG10;
  reg [15:0] CH0_TX_PCS_CFG11_REG = CH0_TX_PCS_CFG11;
  reg [15:0] CH0_TX_PCS_CFG12_REG = CH0_TX_PCS_CFG12;
  reg [15:0] CH0_TX_PCS_CFG13_REG = CH0_TX_PCS_CFG13;
  reg [15:0] CH0_TX_PCS_CFG14_REG = CH0_TX_PCS_CFG14;
  reg [15:0] CH0_TX_PCS_CFG15_REG = CH0_TX_PCS_CFG15;
  reg [15:0] CH0_TX_PCS_CFG16_REG = CH0_TX_PCS_CFG16;
  reg [15:0] CH0_TX_PCS_CFG17_REG = CH0_TX_PCS_CFG17;
  reg [15:0] CH0_TX_PCS_CFG2_REG = CH0_TX_PCS_CFG2;
  reg [15:0] CH0_TX_PCS_CFG3_REG = CH0_TX_PCS_CFG3;
  reg [15:0] CH0_TX_PCS_CFG4_REG = CH0_TX_PCS_CFG4;
  reg [15:0] CH0_TX_PCS_CFG5_REG = CH0_TX_PCS_CFG5;
  reg [15:0] CH0_TX_PCS_CFG6_REG = CH0_TX_PCS_CFG6;
  reg [15:0] CH0_TX_PCS_CFG7_REG = CH0_TX_PCS_CFG7;
  reg [15:0] CH0_TX_PCS_CFG8_REG = CH0_TX_PCS_CFG8;
  reg [15:0] CH0_TX_PCS_CFG9_REG = CH0_TX_PCS_CFG9;
  reg [15:0] CH1_A_CH_CFG0_REG = CH1_A_CH_CFG0;
  reg [15:0] CH1_A_CH_CFG1_REG = CH1_A_CH_CFG1;
  reg [15:0] CH1_A_CH_CFG2_REG = CH1_A_CH_CFG2;
  reg [15:0] CH1_A_CH_CFG3_REG = CH1_A_CH_CFG3;
  reg [15:0] CH1_A_CH_CFG4_REG = CH1_A_CH_CFG4;
  reg [15:0] CH1_A_CH_CFG5_REG = CH1_A_CH_CFG5;
  reg [15:0] CH1_A_CH_CFG6_REG = CH1_A_CH_CFG6;
  reg [15:0] CH1_RST_LP_CFG0_REG = CH1_RST_LP_CFG0;
  reg [15:0] CH1_RST_LP_CFG1_REG = CH1_RST_LP_CFG1;
  reg [15:0] CH1_RST_LP_CFG2_REG = CH1_RST_LP_CFG2;
  reg [15:0] CH1_RST_LP_CFG3_REG = CH1_RST_LP_CFG3;
  reg [15:0] CH1_RST_LP_CFG4_REG = CH1_RST_LP_CFG4;
  reg [15:0] CH1_RST_LP_ID_CFG0_REG = CH1_RST_LP_ID_CFG0;
  reg [15:0] CH1_RST_LP_ID_CFG1_REG = CH1_RST_LP_ID_CFG1;
  reg [15:0] CH1_RST_TIME_CFG0_REG = CH1_RST_TIME_CFG0;
  reg [15:0] CH1_RST_TIME_CFG1_REG = CH1_RST_TIME_CFG1;
  reg [15:0] CH1_RST_TIME_CFG2_REG = CH1_RST_TIME_CFG2;
  reg [15:0] CH1_RST_TIME_CFG3_REG = CH1_RST_TIME_CFG3;
  reg [15:0] CH1_RST_TIME_CFG4_REG = CH1_RST_TIME_CFG4;
  reg [15:0] CH1_RST_TIME_CFG5_REG = CH1_RST_TIME_CFG5;
  reg [15:0] CH1_RST_TIME_CFG6_REG = CH1_RST_TIME_CFG6;
  reg [15:0] CH1_RX_ADC_CFG0_REG = CH1_RX_ADC_CFG0;
  reg [15:0] CH1_RX_ADC_CFG1_REG = CH1_RX_ADC_CFG1;
  reg [15:0] CH1_RX_ANA_CFG0_REG = CH1_RX_ANA_CFG0;
  reg [15:0] CH1_RX_ANA_CFG1_REG = CH1_RX_ANA_CFG1;
  reg [15:0] CH1_RX_ANA_CFG2_REG = CH1_RX_ANA_CFG2;
  reg [15:0] CH1_RX_APT_CFG0A_REG = CH1_RX_APT_CFG0A;
  reg [15:0] CH1_RX_APT_CFG0B_REG = CH1_RX_APT_CFG0B;
  reg [15:0] CH1_RX_APT_CFG10A_REG = CH1_RX_APT_CFG10A;
  reg [15:0] CH1_RX_APT_CFG10B_REG = CH1_RX_APT_CFG10B;
  reg [15:0] CH1_RX_APT_CFG11A_REG = CH1_RX_APT_CFG11A;
  reg [15:0] CH1_RX_APT_CFG11B_REG = CH1_RX_APT_CFG11B;
  reg [15:0] CH1_RX_APT_CFG12A_REG = CH1_RX_APT_CFG12A;
  reg [15:0] CH1_RX_APT_CFG12B_REG = CH1_RX_APT_CFG12B;
  reg [15:0] CH1_RX_APT_CFG13A_REG = CH1_RX_APT_CFG13A;
  reg [15:0] CH1_RX_APT_CFG13B_REG = CH1_RX_APT_CFG13B;
  reg [15:0] CH1_RX_APT_CFG14A_REG = CH1_RX_APT_CFG14A;
  reg [15:0] CH1_RX_APT_CFG14B_REG = CH1_RX_APT_CFG14B;
  reg [15:0] CH1_RX_APT_CFG15A_REG = CH1_RX_APT_CFG15A;
  reg [15:0] CH1_RX_APT_CFG15B_REG = CH1_RX_APT_CFG15B;
  reg [15:0] CH1_RX_APT_CFG16A_REG = CH1_RX_APT_CFG16A;
  reg [15:0] CH1_RX_APT_CFG16B_REG = CH1_RX_APT_CFG16B;
  reg [15:0] CH1_RX_APT_CFG17A_REG = CH1_RX_APT_CFG17A;
  reg [15:0] CH1_RX_APT_CFG17B_REG = CH1_RX_APT_CFG17B;
  reg [15:0] CH1_RX_APT_CFG18A_REG = CH1_RX_APT_CFG18A;
  reg [15:0] CH1_RX_APT_CFG18B_REG = CH1_RX_APT_CFG18B;
  reg [15:0] CH1_RX_APT_CFG19A_REG = CH1_RX_APT_CFG19A;
  reg [15:0] CH1_RX_APT_CFG19B_REG = CH1_RX_APT_CFG19B;
  reg [15:0] CH1_RX_APT_CFG1A_REG = CH1_RX_APT_CFG1A;
  reg [15:0] CH1_RX_APT_CFG1B_REG = CH1_RX_APT_CFG1B;
  reg [15:0] CH1_RX_APT_CFG20A_REG = CH1_RX_APT_CFG20A;
  reg [15:0] CH1_RX_APT_CFG20B_REG = CH1_RX_APT_CFG20B;
  reg [15:0] CH1_RX_APT_CFG21A_REG = CH1_RX_APT_CFG21A;
  reg [15:0] CH1_RX_APT_CFG21B_REG = CH1_RX_APT_CFG21B;
  reg [15:0] CH1_RX_APT_CFG22A_REG = CH1_RX_APT_CFG22A;
  reg [15:0] CH1_RX_APT_CFG22B_REG = CH1_RX_APT_CFG22B;
  reg [15:0] CH1_RX_APT_CFG23A_REG = CH1_RX_APT_CFG23A;
  reg [15:0] CH1_RX_APT_CFG23B_REG = CH1_RX_APT_CFG23B;
  reg [15:0] CH1_RX_APT_CFG24A_REG = CH1_RX_APT_CFG24A;
  reg [15:0] CH1_RX_APT_CFG24B_REG = CH1_RX_APT_CFG24B;
  reg [15:0] CH1_RX_APT_CFG25A_REG = CH1_RX_APT_CFG25A;
  reg [15:0] CH1_RX_APT_CFG25B_REG = CH1_RX_APT_CFG25B;
  reg [15:0] CH1_RX_APT_CFG26A_REG = CH1_RX_APT_CFG26A;
  reg [15:0] CH1_RX_APT_CFG26B_REG = CH1_RX_APT_CFG26B;
  reg [15:0] CH1_RX_APT_CFG27A_REG = CH1_RX_APT_CFG27A;
  reg [15:0] CH1_RX_APT_CFG27B_REG = CH1_RX_APT_CFG27B;
  reg [15:0] CH1_RX_APT_CFG28A_REG = CH1_RX_APT_CFG28A;
  reg [15:0] CH1_RX_APT_CFG28B_REG = CH1_RX_APT_CFG28B;
  reg [15:0] CH1_RX_APT_CFG2A_REG = CH1_RX_APT_CFG2A;
  reg [15:0] CH1_RX_APT_CFG2B_REG = CH1_RX_APT_CFG2B;
  reg [15:0] CH1_RX_APT_CFG3A_REG = CH1_RX_APT_CFG3A;
  reg [15:0] CH1_RX_APT_CFG3B_REG = CH1_RX_APT_CFG3B;
  reg [15:0] CH1_RX_APT_CFG4A_REG = CH1_RX_APT_CFG4A;
  reg [15:0] CH1_RX_APT_CFG4B_REG = CH1_RX_APT_CFG4B;
  reg [15:0] CH1_RX_APT_CFG5A_REG = CH1_RX_APT_CFG5A;
  reg [15:0] CH1_RX_APT_CFG5B_REG = CH1_RX_APT_CFG5B;
  reg [15:0] CH1_RX_APT_CFG6A_REG = CH1_RX_APT_CFG6A;
  reg [15:0] CH1_RX_APT_CFG6B_REG = CH1_RX_APT_CFG6B;
  reg [15:0] CH1_RX_APT_CFG7A_REG = CH1_RX_APT_CFG7A;
  reg [15:0] CH1_RX_APT_CFG7B_REG = CH1_RX_APT_CFG7B;
  reg [15:0] CH1_RX_APT_CFG8A_REG = CH1_RX_APT_CFG8A;
  reg [15:0] CH1_RX_APT_CFG8B_REG = CH1_RX_APT_CFG8B;
  reg [15:0] CH1_RX_APT_CFG9A_REG = CH1_RX_APT_CFG9A;
  reg [15:0] CH1_RX_APT_CFG9B_REG = CH1_RX_APT_CFG9B;
  reg [15:0] CH1_RX_APT_CTRL_CFG2_REG = CH1_RX_APT_CTRL_CFG2;
  reg [15:0] CH1_RX_APT_CTRL_CFG3_REG = CH1_RX_APT_CTRL_CFG3;
  reg [15:0] CH1_RX_CAL_CFG0A_REG = CH1_RX_CAL_CFG0A;
  reg [15:0] CH1_RX_CAL_CFG0B_REG = CH1_RX_CAL_CFG0B;
  reg [15:0] CH1_RX_CAL_CFG1A_REG = CH1_RX_CAL_CFG1A;
  reg [15:0] CH1_RX_CAL_CFG1B_REG = CH1_RX_CAL_CFG1B;
  reg [15:0] CH1_RX_CAL_CFG2A_REG = CH1_RX_CAL_CFG2A;
  reg [15:0] CH1_RX_CAL_CFG2B_REG = CH1_RX_CAL_CFG2B;
  reg [15:0] CH1_RX_CDR_CFG0A_REG = CH1_RX_CDR_CFG0A;
  reg [15:0] CH1_RX_CDR_CFG0B_REG = CH1_RX_CDR_CFG0B;
  reg [15:0] CH1_RX_CDR_CFG1A_REG = CH1_RX_CDR_CFG1A;
  reg [15:0] CH1_RX_CDR_CFG1B_REG = CH1_RX_CDR_CFG1B;
  reg [15:0] CH1_RX_CDR_CFG2A_REG = CH1_RX_CDR_CFG2A;
  reg [15:0] CH1_RX_CDR_CFG2B_REG = CH1_RX_CDR_CFG2B;
  reg [15:0] CH1_RX_CDR_CFG3A_REG = CH1_RX_CDR_CFG3A;
  reg [15:0] CH1_RX_CDR_CFG3B_REG = CH1_RX_CDR_CFG3B;
  reg [15:0] CH1_RX_CDR_CFG4A_REG = CH1_RX_CDR_CFG4A;
  reg [15:0] CH1_RX_CDR_CFG4B_REG = CH1_RX_CDR_CFG4B;
  reg [15:0] CH1_RX_CLKGN_CFG0_REG = CH1_RX_CLKGN_CFG0;
  reg [15:0] CH1_RX_CLKGN_CFG1_REG = CH1_RX_CLKGN_CFG1;
  reg [15:0] CH1_RX_CTLE_CFG0_REG = CH1_RX_CTLE_CFG0;
  reg [15:0] CH1_RX_CTLE_CFG1_REG = CH1_RX_CTLE_CFG1;
  reg [15:0] CH1_RX_CTLE_CFG2_REG = CH1_RX_CTLE_CFG2;
  reg [15:0] CH1_RX_CTLE_CFG3_REG = CH1_RX_CTLE_CFG3;
  reg [15:0] CH1_RX_DSP_CFG_REG = CH1_RX_DSP_CFG;
  reg [15:0] CH1_RX_MON_CFG_REG = CH1_RX_MON_CFG;
  reg [15:0] CH1_RX_PAD_CFG0_REG = CH1_RX_PAD_CFG0;
  reg [15:0] CH1_RX_PAD_CFG1_REG = CH1_RX_PAD_CFG1;
  reg [15:0] CH1_RX_PCS_CFG0_REG = CH1_RX_PCS_CFG0;
  reg [15:0] CH1_RX_PCS_CFG1_REG = CH1_RX_PCS_CFG1;
  reg [15:0] CH1_TX_ANA_CFG0_REG = CH1_TX_ANA_CFG0;
  reg [15:0] CH1_TX_ANA_CFG1_REG = CH1_TX_ANA_CFG1;
  reg [15:0] CH1_TX_ANA_CFG2_REG = CH1_TX_ANA_CFG2;
  reg [15:0] CH1_TX_ANA_CFG3_REG = CH1_TX_ANA_CFG3;
  reg [15:0] CH1_TX_ANA_CFG4_REG = CH1_TX_ANA_CFG4;
  reg [15:0] CH1_TX_CAL_CFG0_REG = CH1_TX_CAL_CFG0;
  reg [15:0] CH1_TX_CAL_CFG1_REG = CH1_TX_CAL_CFG1;
  reg [15:0] CH1_TX_DRV_CFG0_REG = CH1_TX_DRV_CFG0;
  reg [15:0] CH1_TX_DRV_CFG1_REG = CH1_TX_DRV_CFG1;
  reg [15:0] CH1_TX_DRV_CFG2_REG = CH1_TX_DRV_CFG2;
  reg [15:0] CH1_TX_DRV_CFG3_REG = CH1_TX_DRV_CFG3;
  reg [15:0] CH1_TX_DRV_CFG4_REG = CH1_TX_DRV_CFG4;
  reg [15:0] CH1_TX_DRV_CFG5_REG = CH1_TX_DRV_CFG5;
  reg [15:0] CH1_TX_LPBK_CFG0_REG = CH1_TX_LPBK_CFG0;
  reg [15:0] CH1_TX_LPBK_CFG1_REG = CH1_TX_LPBK_CFG1;
  reg [15:0] CH1_TX_PCS_CFG0_REG = CH1_TX_PCS_CFG0;
  reg [15:0] CH1_TX_PCS_CFG1_REG = CH1_TX_PCS_CFG1;
  reg [15:0] CH1_TX_PCS_CFG10_REG = CH1_TX_PCS_CFG10;
  reg [15:0] CH1_TX_PCS_CFG11_REG = CH1_TX_PCS_CFG11;
  reg [15:0] CH1_TX_PCS_CFG12_REG = CH1_TX_PCS_CFG12;
  reg [15:0] CH1_TX_PCS_CFG13_REG = CH1_TX_PCS_CFG13;
  reg [15:0] CH1_TX_PCS_CFG14_REG = CH1_TX_PCS_CFG14;
  reg [15:0] CH1_TX_PCS_CFG15_REG = CH1_TX_PCS_CFG15;
  reg [15:0] CH1_TX_PCS_CFG16_REG = CH1_TX_PCS_CFG16;
  reg [15:0] CH1_TX_PCS_CFG17_REG = CH1_TX_PCS_CFG17;
  reg [15:0] CH1_TX_PCS_CFG2_REG = CH1_TX_PCS_CFG2;
  reg [15:0] CH1_TX_PCS_CFG3_REG = CH1_TX_PCS_CFG3;
  reg [15:0] CH1_TX_PCS_CFG4_REG = CH1_TX_PCS_CFG4;
  reg [15:0] CH1_TX_PCS_CFG5_REG = CH1_TX_PCS_CFG5;
  reg [15:0] CH1_TX_PCS_CFG6_REG = CH1_TX_PCS_CFG6;
  reg [15:0] CH1_TX_PCS_CFG7_REG = CH1_TX_PCS_CFG7;
  reg [15:0] CH1_TX_PCS_CFG8_REG = CH1_TX_PCS_CFG8;
  reg [15:0] CH1_TX_PCS_CFG9_REG = CH1_TX_PCS_CFG9;
  real DATARATE_REG = DATARATE;
  reg [15:0] DRPEN_CFG_REG = DRPEN_CFG;
  reg [15:0] FEC_CFG0_REG = FEC_CFG0;
  reg [15:0] FEC_CFG1_REG = FEC_CFG1;
  reg [15:0] FEC_CFG10_REG = FEC_CFG10;
  reg [15:0] FEC_CFG11_REG = FEC_CFG11;
  reg [15:0] FEC_CFG12_REG = FEC_CFG12;
  reg [15:0] FEC_CFG13_REG = FEC_CFG13;
  reg [15:0] FEC_CFG14_REG = FEC_CFG14;
  reg [15:0] FEC_CFG15_REG = FEC_CFG15;
  reg [15:0] FEC_CFG16_REG = FEC_CFG16;
  reg [15:0] FEC_CFG17_REG = FEC_CFG17;
  reg [15:0] FEC_CFG18_REG = FEC_CFG18;
  reg [15:0] FEC_CFG19_REG = FEC_CFG19;
  reg [15:0] FEC_CFG2_REG = FEC_CFG2;
  reg [15:0] FEC_CFG20_REG = FEC_CFG20;
  reg [15:0] FEC_CFG21_REG = FEC_CFG21;
  reg [15:0] FEC_CFG22_REG = FEC_CFG22;
  reg [15:0] FEC_CFG23_REG = FEC_CFG23;
  reg [15:0] FEC_CFG24_REG = FEC_CFG24;
  reg [15:0] FEC_CFG25_REG = FEC_CFG25;
  reg [15:0] FEC_CFG26_REG = FEC_CFG26;
  reg [15:0] FEC_CFG27_REG = FEC_CFG27;
  reg [15:0] FEC_CFG3_REG = FEC_CFG3;
  reg [15:0] FEC_CFG4_REG = FEC_CFG4;
  reg [15:0] FEC_CFG5_REG = FEC_CFG5;
  reg [15:0] FEC_CFG6_REG = FEC_CFG6;
  reg [15:0] FEC_CFG7_REG = FEC_CFG7;
  reg [15:0] FEC_CFG8_REG = FEC_CFG8;
  reg [15:0] FEC_CFG9_REG = FEC_CFG9;
  reg [48:1] FEC_MODE_REG = FEC_MODE;
  real INS_LOSS_NYQ_REG = INS_LOSS_NYQ;
  reg [8:0] INTERFACE_WIDTH_REG = INTERFACE_WIDTH;
  reg [32:1] MODULATION_MODE_REG = MODULATION_MODE;
  reg [15:0] PLL_CFG0_REG = PLL_CFG0;
  reg [15:0] PLL_CFG1_REG = PLL_CFG1;
  reg [15:0] PLL_CFG2_REG = PLL_CFG2;
  reg [15:0] PLL_CFG3_REG = PLL_CFG3;
  reg [15:0] PLL_CFG4_REG = PLL_CFG4;
  reg [15:0] PLL_CFG5_REG = PLL_CFG5;
  reg [15:0] PLL_CFG6_REG = PLL_CFG6;
  reg [15:0] PLL_CRS_CTRL_CFG0_REG = PLL_CRS_CTRL_CFG0;
  reg [15:0] PLL_CRS_CTRL_CFG1_REG = PLL_CRS_CTRL_CFG1;
  reg [0:0] PLL_IPS_PIN_EN_REG = PLL_IPS_PIN_EN;
  reg [2:0] PLL_IPS_REFCLK_SEL_REG = PLL_IPS_REFCLK_SEL;
  reg [0:0] RCALSAP_TESTEN_REG = RCALSAP_TESTEN;
  reg [0:0] RCAL_APROBE_REG = RCAL_APROBE;
  reg [15:0] RST_CFG_REG = RST_CFG;
  reg [15:0] RST_PLL_CFG0_REG = RST_PLL_CFG0;
  reg [15:0] SAP_CFG0_REG = SAP_CFG0;
  reg [15:0] SDM_CFG0_REG = SDM_CFG0;
  reg [15:0] SDM_CFG1_REG = SDM_CFG1;
  reg [15:0] SDM_CFG2_REG = SDM_CFG2;
  reg [15:0] SDM_SEED_CFG0_REG = SDM_SEED_CFG0;
  reg [15:0] SDM_SEED_CFG1_REG = SDM_SEED_CFG1;
  reg [152:1] SIM_DEVICE_REG = SIM_DEVICE;
  reg [10:0] TX_AMPLITUDE_SWING_REG = TX_AMPLITUDE_SWING;
`endif

`ifdef XIL_XECLIB
  wire [63:0] DATARATE_BIN;
  wire [63:0] INS_LOSS_NYQ_BIN;
`else
  reg [63:0] DATARATE_BIN;
  reg [63:0] INS_LOSS_NYQ_BIN;
`endif

`ifdef XIL_XECLIB
reg glblGSR = 1'b0;
`else
tri0 glblGSR = glbl.GSR;
`endif

  wire CH0_AXISTLAST_out;
  wire CH0_AXISTVALID_out;
  wire CH0_DMONITOROUTCLK_out;
  wire CH0_GTMTXN_out;
  wire CH0_GTMTXP_out;
  wire CH0_RESETEXCEPTION_out;
  wire CH0_RXDATAISAM_out;
  wire CH0_RXDATASTART_out;
  wire CH0_RXOUTCLK_out;
  wire CH0_RXPMARESETDONE_out;
  wire CH0_RXPRBSERR_out;
  wire CH0_RXPRBSLOCKED_out;
  wire CH0_RXPRGDIVRESETDONE_out;
  wire CH0_RXPROGDIVCLK_out;
  wire CH0_RXRESETDONE_out;
  wire CH0_TXOUTCLK_out;
  wire CH0_TXPMARESETDONE_out;
  wire CH0_TXPRGDIVRESETDONE_out;
  wire CH0_TXPROGDIVCLK_out;
  wire CH0_TXRESETDONE_out;
  wire CH1_AXISTLAST_out;
  wire CH1_AXISTVALID_out;
  wire CH1_DMONITOROUTCLK_out;
  wire CH1_GTMTXN_out;
  wire CH1_GTMTXP_out;
  wire CH1_RESETEXCEPTION_out;
  wire CH1_RXDATAISAM_out;
  wire CH1_RXDATASTART_out;
  wire CH1_RXOUTCLK_out;
  wire CH1_RXPMARESETDONE_out;
  wire CH1_RXPRBSERR_out;
  wire CH1_RXPRBSLOCKED_out;
  wire CH1_RXPRGDIVRESETDONE_out;
  wire CH1_RXPROGDIVCLK_out;
  wire CH1_RXRESETDONE_out;
  wire CH1_TXOUTCLK_out;
  wire CH1_TXPMARESETDONE_out;
  wire CH1_TXPRGDIVRESETDONE_out;
  wire CH1_TXPROGDIVCLK_out;
  wire CH1_TXRESETDONE_out;
  wire CLKTESTSIG2PAD_out;
  wire DMONITOROUTPLLCLK_out;
  wire DRPRDY_out;
  wire FECRX0ALIGNED_out;
  wire FECRX0CORRCWINC_out;
  wire FECRX0CWINC_out;
  wire FECRX0UNCORRCWINC_out;
  wire FECRX1ALIGNED_out;
  wire FECRX1CORRCWINC_out;
  wire FECRX1CWINC_out;
  wire FECRX1UNCORRCWINC_out;
  wire FECTRXLN0LOCK_out;
  wire FECTRXLN1LOCK_out;
  wire FECTRXLN2LOCK_out;
  wire FECTRXLN3LOCK_out;
  wire GTPOWERGOOD_out;
  wire PLLFBCLKLOST_out;
  wire PLLLOCK_out;
  wire PLLREFCLKLOST_out;
  wire PLLREFCLKMONITOR_out;
  wire PLLRESETDONE_out;
  wire RCALCMP_out;
  wire REFCLK2BUFG_out;
  wire REFCLKPDB_SA_out;
  wire RXRECCLK0_out;
  wire RXRECCLK1_out;
  wire [14:0] CH0_PCSSCANOUT_out;
  wire [14:0] CH1_PCSSCANOUT_out;
  wire [14:0] FECRXLN0DLY_out;
  wire [14:0] FECRXLN1DLY_out;
  wire [14:0] FECRXLN2DLY_out;
  wire [14:0] FECRXLN3DLY_out;
  wire [15:0] CH0_PCSRSVDOUT_out;
  wire [15:0] CH0_PMARSVDOUT_out;
  wire [15:0] CH1_PCSRSVDOUT_out;
  wire [15:0] CH1_PMARSVDOUT_out;
  wire [15:0] DRPDO_out;
  wire [15:0] PLLRSVDOUT_out;
  wire [199:0] FECSCANOUT_out;
  wire [1:0] CH0_TXBUFSTATUS_out;
  wire [1:0] CH1_TXBUFSTATUS_out;
  wire [1:0] FECRXLN0MAPPING_out;
  wire [1:0] FECRXLN1MAPPING_out;
  wire [1:0] FECRXLN2MAPPING_out;
  wire [1:0] FECRXLN3MAPPING_out;
  wire [24:0] CH0_PMASCANOUT_out;
  wire [24:0] CH1_PMASCANOUT_out;
  wire [255:0] CH0_RXDATA_out;
  wire [255:0] CH1_RXDATA_out;
  wire [27:0] CH0_AXISTDATA_out;
  wire [27:0] CH1_AXISTDATA_out;
  wire [2:0] CH0_RXBUFSTATUS_out;
  wire [2:0] CH1_RXBUFSTATUS_out;
  wire [31:0] CH0_DMONITOROUT_out;
  wire [31:0] CH1_DMONITOROUT_out;
  wire [3:0] CH0_RXDATAFLAGS_out;
  wire [3:0] CH1_RXDATAFLAGS_out;
  wire [3:0] FECRXLN0ERRCNTINC_out;
  wire [3:0] FECRXLN1ERRCNTINC_out;
  wire [3:0] FECRXLN2ERRCNTINC_out;
  wire [3:0] FECRXLN3ERRCNTINC_out;
  wire [4:0] RCALOUT_out;
  wire [7:0] FECRXLN0BITERR0TO1INC_out;
  wire [7:0] FECRXLN0BITERR1TO0INC_out;
  wire [7:0] FECRXLN1BITERR0TO1INC_out;
  wire [7:0] FECRXLN1BITERR1TO0INC_out;
  wire [7:0] FECRXLN2BITERR0TO1INC_out;
  wire [7:0] FECRXLN2BITERR1TO0INC_out;
  wire [7:0] FECRXLN3BITERR0TO1INC_out;
  wire [7:0] FECRXLN3BITERR1TO0INC_out;
  wire [7:0] PLLSCANOUT_out;

  wire BGBYPASSB_in;
  wire BGMONITORENB_in;
  wire BGPDB_in;
  wire BGRCALOVRDENB_in;
  wire CH0_AXISEN_in;
  wire CH0_AXISRST_in;
  wire CH0_AXISTRDY_in;
  wire CH0_BSRSERIAL_in;
  wire CH0_CFGRESET_in;
  wire CH0_DMONFIFORESET_in;
  wire CH0_DMONITORCLK_in;
  wire CH0_GTMRXN_in;
  wire CH0_GTMRXP_in;
  wire CH0_GTRXRESET_in;
  wire CH0_GTTXRESET_in;
  wire CH0_PCSSCANENB_in;
  wire CH0_PCSSCANMODEB_in;
  wire CH0_PCSSCANRSTB_in;
  wire CH0_PCSSCANRSTEN_in;
  wire CH0_PMASCANENB_in;
  wire CH0_PMASCANMODEB_in;
  wire CH0_PMASCANRSTEN_in;
  wire CH0_RESETOVRD_in;
  wire CH0_RXADAPTRESET_in;
  wire CH0_RXADCCALRESET_in;
  wire CH0_RXADCCLKGENRESET_in;
  wire CH0_RXBUFRESET_in;
  wire CH0_RXCDRFREQOS_in;
  wire CH0_RXCDRFRRESET_in;
  wire CH0_RXCDRHOLD_in;
  wire CH0_RXCDRINCPCTRL_in;
  wire CH0_RXCDROVRDEN_in;
  wire CH0_RXCDRPHRESET_in;
  wire CH0_RXDFERESET_in;
  wire CH0_RXDSPRESET_in;
  wire CH0_RXEQTRAINING_in;
  wire CH0_RXEYESCANRESET_in;
  wire CH0_RXFECRESET_in;
  wire CH0_RXPCSRESET_in;
  wire CH0_RXPMARESET_in;
  wire CH0_RXPOLARITY_in;
  wire CH0_RXPRBSCNTSTOP_in;
  wire CH0_RXPRBSCSCNTRST_in;
  wire CH0_RXPROGDIVRESET_in;
  wire CH0_RXQPRBSEN_in;
  wire CH0_RXSPCSEQADV_in;
  wire CH0_RXUSRCLK2_in;
  wire CH0_RXUSRCLK_in;
  wire CH0_RXUSRRDY_in;
  wire CH0_RXUSRSTART_in;
  wire CH0_RXUSRSTOP_in;
  wire CH0_TSTCLK0_in;
  wire CH0_TSTCLK1_in;
  wire CH0_TXCKALRESET_in;
  wire CH0_TXDATASTART_in;
  wire CH0_TXFECRESET_in;
  wire CH0_TXINHIBIT_in;
  wire CH0_TXMUXDCDEXHOLD_in;
  wire CH0_TXMUXDCDORWREN_in;
  wire CH0_TXPCSRESET_in;
  wire CH0_TXPMARESET_in;
  wire CH0_TXPOLARITY_in;
  wire CH0_TXPRBSINERR_in;
  wire CH0_TXPROGDIVRESET_in;
  wire CH0_TXQPRBSEN_in;
  wire CH0_TXSPCSEQADV_in;
  wire CH0_TXUSRCLK2_in;
  wire CH0_TXUSRCLK_in;
  wire CH0_TXUSRRDY_in;
  wire CH1_AXISEN_in;
  wire CH1_AXISRST_in;
  wire CH1_AXISTRDY_in;
  wire CH1_BSRSERIAL_in;
  wire CH1_CFGRESET_in;
  wire CH1_DMONFIFORESET_in;
  wire CH1_DMONITORCLK_in;
  wire CH1_GTMRXN_in;
  wire CH1_GTMRXP_in;
  wire CH1_GTRXRESET_in;
  wire CH1_GTTXRESET_in;
  wire CH1_PCSSCANENB_in;
  wire CH1_PCSSCANMODEB_in;
  wire CH1_PCSSCANRSTB_in;
  wire CH1_PCSSCANRSTEN_in;
  wire CH1_PMASCANENB_in;
  wire CH1_PMASCANMODEB_in;
  wire CH1_PMASCANRSTEN_in;
  wire CH1_RESETOVRD_in;
  wire CH1_RXADAPTRESET_in;
  wire CH1_RXADCCALRESET_in;
  wire CH1_RXADCCLKGENRESET_in;
  wire CH1_RXBUFRESET_in;
  wire CH1_RXCDRFREQOS_in;
  wire CH1_RXCDRFRRESET_in;
  wire CH1_RXCDRHOLD_in;
  wire CH1_RXCDRINCPCTRL_in;
  wire CH1_RXCDROVRDEN_in;
  wire CH1_RXCDRPHRESET_in;
  wire CH1_RXDFERESET_in;
  wire CH1_RXDSPRESET_in;
  wire CH1_RXEQTRAINING_in;
  wire CH1_RXEYESCANRESET_in;
  wire CH1_RXFECRESET_in;
  wire CH1_RXPCSRESET_in;
  wire CH1_RXPMARESET_in;
  wire CH1_RXPOLARITY_in;
  wire CH1_RXPRBSCNTSTOP_in;
  wire CH1_RXPRBSCSCNTRST_in;
  wire CH1_RXPROGDIVRESET_in;
  wire CH1_RXQPRBSEN_in;
  wire CH1_RXSPCSEQADV_in;
  wire CH1_RXUSRCLK2_in;
  wire CH1_RXUSRCLK_in;
  wire CH1_RXUSRRDY_in;
  wire CH1_RXUSRSTART_in;
  wire CH1_RXUSRSTOP_in;
  wire CH1_TSTCLK0_in;
  wire CH1_TSTCLK1_in;
  wire CH1_TXCKALRESET_in;
  wire CH1_TXDATASTART_in;
  wire CH1_TXFECRESET_in;
  wire CH1_TXINHIBIT_in;
  wire CH1_TXMUXDCDEXHOLD_in;
  wire CH1_TXMUXDCDORWREN_in;
  wire CH1_TXPCSRESET_in;
  wire CH1_TXPMARESET_in;
  wire CH1_TXPOLARITY_in;
  wire CH1_TXPRBSINERR_in;
  wire CH1_TXPROGDIVRESET_in;
  wire CH1_TXQPRBSEN_in;
  wire CH1_TXSPCSEQADV_in;
  wire CH1_TXUSRCLK2_in;
  wire CH1_TXUSRCLK_in;
  wire CH1_TXUSRRDY_in;
  wire CLKTESTSIG_in;
  wire DRPCLK_in;
  wire DRPEN_in;
  wire DRPRST_in;
  wire DRPWE_in;
  wire FECCTRLRX0BITSLIPFS_in;
  wire FECCTRLRX1BITSLIPFS_in;
  wire FECSCANCLK_in;
  wire FECSCANENB_in;
  wire FECSCANMODEB_in;
  wire FECSCANRSTB_in;
  wire GTGREFCLK2PLL_in;
  wire GTNORTHREFCLK_in;
  wire GTREFCLKPD_in;
  wire GTREFCLK_in;
  wire GTSOUTHREFCLK_in;
  wire PLLMONCLK_in;
  wire PLLPD_in;
  wire PLLRESETBYPASSMODE_in;
  wire PLLRESET_in;
  wire PLLSCANENB_in;
  wire PLLSCANMODEB_in;
  wire PLLSCANRSTEN_in;
  wire RCALENB_in;
  wire REFCLK2HROW_in;
  wire SDMTOGGLE_in;
  wire [10:0] DRPADDR_in;
  wire [14:0] CH0_PCSSCANIN_in;
  wire [14:0] CH1_PCSSCANIN_in;
  wire [15:0] CH0_PCSRSVDIN_in;
  wire [15:0] CH0_PMARSVDIN_in;
  wire [15:0] CH1_PCSRSVDIN_in;
  wire [15:0] CH1_PMARSVDIN_in;
  wire [15:0] DRPDI_in;
  wire [15:0] PLLRSVDIN_in;
  wire [199:0] FECSCANIN_in;
  wire [1:0] CH0_PCSSCANCLK_in;
  wire [1:0] CH0_RXRESETMODE_in;
  wire [1:0] CH0_TXPCSRESETMASK_in;
  wire [1:0] CH0_TXPMARESETMASK_in;
  wire [1:0] CH0_TXRESETMODE_in;
  wire [1:0] CH1_PCSSCANCLK_in;
  wire [1:0] CH1_RXRESETMODE_in;
  wire [1:0] CH1_TXPCSRESETMASK_in;
  wire [1:0] CH1_TXPMARESETMASK_in;
  wire [1:0] CH1_TXRESETMODE_in;
  wire [1:0] PLLRESETMASK_in;
  wire [1:0] RCALSEL_in;
  wire [24:0] CH0_PMASCANIN_in;
  wire [24:0] CH1_PMASCANIN_in;
  wire [255:0] CH0_TXDATA_in;
  wire [255:0] CH1_TXDATA_in;
  wire [25:0] SDMDATA_in;
  wire [2:0] CH0_LOOPBACK_in;
  wire [2:0] CH0_RXOUTCLKSEL_in;
  wire [2:0] CH0_TXOUTCLKSEL_in;
  wire [2:0] CH1_LOOPBACK_in;
  wire [2:0] CH1_RXOUTCLKSEL_in;
  wire [2:0] CH1_TXOUTCLKSEL_in;
  wire [2:0] PLLREFCLKSEL_in;
  wire [3:0] CH0_RXPCSRESETMASK_in;
  wire [3:0] CH0_RXPRBSPTN_in;
  wire [3:0] CH0_TXEMPPRE2_in;
  wire [3:0] CH0_TXPRBSPTN_in;
  wire [3:0] CH1_RXPCSRESETMASK_in;
  wire [3:0] CH1_RXPRBSPTN_in;
  wire [3:0] CH1_TXEMPPRE2_in;
  wire [3:0] CH1_TXPRBSPTN_in;
  wire [3:0] PLLSCANCLK_in;
  wire [4:0] BGRCALOVRD_in;
  wire [4:0] CH0_TXDRVAMP_in;
  wire [4:0] CH0_TXEMPPOST_in;
  wire [4:0] CH0_TXEMPPRE_in;
  wire [4:0] CH1_TXDRVAMP_in;
  wire [4:0] CH1_TXEMPPOST_in;
  wire [4:0] CH1_TXEMPPRE_in;
  wire [5:0] CH0_TXCTLFIRDAT_in;
  wire [5:0] CH0_TXEMPMAIN_in;
  wire [5:0] CH1_TXCTLFIRDAT_in;
  wire [5:0] CH1_TXEMPMAIN_in;
  wire [7:0] CH0_RXPMARESETMASK_in;
  wire [7:0] CH1_RXPMARESETMASK_in;
  wire [7:0] PLLFBDIV_in;
  wire [7:0] PLLSCANIN_in;
  wire [8:0] CH0_PMASCANCLK_in;
  wire [8:0] CH1_PMASCANCLK_in;

`ifdef XIL_TIMING
  wire CH0_AXISEN_delay;
  wire CH0_AXISTRDY_delay;
  wire CH0_RXEQTRAINING_delay;
  wire CH0_RXPOLARITY_delay;
  wire CH0_RXPRBSCNTSTOP_delay;
  wire CH0_RXQPRBSEN_delay;
  wire CH0_RXUSRCLK2_delay;
  wire CH0_RXUSRCLK_delay;
  wire CH0_TXDATASTART_delay;
  wire CH0_TXINHIBIT_delay;
  wire CH0_TXPOLARITY_delay;
  wire CH0_TXPRBSINERR_delay;
  wire CH0_TXQPRBSEN_delay;
  wire CH0_TXUSRCLK2_delay;
  wire CH0_TXUSRCLK_delay;
  wire CH1_AXISEN_delay;
  wire CH1_AXISTRDY_delay;
  wire CH1_RXEQTRAINING_delay;
  wire CH1_RXPOLARITY_delay;
  wire CH1_RXPRBSCNTSTOP_delay;
  wire CH1_RXQPRBSEN_delay;
  wire CH1_RXUSRCLK2_delay;
  wire CH1_RXUSRCLK_delay;
  wire CH1_TXDATASTART_delay;
  wire CH1_TXINHIBIT_delay;
  wire CH1_TXPOLARITY_delay;
  wire CH1_TXPRBSINERR_delay;
  wire CH1_TXQPRBSEN_delay;
  wire CH1_TXUSRCLK2_delay;
  wire CH1_TXUSRCLK_delay;
  wire DRPCLK_delay;
  wire DRPEN_delay;
  wire DRPWE_delay;
  wire FECCTRLRX0BITSLIPFS_delay;
  wire FECCTRLRX1BITSLIPFS_delay;
  wire [10:0] DRPADDR_delay;
  wire [15:0] DRPDI_delay;
  wire [255:0] CH0_TXDATA_delay;
  wire [255:0] CH1_TXDATA_delay;
  wire [3:0] CH0_RXPRBSPTN_delay;
  wire [3:0] CH0_TXPRBSPTN_delay;
  wire [3:0] CH1_RXPRBSPTN_delay;
  wire [3:0] CH1_TXPRBSPTN_delay;
`endif


  //declare internal signals
  integer CH0_GTMTXN_integer;
  integer CH0_GTMTXP_integer;
  integer CH1_GTMTXN_integer;
  integer CH1_GTMTXP_integer;
  integer CH0_GTMRXN_integer;
  integer CH0_GTMRXP_integer;
  integer CH1_GTMRXN_integer;
  integer CH1_GTMRXP_integer;


  assign CH0_AXISTDATA = CH0_AXISTDATA_out;
  assign CH0_AXISTLAST = CH0_AXISTLAST_out;
  assign CH0_AXISTVALID = CH0_AXISTVALID_out;
  assign CH0_DMONITOROUT = CH0_DMONITOROUT_out;
  assign CH0_DMONITOROUTCLK = CH0_DMONITOROUTCLK_out;
  assign CH0_GTMTXN = CH0_GTMTXN_out;
  assign CH0_GTMTXP = CH0_GTMTXP_out;
  assign CH0_PCSRSVDOUT = CH0_PCSRSVDOUT_out;
  assign CH0_PMARSVDOUT = CH0_PMARSVDOUT_out;
  assign CH0_RESETEXCEPTION = CH0_RESETEXCEPTION_out;
  assign CH0_RXBUFSTATUS = CH0_RXBUFSTATUS_out;
  assign CH0_RXDATA = CH0_RXDATA_out;
  assign CH0_RXDATAFLAGS = CH0_RXDATAFLAGS_out;
  assign CH0_RXDATAISAM = CH0_RXDATAISAM_out;
  assign CH0_RXDATASTART = CH0_RXDATASTART_out;
  assign CH0_RXOUTCLK = CH0_RXOUTCLK_out;
  assign CH0_RXPMARESETDONE = CH0_RXPMARESETDONE_out;
  assign CH0_RXPRBSERR = CH0_RXPRBSERR_out;
  assign CH0_RXPRBSLOCKED = CH0_RXPRBSLOCKED_out;
  assign CH0_RXPRGDIVRESETDONE = CH0_RXPRGDIVRESETDONE_out;
  assign CH0_RXPROGDIVCLK = CH0_RXPROGDIVCLK_out;
  assign CH0_RXRESETDONE = CH0_RXRESETDONE_out;
  assign CH0_TXBUFSTATUS = CH0_TXBUFSTATUS_out;
  assign CH0_TXOUTCLK = CH0_TXOUTCLK_out;
  assign CH0_TXPMARESETDONE = CH0_TXPMARESETDONE_out;
  assign CH0_TXPRGDIVRESETDONE = CH0_TXPRGDIVRESETDONE_out;
  assign CH0_TXPROGDIVCLK = CH0_TXPROGDIVCLK_out;
  assign CH0_TXRESETDONE = CH0_TXRESETDONE_out;
  assign CH1_AXISTDATA = CH1_AXISTDATA_out;
  assign CH1_AXISTLAST = CH1_AXISTLAST_out;
  assign CH1_AXISTVALID = CH1_AXISTVALID_out;
  assign CH1_DMONITOROUT = CH1_DMONITOROUT_out;
  assign CH1_DMONITOROUTCLK = CH1_DMONITOROUTCLK_out;
  assign CH1_GTMTXN = CH1_GTMTXN_out;
  assign CH1_GTMTXP = CH1_GTMTXP_out;
  assign CH1_PCSRSVDOUT = CH1_PCSRSVDOUT_out;
  assign CH1_PMARSVDOUT = CH1_PMARSVDOUT_out;
  assign CH1_RESETEXCEPTION = CH1_RESETEXCEPTION_out;
  assign CH1_RXBUFSTATUS = CH1_RXBUFSTATUS_out;
  assign CH1_RXDATA = CH1_RXDATA_out;
  assign CH1_RXDATAFLAGS = CH1_RXDATAFLAGS_out;
  assign CH1_RXDATAISAM = CH1_RXDATAISAM_out;
  assign CH1_RXDATASTART = CH1_RXDATASTART_out;
  assign CH1_RXOUTCLK = CH1_RXOUTCLK_out;
  assign CH1_RXPMARESETDONE = CH1_RXPMARESETDONE_out;
  assign CH1_RXPRBSERR = CH1_RXPRBSERR_out;
  assign CH1_RXPRBSLOCKED = CH1_RXPRBSLOCKED_out;
  assign CH1_RXPRGDIVRESETDONE = CH1_RXPRGDIVRESETDONE_out;
  assign CH1_RXPROGDIVCLK = CH1_RXPROGDIVCLK_out;
  assign CH1_RXRESETDONE = CH1_RXRESETDONE_out;
  assign CH1_TXBUFSTATUS = CH1_TXBUFSTATUS_out;
  assign CH1_TXOUTCLK = CH1_TXOUTCLK_out;
  assign CH1_TXPMARESETDONE = CH1_TXPMARESETDONE_out;
  assign CH1_TXPRGDIVRESETDONE = CH1_TXPRGDIVRESETDONE_out;
  assign CH1_TXPROGDIVCLK = CH1_TXPROGDIVCLK_out;
  assign CH1_TXRESETDONE = CH1_TXRESETDONE_out;
  assign CLKTESTSIG2PAD = CLKTESTSIG2PAD_out;
  assign DMONITOROUTPLLCLK = DMONITOROUTPLLCLK_out;
  assign DRPDO = DRPDO_out;
  assign DRPRDY = DRPRDY_out;
  assign FECRX0ALIGNED = FECRX0ALIGNED_out;
  assign FECRX0CORRCWINC = FECRX0CORRCWINC_out;
  assign FECRX0CWINC = FECRX0CWINC_out;
  assign FECRX0UNCORRCWINC = FECRX0UNCORRCWINC_out;
  assign FECRX1ALIGNED = FECRX1ALIGNED_out;
  assign FECRX1CORRCWINC = FECRX1CORRCWINC_out;
  assign FECRX1CWINC = FECRX1CWINC_out;
  assign FECRX1UNCORRCWINC = FECRX1UNCORRCWINC_out;
  assign FECRXLN0BITERR0TO1INC = FECRXLN0BITERR0TO1INC_out;
  assign FECRXLN0BITERR1TO0INC = FECRXLN0BITERR1TO0INC_out;
  assign FECRXLN0DLY = FECRXLN0DLY_out;
  assign FECRXLN0ERRCNTINC = FECRXLN0ERRCNTINC_out;
  assign FECRXLN0MAPPING = FECRXLN0MAPPING_out;
  assign FECRXLN1BITERR0TO1INC = FECRXLN1BITERR0TO1INC_out;
  assign FECRXLN1BITERR1TO0INC = FECRXLN1BITERR1TO0INC_out;
  assign FECRXLN1DLY = FECRXLN1DLY_out;
  assign FECRXLN1ERRCNTINC = FECRXLN1ERRCNTINC_out;
  assign FECRXLN1MAPPING = FECRXLN1MAPPING_out;
  assign FECRXLN2BITERR0TO1INC = FECRXLN2BITERR0TO1INC_out;
  assign FECRXLN2BITERR1TO0INC = FECRXLN2BITERR1TO0INC_out;
  assign FECRXLN2DLY = FECRXLN2DLY_out;
  assign FECRXLN2ERRCNTINC = FECRXLN2ERRCNTINC_out;
  assign FECRXLN2MAPPING = FECRXLN2MAPPING_out;
  assign FECRXLN3BITERR0TO1INC = FECRXLN3BITERR0TO1INC_out;
  assign FECRXLN3BITERR1TO0INC = FECRXLN3BITERR1TO0INC_out;
  assign FECRXLN3DLY = FECRXLN3DLY_out;
  assign FECRXLN3ERRCNTINC = FECRXLN3ERRCNTINC_out;
  assign FECRXLN3MAPPING = FECRXLN3MAPPING_out;
  assign FECTRXLN0LOCK = FECTRXLN0LOCK_out;
  assign FECTRXLN1LOCK = FECTRXLN1LOCK_out;
  assign FECTRXLN2LOCK = FECTRXLN2LOCK_out;
  assign FECTRXLN3LOCK = FECTRXLN3LOCK_out;
  assign GTPOWERGOOD = GTPOWERGOOD_out;
  assign PLLFBCLKLOST = PLLFBCLKLOST_out;
  assign PLLLOCK = PLLLOCK_out;
  assign PLLREFCLKLOST = PLLREFCLKLOST_out;
  assign PLLREFCLKMONITOR = PLLREFCLKMONITOR_out;
  assign PLLRESETDONE = PLLRESETDONE_out;
  assign PLLRSVDOUT = PLLRSVDOUT_out;
  assign RCALCMP = RCALCMP_out;
  assign RCALOUT = RCALOUT_out;
  assign RXRECCLK0 = RXRECCLK0_out;
  assign RXRECCLK1 = RXRECCLK1_out;

`ifdef XIL_TIMING
  assign CH0_AXISEN_in = (CH0_AXISEN !== 1'bz) && CH0_AXISEN_delay; // rv 0
  assign CH0_AXISTRDY_in = (CH0_AXISTRDY !== 1'bz) && CH0_AXISTRDY_delay; // rv 0
  assign CH0_RXEQTRAINING_in = (CH0_RXEQTRAINING !== 1'bz) && CH0_RXEQTRAINING_delay; // rv 0
  assign CH0_RXPOLARITY_in = (CH0_RXPOLARITY !== 1'bz) && CH0_RXPOLARITY_delay; // rv 0
  assign CH0_RXPRBSCNTSTOP_in = (CH0_RXPRBSCNTSTOP !== 1'bz) && CH0_RXPRBSCNTSTOP_delay; // rv 0
  assign CH0_RXPRBSPTN_in[0] = (CH0_RXPRBSPTN[0] !== 1'bz) && CH0_RXPRBSPTN_delay[0]; // rv 0
  assign CH0_RXPRBSPTN_in[1] = (CH0_RXPRBSPTN[1] !== 1'bz) && CH0_RXPRBSPTN_delay[1]; // rv 0
  assign CH0_RXPRBSPTN_in[2] = (CH0_RXPRBSPTN[2] !== 1'bz) && CH0_RXPRBSPTN_delay[2]; // rv 0
  assign CH0_RXPRBSPTN_in[3] = (CH0_RXPRBSPTN[3] !== 1'bz) && CH0_RXPRBSPTN_delay[3]; // rv 0
  assign CH0_RXQPRBSEN_in = (CH0_RXQPRBSEN !== 1'bz) && CH0_RXQPRBSEN_delay; // rv 0
  assign CH0_RXUSRCLK2_in = (CH0_RXUSRCLK2 !== 1'bz) && CH0_RXUSRCLK2_delay; // rv 0
  assign CH0_RXUSRCLK_in = (CH0_RXUSRCLK !== 1'bz) && CH0_RXUSRCLK_delay; // rv 0
  assign CH0_TXDATASTART_in = (CH0_TXDATASTART !== 1'bz) && CH0_TXDATASTART_delay; // rv 0
  assign CH0_TXDATA_in[0] = (CH0_TXDATA[0] !== 1'bz) && CH0_TXDATA_delay[0]; // rv 0
  assign CH0_TXDATA_in[100] = (CH0_TXDATA[100] !== 1'bz) && CH0_TXDATA_delay[100]; // rv 0
  assign CH0_TXDATA_in[101] = (CH0_TXDATA[101] !== 1'bz) && CH0_TXDATA_delay[101]; // rv 0
  assign CH0_TXDATA_in[102] = (CH0_TXDATA[102] !== 1'bz) && CH0_TXDATA_delay[102]; // rv 0
  assign CH0_TXDATA_in[103] = (CH0_TXDATA[103] !== 1'bz) && CH0_TXDATA_delay[103]; // rv 0
  assign CH0_TXDATA_in[104] = (CH0_TXDATA[104] !== 1'bz) && CH0_TXDATA_delay[104]; // rv 0
  assign CH0_TXDATA_in[105] = (CH0_TXDATA[105] !== 1'bz) && CH0_TXDATA_delay[105]; // rv 0
  assign CH0_TXDATA_in[106] = (CH0_TXDATA[106] !== 1'bz) && CH0_TXDATA_delay[106]; // rv 0
  assign CH0_TXDATA_in[107] = (CH0_TXDATA[107] !== 1'bz) && CH0_TXDATA_delay[107]; // rv 0
  assign CH0_TXDATA_in[108] = (CH0_TXDATA[108] !== 1'bz) && CH0_TXDATA_delay[108]; // rv 0
  assign CH0_TXDATA_in[109] = (CH0_TXDATA[109] !== 1'bz) && CH0_TXDATA_delay[109]; // rv 0
  assign CH0_TXDATA_in[10] = (CH0_TXDATA[10] !== 1'bz) && CH0_TXDATA_delay[10]; // rv 0
  assign CH0_TXDATA_in[110] = (CH0_TXDATA[110] !== 1'bz) && CH0_TXDATA_delay[110]; // rv 0
  assign CH0_TXDATA_in[111] = (CH0_TXDATA[111] !== 1'bz) && CH0_TXDATA_delay[111]; // rv 0
  assign CH0_TXDATA_in[112] = (CH0_TXDATA[112] !== 1'bz) && CH0_TXDATA_delay[112]; // rv 0
  assign CH0_TXDATA_in[113] = (CH0_TXDATA[113] !== 1'bz) && CH0_TXDATA_delay[113]; // rv 0
  assign CH0_TXDATA_in[114] = (CH0_TXDATA[114] !== 1'bz) && CH0_TXDATA_delay[114]; // rv 0
  assign CH0_TXDATA_in[115] = (CH0_TXDATA[115] !== 1'bz) && CH0_TXDATA_delay[115]; // rv 0
  assign CH0_TXDATA_in[116] = (CH0_TXDATA[116] !== 1'bz) && CH0_TXDATA_delay[116]; // rv 0
  assign CH0_TXDATA_in[117] = (CH0_TXDATA[117] !== 1'bz) && CH0_TXDATA_delay[117]; // rv 0
  assign CH0_TXDATA_in[118] = (CH0_TXDATA[118] !== 1'bz) && CH0_TXDATA_delay[118]; // rv 0
  assign CH0_TXDATA_in[119] = (CH0_TXDATA[119] !== 1'bz) && CH0_TXDATA_delay[119]; // rv 0
  assign CH0_TXDATA_in[11] = (CH0_TXDATA[11] !== 1'bz) && CH0_TXDATA_delay[11]; // rv 0
  assign CH0_TXDATA_in[120] = (CH0_TXDATA[120] !== 1'bz) && CH0_TXDATA_delay[120]; // rv 0
  assign CH0_TXDATA_in[121] = (CH0_TXDATA[121] !== 1'bz) && CH0_TXDATA_delay[121]; // rv 0
  assign CH0_TXDATA_in[122] = (CH0_TXDATA[122] !== 1'bz) && CH0_TXDATA_delay[122]; // rv 0
  assign CH0_TXDATA_in[123] = (CH0_TXDATA[123] !== 1'bz) && CH0_TXDATA_delay[123]; // rv 0
  assign CH0_TXDATA_in[124] = (CH0_TXDATA[124] !== 1'bz) && CH0_TXDATA_delay[124]; // rv 0
  assign CH0_TXDATA_in[125] = (CH0_TXDATA[125] !== 1'bz) && CH0_TXDATA_delay[125]; // rv 0
  assign CH0_TXDATA_in[126] = (CH0_TXDATA[126] !== 1'bz) && CH0_TXDATA_delay[126]; // rv 0
  assign CH0_TXDATA_in[127] = (CH0_TXDATA[127] !== 1'bz) && CH0_TXDATA_delay[127]; // rv 0
  assign CH0_TXDATA_in[128] = (CH0_TXDATA[128] !== 1'bz) && CH0_TXDATA_delay[128]; // rv 0
  assign CH0_TXDATA_in[129] = (CH0_TXDATA[129] !== 1'bz) && CH0_TXDATA_delay[129]; // rv 0
  assign CH0_TXDATA_in[12] = (CH0_TXDATA[12] !== 1'bz) && CH0_TXDATA_delay[12]; // rv 0
  assign CH0_TXDATA_in[130] = (CH0_TXDATA[130] !== 1'bz) && CH0_TXDATA_delay[130]; // rv 0
  assign CH0_TXDATA_in[131] = (CH0_TXDATA[131] !== 1'bz) && CH0_TXDATA_delay[131]; // rv 0
  assign CH0_TXDATA_in[132] = (CH0_TXDATA[132] !== 1'bz) && CH0_TXDATA_delay[132]; // rv 0
  assign CH0_TXDATA_in[133] = (CH0_TXDATA[133] !== 1'bz) && CH0_TXDATA_delay[133]; // rv 0
  assign CH0_TXDATA_in[134] = (CH0_TXDATA[134] !== 1'bz) && CH0_TXDATA_delay[134]; // rv 0
  assign CH0_TXDATA_in[135] = (CH0_TXDATA[135] !== 1'bz) && CH0_TXDATA_delay[135]; // rv 0
  assign CH0_TXDATA_in[136] = (CH0_TXDATA[136] !== 1'bz) && CH0_TXDATA_delay[136]; // rv 0
  assign CH0_TXDATA_in[137] = (CH0_TXDATA[137] !== 1'bz) && CH0_TXDATA_delay[137]; // rv 0
  assign CH0_TXDATA_in[138] = (CH0_TXDATA[138] !== 1'bz) && CH0_TXDATA_delay[138]; // rv 0
  assign CH0_TXDATA_in[139] = (CH0_TXDATA[139] !== 1'bz) && CH0_TXDATA_delay[139]; // rv 0
  assign CH0_TXDATA_in[13] = (CH0_TXDATA[13] !== 1'bz) && CH0_TXDATA_delay[13]; // rv 0
  assign CH0_TXDATA_in[140] = (CH0_TXDATA[140] !== 1'bz) && CH0_TXDATA_delay[140]; // rv 0
  assign CH0_TXDATA_in[141] = (CH0_TXDATA[141] !== 1'bz) && CH0_TXDATA_delay[141]; // rv 0
  assign CH0_TXDATA_in[142] = (CH0_TXDATA[142] !== 1'bz) && CH0_TXDATA_delay[142]; // rv 0
  assign CH0_TXDATA_in[143] = (CH0_TXDATA[143] !== 1'bz) && CH0_TXDATA_delay[143]; // rv 0
  assign CH0_TXDATA_in[144] = (CH0_TXDATA[144] !== 1'bz) && CH0_TXDATA_delay[144]; // rv 0
  assign CH0_TXDATA_in[145] = (CH0_TXDATA[145] !== 1'bz) && CH0_TXDATA_delay[145]; // rv 0
  assign CH0_TXDATA_in[146] = (CH0_TXDATA[146] !== 1'bz) && CH0_TXDATA_delay[146]; // rv 0
  assign CH0_TXDATA_in[147] = (CH0_TXDATA[147] !== 1'bz) && CH0_TXDATA_delay[147]; // rv 0
  assign CH0_TXDATA_in[148] = (CH0_TXDATA[148] !== 1'bz) && CH0_TXDATA_delay[148]; // rv 0
  assign CH0_TXDATA_in[149] = (CH0_TXDATA[149] !== 1'bz) && CH0_TXDATA_delay[149]; // rv 0
  assign CH0_TXDATA_in[14] = (CH0_TXDATA[14] !== 1'bz) && CH0_TXDATA_delay[14]; // rv 0
  assign CH0_TXDATA_in[150] = (CH0_TXDATA[150] !== 1'bz) && CH0_TXDATA_delay[150]; // rv 0
  assign CH0_TXDATA_in[151] = (CH0_TXDATA[151] !== 1'bz) && CH0_TXDATA_delay[151]; // rv 0
  assign CH0_TXDATA_in[152] = (CH0_TXDATA[152] !== 1'bz) && CH0_TXDATA_delay[152]; // rv 0
  assign CH0_TXDATA_in[153] = (CH0_TXDATA[153] !== 1'bz) && CH0_TXDATA_delay[153]; // rv 0
  assign CH0_TXDATA_in[154] = (CH0_TXDATA[154] !== 1'bz) && CH0_TXDATA_delay[154]; // rv 0
  assign CH0_TXDATA_in[155] = (CH0_TXDATA[155] !== 1'bz) && CH0_TXDATA_delay[155]; // rv 0
  assign CH0_TXDATA_in[156] = (CH0_TXDATA[156] !== 1'bz) && CH0_TXDATA_delay[156]; // rv 0
  assign CH0_TXDATA_in[157] = (CH0_TXDATA[157] !== 1'bz) && CH0_TXDATA_delay[157]; // rv 0
  assign CH0_TXDATA_in[158] = (CH0_TXDATA[158] !== 1'bz) && CH0_TXDATA_delay[158]; // rv 0
  assign CH0_TXDATA_in[159] = (CH0_TXDATA[159] !== 1'bz) && CH0_TXDATA_delay[159]; // rv 0
  assign CH0_TXDATA_in[15] = (CH0_TXDATA[15] !== 1'bz) && CH0_TXDATA_delay[15]; // rv 0
  assign CH0_TXDATA_in[160] = (CH0_TXDATA[160] !== 1'bz) && CH0_TXDATA_delay[160]; // rv 0
  assign CH0_TXDATA_in[161] = (CH0_TXDATA[161] !== 1'bz) && CH0_TXDATA_delay[161]; // rv 0
  assign CH0_TXDATA_in[162] = (CH0_TXDATA[162] !== 1'bz) && CH0_TXDATA_delay[162]; // rv 0
  assign CH0_TXDATA_in[163] = (CH0_TXDATA[163] !== 1'bz) && CH0_TXDATA_delay[163]; // rv 0
  assign CH0_TXDATA_in[164] = (CH0_TXDATA[164] !== 1'bz) && CH0_TXDATA_delay[164]; // rv 0
  assign CH0_TXDATA_in[165] = (CH0_TXDATA[165] !== 1'bz) && CH0_TXDATA_delay[165]; // rv 0
  assign CH0_TXDATA_in[166] = (CH0_TXDATA[166] !== 1'bz) && CH0_TXDATA_delay[166]; // rv 0
  assign CH0_TXDATA_in[167] = (CH0_TXDATA[167] !== 1'bz) && CH0_TXDATA_delay[167]; // rv 0
  assign CH0_TXDATA_in[168] = (CH0_TXDATA[168] !== 1'bz) && CH0_TXDATA_delay[168]; // rv 0
  assign CH0_TXDATA_in[169] = (CH0_TXDATA[169] !== 1'bz) && CH0_TXDATA_delay[169]; // rv 0
  assign CH0_TXDATA_in[16] = (CH0_TXDATA[16] !== 1'bz) && CH0_TXDATA_delay[16]; // rv 0
  assign CH0_TXDATA_in[170] = (CH0_TXDATA[170] !== 1'bz) && CH0_TXDATA_delay[170]; // rv 0
  assign CH0_TXDATA_in[171] = (CH0_TXDATA[171] !== 1'bz) && CH0_TXDATA_delay[171]; // rv 0
  assign CH0_TXDATA_in[172] = (CH0_TXDATA[172] !== 1'bz) && CH0_TXDATA_delay[172]; // rv 0
  assign CH0_TXDATA_in[173] = (CH0_TXDATA[173] !== 1'bz) && CH0_TXDATA_delay[173]; // rv 0
  assign CH0_TXDATA_in[174] = (CH0_TXDATA[174] !== 1'bz) && CH0_TXDATA_delay[174]; // rv 0
  assign CH0_TXDATA_in[175] = (CH0_TXDATA[175] !== 1'bz) && CH0_TXDATA_delay[175]; // rv 0
  assign CH0_TXDATA_in[176] = (CH0_TXDATA[176] !== 1'bz) && CH0_TXDATA_delay[176]; // rv 0
  assign CH0_TXDATA_in[177] = (CH0_TXDATA[177] !== 1'bz) && CH0_TXDATA_delay[177]; // rv 0
  assign CH0_TXDATA_in[178] = (CH0_TXDATA[178] !== 1'bz) && CH0_TXDATA_delay[178]; // rv 0
  assign CH0_TXDATA_in[179] = (CH0_TXDATA[179] !== 1'bz) && CH0_TXDATA_delay[179]; // rv 0
  assign CH0_TXDATA_in[17] = (CH0_TXDATA[17] !== 1'bz) && CH0_TXDATA_delay[17]; // rv 0
  assign CH0_TXDATA_in[180] = (CH0_TXDATA[180] !== 1'bz) && CH0_TXDATA_delay[180]; // rv 0
  assign CH0_TXDATA_in[181] = (CH0_TXDATA[181] !== 1'bz) && CH0_TXDATA_delay[181]; // rv 0
  assign CH0_TXDATA_in[182] = (CH0_TXDATA[182] !== 1'bz) && CH0_TXDATA_delay[182]; // rv 0
  assign CH0_TXDATA_in[183] = (CH0_TXDATA[183] !== 1'bz) && CH0_TXDATA_delay[183]; // rv 0
  assign CH0_TXDATA_in[184] = (CH0_TXDATA[184] !== 1'bz) && CH0_TXDATA_delay[184]; // rv 0
  assign CH0_TXDATA_in[185] = (CH0_TXDATA[185] !== 1'bz) && CH0_TXDATA_delay[185]; // rv 0
  assign CH0_TXDATA_in[186] = (CH0_TXDATA[186] !== 1'bz) && CH0_TXDATA_delay[186]; // rv 0
  assign CH0_TXDATA_in[187] = (CH0_TXDATA[187] !== 1'bz) && CH0_TXDATA_delay[187]; // rv 0
  assign CH0_TXDATA_in[188] = (CH0_TXDATA[188] !== 1'bz) && CH0_TXDATA_delay[188]; // rv 0
  assign CH0_TXDATA_in[189] = (CH0_TXDATA[189] !== 1'bz) && CH0_TXDATA_delay[189]; // rv 0
  assign CH0_TXDATA_in[18] = (CH0_TXDATA[18] !== 1'bz) && CH0_TXDATA_delay[18]; // rv 0
  assign CH0_TXDATA_in[190] = (CH0_TXDATA[190] !== 1'bz) && CH0_TXDATA_delay[190]; // rv 0
  assign CH0_TXDATA_in[191] = (CH0_TXDATA[191] !== 1'bz) && CH0_TXDATA_delay[191]; // rv 0
  assign CH0_TXDATA_in[192] = (CH0_TXDATA[192] !== 1'bz) && CH0_TXDATA_delay[192]; // rv 0
  assign CH0_TXDATA_in[193] = (CH0_TXDATA[193] !== 1'bz) && CH0_TXDATA_delay[193]; // rv 0
  assign CH0_TXDATA_in[194] = (CH0_TXDATA[194] !== 1'bz) && CH0_TXDATA_delay[194]; // rv 0
  assign CH0_TXDATA_in[195] = (CH0_TXDATA[195] !== 1'bz) && CH0_TXDATA_delay[195]; // rv 0
  assign CH0_TXDATA_in[196] = (CH0_TXDATA[196] !== 1'bz) && CH0_TXDATA_delay[196]; // rv 0
  assign CH0_TXDATA_in[197] = (CH0_TXDATA[197] !== 1'bz) && CH0_TXDATA_delay[197]; // rv 0
  assign CH0_TXDATA_in[198] = (CH0_TXDATA[198] !== 1'bz) && CH0_TXDATA_delay[198]; // rv 0
  assign CH0_TXDATA_in[199] = (CH0_TXDATA[199] !== 1'bz) && CH0_TXDATA_delay[199]; // rv 0
  assign CH0_TXDATA_in[19] = (CH0_TXDATA[19] !== 1'bz) && CH0_TXDATA_delay[19]; // rv 0
  assign CH0_TXDATA_in[1] = (CH0_TXDATA[1] !== 1'bz) && CH0_TXDATA_delay[1]; // rv 0
  assign CH0_TXDATA_in[200] = (CH0_TXDATA[200] !== 1'bz) && CH0_TXDATA_delay[200]; // rv 0
  assign CH0_TXDATA_in[201] = (CH0_TXDATA[201] !== 1'bz) && CH0_TXDATA_delay[201]; // rv 0
  assign CH0_TXDATA_in[202] = (CH0_TXDATA[202] !== 1'bz) && CH0_TXDATA_delay[202]; // rv 0
  assign CH0_TXDATA_in[203] = (CH0_TXDATA[203] !== 1'bz) && CH0_TXDATA_delay[203]; // rv 0
  assign CH0_TXDATA_in[204] = (CH0_TXDATA[204] !== 1'bz) && CH0_TXDATA_delay[204]; // rv 0
  assign CH0_TXDATA_in[205] = (CH0_TXDATA[205] !== 1'bz) && CH0_TXDATA_delay[205]; // rv 0
  assign CH0_TXDATA_in[206] = (CH0_TXDATA[206] !== 1'bz) && CH0_TXDATA_delay[206]; // rv 0
  assign CH0_TXDATA_in[207] = (CH0_TXDATA[207] !== 1'bz) && CH0_TXDATA_delay[207]; // rv 0
  assign CH0_TXDATA_in[208] = (CH0_TXDATA[208] !== 1'bz) && CH0_TXDATA_delay[208]; // rv 0
  assign CH0_TXDATA_in[209] = (CH0_TXDATA[209] !== 1'bz) && CH0_TXDATA_delay[209]; // rv 0
  assign CH0_TXDATA_in[20] = (CH0_TXDATA[20] !== 1'bz) && CH0_TXDATA_delay[20]; // rv 0
  assign CH0_TXDATA_in[210] = (CH0_TXDATA[210] !== 1'bz) && CH0_TXDATA_delay[210]; // rv 0
  assign CH0_TXDATA_in[211] = (CH0_TXDATA[211] !== 1'bz) && CH0_TXDATA_delay[211]; // rv 0
  assign CH0_TXDATA_in[212] = (CH0_TXDATA[212] !== 1'bz) && CH0_TXDATA_delay[212]; // rv 0
  assign CH0_TXDATA_in[213] = (CH0_TXDATA[213] !== 1'bz) && CH0_TXDATA_delay[213]; // rv 0
  assign CH0_TXDATA_in[214] = (CH0_TXDATA[214] !== 1'bz) && CH0_TXDATA_delay[214]; // rv 0
  assign CH0_TXDATA_in[215] = (CH0_TXDATA[215] !== 1'bz) && CH0_TXDATA_delay[215]; // rv 0
  assign CH0_TXDATA_in[216] = (CH0_TXDATA[216] !== 1'bz) && CH0_TXDATA_delay[216]; // rv 0
  assign CH0_TXDATA_in[217] = (CH0_TXDATA[217] !== 1'bz) && CH0_TXDATA_delay[217]; // rv 0
  assign CH0_TXDATA_in[218] = (CH0_TXDATA[218] !== 1'bz) && CH0_TXDATA_delay[218]; // rv 0
  assign CH0_TXDATA_in[219] = (CH0_TXDATA[219] !== 1'bz) && CH0_TXDATA_delay[219]; // rv 0
  assign CH0_TXDATA_in[21] = (CH0_TXDATA[21] !== 1'bz) && CH0_TXDATA_delay[21]; // rv 0
  assign CH0_TXDATA_in[220] = (CH0_TXDATA[220] !== 1'bz) && CH0_TXDATA_delay[220]; // rv 0
  assign CH0_TXDATA_in[221] = (CH0_TXDATA[221] !== 1'bz) && CH0_TXDATA_delay[221]; // rv 0
  assign CH0_TXDATA_in[222] = (CH0_TXDATA[222] !== 1'bz) && CH0_TXDATA_delay[222]; // rv 0
  assign CH0_TXDATA_in[223] = (CH0_TXDATA[223] !== 1'bz) && CH0_TXDATA_delay[223]; // rv 0
  assign CH0_TXDATA_in[224] = (CH0_TXDATA[224] !== 1'bz) && CH0_TXDATA_delay[224]; // rv 0
  assign CH0_TXDATA_in[225] = (CH0_TXDATA[225] !== 1'bz) && CH0_TXDATA_delay[225]; // rv 0
  assign CH0_TXDATA_in[226] = (CH0_TXDATA[226] !== 1'bz) && CH0_TXDATA_delay[226]; // rv 0
  assign CH0_TXDATA_in[227] = (CH0_TXDATA[227] !== 1'bz) && CH0_TXDATA_delay[227]; // rv 0
  assign CH0_TXDATA_in[228] = (CH0_TXDATA[228] !== 1'bz) && CH0_TXDATA_delay[228]; // rv 0
  assign CH0_TXDATA_in[229] = (CH0_TXDATA[229] !== 1'bz) && CH0_TXDATA_delay[229]; // rv 0
  assign CH0_TXDATA_in[22] = (CH0_TXDATA[22] !== 1'bz) && CH0_TXDATA_delay[22]; // rv 0
  assign CH0_TXDATA_in[230] = (CH0_TXDATA[230] !== 1'bz) && CH0_TXDATA_delay[230]; // rv 0
  assign CH0_TXDATA_in[231] = (CH0_TXDATA[231] !== 1'bz) && CH0_TXDATA_delay[231]; // rv 0
  assign CH0_TXDATA_in[232] = (CH0_TXDATA[232] !== 1'bz) && CH0_TXDATA_delay[232]; // rv 0
  assign CH0_TXDATA_in[233] = (CH0_TXDATA[233] !== 1'bz) && CH0_TXDATA_delay[233]; // rv 0
  assign CH0_TXDATA_in[234] = (CH0_TXDATA[234] !== 1'bz) && CH0_TXDATA_delay[234]; // rv 0
  assign CH0_TXDATA_in[235] = (CH0_TXDATA[235] !== 1'bz) && CH0_TXDATA_delay[235]; // rv 0
  assign CH0_TXDATA_in[236] = (CH0_TXDATA[236] !== 1'bz) && CH0_TXDATA_delay[236]; // rv 0
  assign CH0_TXDATA_in[237] = (CH0_TXDATA[237] !== 1'bz) && CH0_TXDATA_delay[237]; // rv 0
  assign CH0_TXDATA_in[238] = (CH0_TXDATA[238] !== 1'bz) && CH0_TXDATA_delay[238]; // rv 0
  assign CH0_TXDATA_in[239] = (CH0_TXDATA[239] !== 1'bz) && CH0_TXDATA_delay[239]; // rv 0
  assign CH0_TXDATA_in[23] = (CH0_TXDATA[23] !== 1'bz) && CH0_TXDATA_delay[23]; // rv 0
  assign CH0_TXDATA_in[240] = (CH0_TXDATA[240] !== 1'bz) && CH0_TXDATA_delay[240]; // rv 0
  assign CH0_TXDATA_in[241] = (CH0_TXDATA[241] !== 1'bz) && CH0_TXDATA_delay[241]; // rv 0
  assign CH0_TXDATA_in[242] = (CH0_TXDATA[242] !== 1'bz) && CH0_TXDATA_delay[242]; // rv 0
  assign CH0_TXDATA_in[243] = (CH0_TXDATA[243] !== 1'bz) && CH0_TXDATA_delay[243]; // rv 0
  assign CH0_TXDATA_in[244] = (CH0_TXDATA[244] !== 1'bz) && CH0_TXDATA_delay[244]; // rv 0
  assign CH0_TXDATA_in[245] = (CH0_TXDATA[245] !== 1'bz) && CH0_TXDATA_delay[245]; // rv 0
  assign CH0_TXDATA_in[246] = (CH0_TXDATA[246] !== 1'bz) && CH0_TXDATA_delay[246]; // rv 0
  assign CH0_TXDATA_in[247] = (CH0_TXDATA[247] !== 1'bz) && CH0_TXDATA_delay[247]; // rv 0
  assign CH0_TXDATA_in[248] = (CH0_TXDATA[248] !== 1'bz) && CH0_TXDATA_delay[248]; // rv 0
  assign CH0_TXDATA_in[249] = (CH0_TXDATA[249] !== 1'bz) && CH0_TXDATA_delay[249]; // rv 0
  assign CH0_TXDATA_in[24] = (CH0_TXDATA[24] !== 1'bz) && CH0_TXDATA_delay[24]; // rv 0
  assign CH0_TXDATA_in[250] = (CH0_TXDATA[250] !== 1'bz) && CH0_TXDATA_delay[250]; // rv 0
  assign CH0_TXDATA_in[251] = (CH0_TXDATA[251] !== 1'bz) && CH0_TXDATA_delay[251]; // rv 0
  assign CH0_TXDATA_in[252] = (CH0_TXDATA[252] !== 1'bz) && CH0_TXDATA_delay[252]; // rv 0
  assign CH0_TXDATA_in[253] = (CH0_TXDATA[253] !== 1'bz) && CH0_TXDATA_delay[253]; // rv 0
  assign CH0_TXDATA_in[254] = (CH0_TXDATA[254] !== 1'bz) && CH0_TXDATA_delay[254]; // rv 0
  assign CH0_TXDATA_in[255] = (CH0_TXDATA[255] !== 1'bz) && CH0_TXDATA_delay[255]; // rv 0
  assign CH0_TXDATA_in[25] = (CH0_TXDATA[25] !== 1'bz) && CH0_TXDATA_delay[25]; // rv 0
  assign CH0_TXDATA_in[26] = (CH0_TXDATA[26] !== 1'bz) && CH0_TXDATA_delay[26]; // rv 0
  assign CH0_TXDATA_in[27] = (CH0_TXDATA[27] !== 1'bz) && CH0_TXDATA_delay[27]; // rv 0
  assign CH0_TXDATA_in[28] = (CH0_TXDATA[28] !== 1'bz) && CH0_TXDATA_delay[28]; // rv 0
  assign CH0_TXDATA_in[29] = (CH0_TXDATA[29] !== 1'bz) && CH0_TXDATA_delay[29]; // rv 0
  assign CH0_TXDATA_in[2] = (CH0_TXDATA[2] !== 1'bz) && CH0_TXDATA_delay[2]; // rv 0
  assign CH0_TXDATA_in[30] = (CH0_TXDATA[30] !== 1'bz) && CH0_TXDATA_delay[30]; // rv 0
  assign CH0_TXDATA_in[31] = (CH0_TXDATA[31] !== 1'bz) && CH0_TXDATA_delay[31]; // rv 0
  assign CH0_TXDATA_in[32] = (CH0_TXDATA[32] !== 1'bz) && CH0_TXDATA_delay[32]; // rv 0
  assign CH0_TXDATA_in[33] = (CH0_TXDATA[33] !== 1'bz) && CH0_TXDATA_delay[33]; // rv 0
  assign CH0_TXDATA_in[34] = (CH0_TXDATA[34] !== 1'bz) && CH0_TXDATA_delay[34]; // rv 0
  assign CH0_TXDATA_in[35] = (CH0_TXDATA[35] !== 1'bz) && CH0_TXDATA_delay[35]; // rv 0
  assign CH0_TXDATA_in[36] = (CH0_TXDATA[36] !== 1'bz) && CH0_TXDATA_delay[36]; // rv 0
  assign CH0_TXDATA_in[37] = (CH0_TXDATA[37] !== 1'bz) && CH0_TXDATA_delay[37]; // rv 0
  assign CH0_TXDATA_in[38] = (CH0_TXDATA[38] !== 1'bz) && CH0_TXDATA_delay[38]; // rv 0
  assign CH0_TXDATA_in[39] = (CH0_TXDATA[39] !== 1'bz) && CH0_TXDATA_delay[39]; // rv 0
  assign CH0_TXDATA_in[3] = (CH0_TXDATA[3] !== 1'bz) && CH0_TXDATA_delay[3]; // rv 0
  assign CH0_TXDATA_in[40] = (CH0_TXDATA[40] !== 1'bz) && CH0_TXDATA_delay[40]; // rv 0
  assign CH0_TXDATA_in[41] = (CH0_TXDATA[41] !== 1'bz) && CH0_TXDATA_delay[41]; // rv 0
  assign CH0_TXDATA_in[42] = (CH0_TXDATA[42] !== 1'bz) && CH0_TXDATA_delay[42]; // rv 0
  assign CH0_TXDATA_in[43] = (CH0_TXDATA[43] !== 1'bz) && CH0_TXDATA_delay[43]; // rv 0
  assign CH0_TXDATA_in[44] = (CH0_TXDATA[44] !== 1'bz) && CH0_TXDATA_delay[44]; // rv 0
  assign CH0_TXDATA_in[45] = (CH0_TXDATA[45] !== 1'bz) && CH0_TXDATA_delay[45]; // rv 0
  assign CH0_TXDATA_in[46] = (CH0_TXDATA[46] !== 1'bz) && CH0_TXDATA_delay[46]; // rv 0
  assign CH0_TXDATA_in[47] = (CH0_TXDATA[47] !== 1'bz) && CH0_TXDATA_delay[47]; // rv 0
  assign CH0_TXDATA_in[48] = (CH0_TXDATA[48] !== 1'bz) && CH0_TXDATA_delay[48]; // rv 0
  assign CH0_TXDATA_in[49] = (CH0_TXDATA[49] !== 1'bz) && CH0_TXDATA_delay[49]; // rv 0
  assign CH0_TXDATA_in[4] = (CH0_TXDATA[4] !== 1'bz) && CH0_TXDATA_delay[4]; // rv 0
  assign CH0_TXDATA_in[50] = (CH0_TXDATA[50] !== 1'bz) && CH0_TXDATA_delay[50]; // rv 0
  assign CH0_TXDATA_in[51] = (CH0_TXDATA[51] !== 1'bz) && CH0_TXDATA_delay[51]; // rv 0
  assign CH0_TXDATA_in[52] = (CH0_TXDATA[52] !== 1'bz) && CH0_TXDATA_delay[52]; // rv 0
  assign CH0_TXDATA_in[53] = (CH0_TXDATA[53] !== 1'bz) && CH0_TXDATA_delay[53]; // rv 0
  assign CH0_TXDATA_in[54] = (CH0_TXDATA[54] !== 1'bz) && CH0_TXDATA_delay[54]; // rv 0
  assign CH0_TXDATA_in[55] = (CH0_TXDATA[55] !== 1'bz) && CH0_TXDATA_delay[55]; // rv 0
  assign CH0_TXDATA_in[56] = (CH0_TXDATA[56] !== 1'bz) && CH0_TXDATA_delay[56]; // rv 0
  assign CH0_TXDATA_in[57] = (CH0_TXDATA[57] !== 1'bz) && CH0_TXDATA_delay[57]; // rv 0
  assign CH0_TXDATA_in[58] = (CH0_TXDATA[58] !== 1'bz) && CH0_TXDATA_delay[58]; // rv 0
  assign CH0_TXDATA_in[59] = (CH0_TXDATA[59] !== 1'bz) && CH0_TXDATA_delay[59]; // rv 0
  assign CH0_TXDATA_in[5] = (CH0_TXDATA[5] !== 1'bz) && CH0_TXDATA_delay[5]; // rv 0
  assign CH0_TXDATA_in[60] = (CH0_TXDATA[60] !== 1'bz) && CH0_TXDATA_delay[60]; // rv 0
  assign CH0_TXDATA_in[61] = (CH0_TXDATA[61] !== 1'bz) && CH0_TXDATA_delay[61]; // rv 0
  assign CH0_TXDATA_in[62] = (CH0_TXDATA[62] !== 1'bz) && CH0_TXDATA_delay[62]; // rv 0
  assign CH0_TXDATA_in[63] = (CH0_TXDATA[63] !== 1'bz) && CH0_TXDATA_delay[63]; // rv 0
  assign CH0_TXDATA_in[64] = (CH0_TXDATA[64] !== 1'bz) && CH0_TXDATA_delay[64]; // rv 0
  assign CH0_TXDATA_in[65] = (CH0_TXDATA[65] !== 1'bz) && CH0_TXDATA_delay[65]; // rv 0
  assign CH0_TXDATA_in[66] = (CH0_TXDATA[66] !== 1'bz) && CH0_TXDATA_delay[66]; // rv 0
  assign CH0_TXDATA_in[67] = (CH0_TXDATA[67] !== 1'bz) && CH0_TXDATA_delay[67]; // rv 0
  assign CH0_TXDATA_in[68] = (CH0_TXDATA[68] !== 1'bz) && CH0_TXDATA_delay[68]; // rv 0
  assign CH0_TXDATA_in[69] = (CH0_TXDATA[69] !== 1'bz) && CH0_TXDATA_delay[69]; // rv 0
  assign CH0_TXDATA_in[6] = (CH0_TXDATA[6] !== 1'bz) && CH0_TXDATA_delay[6]; // rv 0
  assign CH0_TXDATA_in[70] = (CH0_TXDATA[70] !== 1'bz) && CH0_TXDATA_delay[70]; // rv 0
  assign CH0_TXDATA_in[71] = (CH0_TXDATA[71] !== 1'bz) && CH0_TXDATA_delay[71]; // rv 0
  assign CH0_TXDATA_in[72] = (CH0_TXDATA[72] !== 1'bz) && CH0_TXDATA_delay[72]; // rv 0
  assign CH0_TXDATA_in[73] = (CH0_TXDATA[73] !== 1'bz) && CH0_TXDATA_delay[73]; // rv 0
  assign CH0_TXDATA_in[74] = (CH0_TXDATA[74] !== 1'bz) && CH0_TXDATA_delay[74]; // rv 0
  assign CH0_TXDATA_in[75] = (CH0_TXDATA[75] !== 1'bz) && CH0_TXDATA_delay[75]; // rv 0
  assign CH0_TXDATA_in[76] = (CH0_TXDATA[76] !== 1'bz) && CH0_TXDATA_delay[76]; // rv 0
  assign CH0_TXDATA_in[77] = (CH0_TXDATA[77] !== 1'bz) && CH0_TXDATA_delay[77]; // rv 0
  assign CH0_TXDATA_in[78] = (CH0_TXDATA[78] !== 1'bz) && CH0_TXDATA_delay[78]; // rv 0
  assign CH0_TXDATA_in[79] = (CH0_TXDATA[79] !== 1'bz) && CH0_TXDATA_delay[79]; // rv 0
  assign CH0_TXDATA_in[7] = (CH0_TXDATA[7] !== 1'bz) && CH0_TXDATA_delay[7]; // rv 0
  assign CH0_TXDATA_in[80] = (CH0_TXDATA[80] !== 1'bz) && CH0_TXDATA_delay[80]; // rv 0
  assign CH0_TXDATA_in[81] = (CH0_TXDATA[81] !== 1'bz) && CH0_TXDATA_delay[81]; // rv 0
  assign CH0_TXDATA_in[82] = (CH0_TXDATA[82] !== 1'bz) && CH0_TXDATA_delay[82]; // rv 0
  assign CH0_TXDATA_in[83] = (CH0_TXDATA[83] !== 1'bz) && CH0_TXDATA_delay[83]; // rv 0
  assign CH0_TXDATA_in[84] = (CH0_TXDATA[84] !== 1'bz) && CH0_TXDATA_delay[84]; // rv 0
  assign CH0_TXDATA_in[85] = (CH0_TXDATA[85] !== 1'bz) && CH0_TXDATA_delay[85]; // rv 0
  assign CH0_TXDATA_in[86] = (CH0_TXDATA[86] !== 1'bz) && CH0_TXDATA_delay[86]; // rv 0
  assign CH0_TXDATA_in[87] = (CH0_TXDATA[87] !== 1'bz) && CH0_TXDATA_delay[87]; // rv 0
  assign CH0_TXDATA_in[88] = (CH0_TXDATA[88] !== 1'bz) && CH0_TXDATA_delay[88]; // rv 0
  assign CH0_TXDATA_in[89] = (CH0_TXDATA[89] !== 1'bz) && CH0_TXDATA_delay[89]; // rv 0
  assign CH0_TXDATA_in[8] = (CH0_TXDATA[8] !== 1'bz) && CH0_TXDATA_delay[8]; // rv 0
  assign CH0_TXDATA_in[90] = (CH0_TXDATA[90] !== 1'bz) && CH0_TXDATA_delay[90]; // rv 0
  assign CH0_TXDATA_in[91] = (CH0_TXDATA[91] !== 1'bz) && CH0_TXDATA_delay[91]; // rv 0
  assign CH0_TXDATA_in[92] = (CH0_TXDATA[92] !== 1'bz) && CH0_TXDATA_delay[92]; // rv 0
  assign CH0_TXDATA_in[93] = (CH0_TXDATA[93] !== 1'bz) && CH0_TXDATA_delay[93]; // rv 0
  assign CH0_TXDATA_in[94] = (CH0_TXDATA[94] !== 1'bz) && CH0_TXDATA_delay[94]; // rv 0
  assign CH0_TXDATA_in[95] = (CH0_TXDATA[95] !== 1'bz) && CH0_TXDATA_delay[95]; // rv 0
  assign CH0_TXDATA_in[96] = (CH0_TXDATA[96] !== 1'bz) && CH0_TXDATA_delay[96]; // rv 0
  assign CH0_TXDATA_in[97] = (CH0_TXDATA[97] !== 1'bz) && CH0_TXDATA_delay[97]; // rv 0
  assign CH0_TXDATA_in[98] = (CH0_TXDATA[98] !== 1'bz) && CH0_TXDATA_delay[98]; // rv 0
  assign CH0_TXDATA_in[99] = (CH0_TXDATA[99] !== 1'bz) && CH0_TXDATA_delay[99]; // rv 0
  assign CH0_TXDATA_in[9] = (CH0_TXDATA[9] !== 1'bz) && CH0_TXDATA_delay[9]; // rv 0
  assign CH0_TXINHIBIT_in = (CH0_TXINHIBIT !== 1'bz) && CH0_TXINHIBIT_delay; // rv 0
  assign CH0_TXPOLARITY_in = (CH0_TXPOLARITY !== 1'bz) && CH0_TXPOLARITY_delay; // rv 0
  assign CH0_TXPRBSINERR_in = (CH0_TXPRBSINERR !== 1'bz) && CH0_TXPRBSINERR_delay; // rv 0
  assign CH0_TXPRBSPTN_in[0] = (CH0_TXPRBSPTN[0] !== 1'bz) && CH0_TXPRBSPTN_delay[0]; // rv 0
  assign CH0_TXPRBSPTN_in[1] = (CH0_TXPRBSPTN[1] !== 1'bz) && CH0_TXPRBSPTN_delay[1]; // rv 0
  assign CH0_TXPRBSPTN_in[2] = (CH0_TXPRBSPTN[2] !== 1'bz) && CH0_TXPRBSPTN_delay[2]; // rv 0
  assign CH0_TXPRBSPTN_in[3] = (CH0_TXPRBSPTN[3] !== 1'bz) && CH0_TXPRBSPTN_delay[3]; // rv 0
  assign CH0_TXQPRBSEN_in = (CH0_TXQPRBSEN !== 1'bz) && CH0_TXQPRBSEN_delay; // rv 0
  assign CH0_TXUSRCLK2_in = (CH0_TXUSRCLK2 !== 1'bz) && CH0_TXUSRCLK2_delay; // rv 0
  assign CH0_TXUSRCLK_in = (CH0_TXUSRCLK !== 1'bz) && CH0_TXUSRCLK_delay; // rv 0
  assign CH1_AXISEN_in = (CH1_AXISEN !== 1'bz) && CH1_AXISEN_delay; // rv 0
  assign CH1_AXISTRDY_in = (CH1_AXISTRDY !== 1'bz) && CH1_AXISTRDY_delay; // rv 0
  assign CH1_RXEQTRAINING_in = (CH1_RXEQTRAINING !== 1'bz) && CH1_RXEQTRAINING_delay; // rv 0
  assign CH1_RXPOLARITY_in = (CH1_RXPOLARITY !== 1'bz) && CH1_RXPOLARITY_delay; // rv 0
  assign CH1_RXPRBSCNTSTOP_in = (CH1_RXPRBSCNTSTOP !== 1'bz) && CH1_RXPRBSCNTSTOP_delay; // rv 0
  assign CH1_RXPRBSPTN_in[0] = (CH1_RXPRBSPTN[0] !== 1'bz) && CH1_RXPRBSPTN_delay[0]; // rv 0
  assign CH1_RXPRBSPTN_in[1] = (CH1_RXPRBSPTN[1] !== 1'bz) && CH1_RXPRBSPTN_delay[1]; // rv 0
  assign CH1_RXPRBSPTN_in[2] = (CH1_RXPRBSPTN[2] !== 1'bz) && CH1_RXPRBSPTN_delay[2]; // rv 0
  assign CH1_RXPRBSPTN_in[3] = (CH1_RXPRBSPTN[3] !== 1'bz) && CH1_RXPRBSPTN_delay[3]; // rv 0
  assign CH1_RXQPRBSEN_in = (CH1_RXQPRBSEN !== 1'bz) && CH1_RXQPRBSEN_delay; // rv 0
  assign CH1_RXUSRCLK2_in = (CH1_RXUSRCLK2 !== 1'bz) && CH1_RXUSRCLK2_delay; // rv 0
  assign CH1_RXUSRCLK_in = (CH1_RXUSRCLK !== 1'bz) && CH1_RXUSRCLK_delay; // rv 0
  assign CH1_TXDATASTART_in = (CH1_TXDATASTART !== 1'bz) && CH1_TXDATASTART_delay; // rv 0
  assign CH1_TXDATA_in[0] = (CH1_TXDATA[0] !== 1'bz) && CH1_TXDATA_delay[0]; // rv 0
  assign CH1_TXDATA_in[100] = (CH1_TXDATA[100] !== 1'bz) && CH1_TXDATA_delay[100]; // rv 0
  assign CH1_TXDATA_in[101] = (CH1_TXDATA[101] !== 1'bz) && CH1_TXDATA_delay[101]; // rv 0
  assign CH1_TXDATA_in[102] = (CH1_TXDATA[102] !== 1'bz) && CH1_TXDATA_delay[102]; // rv 0
  assign CH1_TXDATA_in[103] = (CH1_TXDATA[103] !== 1'bz) && CH1_TXDATA_delay[103]; // rv 0
  assign CH1_TXDATA_in[104] = (CH1_TXDATA[104] !== 1'bz) && CH1_TXDATA_delay[104]; // rv 0
  assign CH1_TXDATA_in[105] = (CH1_TXDATA[105] !== 1'bz) && CH1_TXDATA_delay[105]; // rv 0
  assign CH1_TXDATA_in[106] = (CH1_TXDATA[106] !== 1'bz) && CH1_TXDATA_delay[106]; // rv 0
  assign CH1_TXDATA_in[107] = (CH1_TXDATA[107] !== 1'bz) && CH1_TXDATA_delay[107]; // rv 0
  assign CH1_TXDATA_in[108] = (CH1_TXDATA[108] !== 1'bz) && CH1_TXDATA_delay[108]; // rv 0
  assign CH1_TXDATA_in[109] = (CH1_TXDATA[109] !== 1'bz) && CH1_TXDATA_delay[109]; // rv 0
  assign CH1_TXDATA_in[10] = (CH1_TXDATA[10] !== 1'bz) && CH1_TXDATA_delay[10]; // rv 0
  assign CH1_TXDATA_in[110] = (CH1_TXDATA[110] !== 1'bz) && CH1_TXDATA_delay[110]; // rv 0
  assign CH1_TXDATA_in[111] = (CH1_TXDATA[111] !== 1'bz) && CH1_TXDATA_delay[111]; // rv 0
  assign CH1_TXDATA_in[112] = (CH1_TXDATA[112] !== 1'bz) && CH1_TXDATA_delay[112]; // rv 0
  assign CH1_TXDATA_in[113] = (CH1_TXDATA[113] !== 1'bz) && CH1_TXDATA_delay[113]; // rv 0
  assign CH1_TXDATA_in[114] = (CH1_TXDATA[114] !== 1'bz) && CH1_TXDATA_delay[114]; // rv 0
  assign CH1_TXDATA_in[115] = (CH1_TXDATA[115] !== 1'bz) && CH1_TXDATA_delay[115]; // rv 0
  assign CH1_TXDATA_in[116] = (CH1_TXDATA[116] !== 1'bz) && CH1_TXDATA_delay[116]; // rv 0
  assign CH1_TXDATA_in[117] = (CH1_TXDATA[117] !== 1'bz) && CH1_TXDATA_delay[117]; // rv 0
  assign CH1_TXDATA_in[118] = (CH1_TXDATA[118] !== 1'bz) && CH1_TXDATA_delay[118]; // rv 0
  assign CH1_TXDATA_in[119] = (CH1_TXDATA[119] !== 1'bz) && CH1_TXDATA_delay[119]; // rv 0
  assign CH1_TXDATA_in[11] = (CH1_TXDATA[11] !== 1'bz) && CH1_TXDATA_delay[11]; // rv 0
  assign CH1_TXDATA_in[120] = (CH1_TXDATA[120] !== 1'bz) && CH1_TXDATA_delay[120]; // rv 0
  assign CH1_TXDATA_in[121] = (CH1_TXDATA[121] !== 1'bz) && CH1_TXDATA_delay[121]; // rv 0
  assign CH1_TXDATA_in[122] = (CH1_TXDATA[122] !== 1'bz) && CH1_TXDATA_delay[122]; // rv 0
  assign CH1_TXDATA_in[123] = (CH1_TXDATA[123] !== 1'bz) && CH1_TXDATA_delay[123]; // rv 0
  assign CH1_TXDATA_in[124] = (CH1_TXDATA[124] !== 1'bz) && CH1_TXDATA_delay[124]; // rv 0
  assign CH1_TXDATA_in[125] = (CH1_TXDATA[125] !== 1'bz) && CH1_TXDATA_delay[125]; // rv 0
  assign CH1_TXDATA_in[126] = (CH1_TXDATA[126] !== 1'bz) && CH1_TXDATA_delay[126]; // rv 0
  assign CH1_TXDATA_in[127] = (CH1_TXDATA[127] !== 1'bz) && CH1_TXDATA_delay[127]; // rv 0
  assign CH1_TXDATA_in[128] = (CH1_TXDATA[128] !== 1'bz) && CH1_TXDATA_delay[128]; // rv 0
  assign CH1_TXDATA_in[129] = (CH1_TXDATA[129] !== 1'bz) && CH1_TXDATA_delay[129]; // rv 0
  assign CH1_TXDATA_in[12] = (CH1_TXDATA[12] !== 1'bz) && CH1_TXDATA_delay[12]; // rv 0
  assign CH1_TXDATA_in[130] = (CH1_TXDATA[130] !== 1'bz) && CH1_TXDATA_delay[130]; // rv 0
  assign CH1_TXDATA_in[131] = (CH1_TXDATA[131] !== 1'bz) && CH1_TXDATA_delay[131]; // rv 0
  assign CH1_TXDATA_in[132] = (CH1_TXDATA[132] !== 1'bz) && CH1_TXDATA_delay[132]; // rv 0
  assign CH1_TXDATA_in[133] = (CH1_TXDATA[133] !== 1'bz) && CH1_TXDATA_delay[133]; // rv 0
  assign CH1_TXDATA_in[134] = (CH1_TXDATA[134] !== 1'bz) && CH1_TXDATA_delay[134]; // rv 0
  assign CH1_TXDATA_in[135] = (CH1_TXDATA[135] !== 1'bz) && CH1_TXDATA_delay[135]; // rv 0
  assign CH1_TXDATA_in[136] = (CH1_TXDATA[136] !== 1'bz) && CH1_TXDATA_delay[136]; // rv 0
  assign CH1_TXDATA_in[137] = (CH1_TXDATA[137] !== 1'bz) && CH1_TXDATA_delay[137]; // rv 0
  assign CH1_TXDATA_in[138] = (CH1_TXDATA[138] !== 1'bz) && CH1_TXDATA_delay[138]; // rv 0
  assign CH1_TXDATA_in[139] = (CH1_TXDATA[139] !== 1'bz) && CH1_TXDATA_delay[139]; // rv 0
  assign CH1_TXDATA_in[13] = (CH1_TXDATA[13] !== 1'bz) && CH1_TXDATA_delay[13]; // rv 0
  assign CH1_TXDATA_in[140] = (CH1_TXDATA[140] !== 1'bz) && CH1_TXDATA_delay[140]; // rv 0
  assign CH1_TXDATA_in[141] = (CH1_TXDATA[141] !== 1'bz) && CH1_TXDATA_delay[141]; // rv 0
  assign CH1_TXDATA_in[142] = (CH1_TXDATA[142] !== 1'bz) && CH1_TXDATA_delay[142]; // rv 0
  assign CH1_TXDATA_in[143] = (CH1_TXDATA[143] !== 1'bz) && CH1_TXDATA_delay[143]; // rv 0
  assign CH1_TXDATA_in[144] = (CH1_TXDATA[144] !== 1'bz) && CH1_TXDATA_delay[144]; // rv 0
  assign CH1_TXDATA_in[145] = (CH1_TXDATA[145] !== 1'bz) && CH1_TXDATA_delay[145]; // rv 0
  assign CH1_TXDATA_in[146] = (CH1_TXDATA[146] !== 1'bz) && CH1_TXDATA_delay[146]; // rv 0
  assign CH1_TXDATA_in[147] = (CH1_TXDATA[147] !== 1'bz) && CH1_TXDATA_delay[147]; // rv 0
  assign CH1_TXDATA_in[148] = (CH1_TXDATA[148] !== 1'bz) && CH1_TXDATA_delay[148]; // rv 0
  assign CH1_TXDATA_in[149] = (CH1_TXDATA[149] !== 1'bz) && CH1_TXDATA_delay[149]; // rv 0
  assign CH1_TXDATA_in[14] = (CH1_TXDATA[14] !== 1'bz) && CH1_TXDATA_delay[14]; // rv 0
  assign CH1_TXDATA_in[150] = (CH1_TXDATA[150] !== 1'bz) && CH1_TXDATA_delay[150]; // rv 0
  assign CH1_TXDATA_in[151] = (CH1_TXDATA[151] !== 1'bz) && CH1_TXDATA_delay[151]; // rv 0
  assign CH1_TXDATA_in[152] = (CH1_TXDATA[152] !== 1'bz) && CH1_TXDATA_delay[152]; // rv 0
  assign CH1_TXDATA_in[153] = (CH1_TXDATA[153] !== 1'bz) && CH1_TXDATA_delay[153]; // rv 0
  assign CH1_TXDATA_in[154] = (CH1_TXDATA[154] !== 1'bz) && CH1_TXDATA_delay[154]; // rv 0
  assign CH1_TXDATA_in[155] = (CH1_TXDATA[155] !== 1'bz) && CH1_TXDATA_delay[155]; // rv 0
  assign CH1_TXDATA_in[156] = (CH1_TXDATA[156] !== 1'bz) && CH1_TXDATA_delay[156]; // rv 0
  assign CH1_TXDATA_in[157] = (CH1_TXDATA[157] !== 1'bz) && CH1_TXDATA_delay[157]; // rv 0
  assign CH1_TXDATA_in[158] = (CH1_TXDATA[158] !== 1'bz) && CH1_TXDATA_delay[158]; // rv 0
  assign CH1_TXDATA_in[159] = (CH1_TXDATA[159] !== 1'bz) && CH1_TXDATA_delay[159]; // rv 0
  assign CH1_TXDATA_in[15] = (CH1_TXDATA[15] !== 1'bz) && CH1_TXDATA_delay[15]; // rv 0
  assign CH1_TXDATA_in[160] = (CH1_TXDATA[160] !== 1'bz) && CH1_TXDATA_delay[160]; // rv 0
  assign CH1_TXDATA_in[161] = (CH1_TXDATA[161] !== 1'bz) && CH1_TXDATA_delay[161]; // rv 0
  assign CH1_TXDATA_in[162] = (CH1_TXDATA[162] !== 1'bz) && CH1_TXDATA_delay[162]; // rv 0
  assign CH1_TXDATA_in[163] = (CH1_TXDATA[163] !== 1'bz) && CH1_TXDATA_delay[163]; // rv 0
  assign CH1_TXDATA_in[164] = (CH1_TXDATA[164] !== 1'bz) && CH1_TXDATA_delay[164]; // rv 0
  assign CH1_TXDATA_in[165] = (CH1_TXDATA[165] !== 1'bz) && CH1_TXDATA_delay[165]; // rv 0
  assign CH1_TXDATA_in[166] = (CH1_TXDATA[166] !== 1'bz) && CH1_TXDATA_delay[166]; // rv 0
  assign CH1_TXDATA_in[167] = (CH1_TXDATA[167] !== 1'bz) && CH1_TXDATA_delay[167]; // rv 0
  assign CH1_TXDATA_in[168] = (CH1_TXDATA[168] !== 1'bz) && CH1_TXDATA_delay[168]; // rv 0
  assign CH1_TXDATA_in[169] = (CH1_TXDATA[169] !== 1'bz) && CH1_TXDATA_delay[169]; // rv 0
  assign CH1_TXDATA_in[16] = (CH1_TXDATA[16] !== 1'bz) && CH1_TXDATA_delay[16]; // rv 0
  assign CH1_TXDATA_in[170] = (CH1_TXDATA[170] !== 1'bz) && CH1_TXDATA_delay[170]; // rv 0
  assign CH1_TXDATA_in[171] = (CH1_TXDATA[171] !== 1'bz) && CH1_TXDATA_delay[171]; // rv 0
  assign CH1_TXDATA_in[172] = (CH1_TXDATA[172] !== 1'bz) && CH1_TXDATA_delay[172]; // rv 0
  assign CH1_TXDATA_in[173] = (CH1_TXDATA[173] !== 1'bz) && CH1_TXDATA_delay[173]; // rv 0
  assign CH1_TXDATA_in[174] = (CH1_TXDATA[174] !== 1'bz) && CH1_TXDATA_delay[174]; // rv 0
  assign CH1_TXDATA_in[175] = (CH1_TXDATA[175] !== 1'bz) && CH1_TXDATA_delay[175]; // rv 0
  assign CH1_TXDATA_in[176] = (CH1_TXDATA[176] !== 1'bz) && CH1_TXDATA_delay[176]; // rv 0
  assign CH1_TXDATA_in[177] = (CH1_TXDATA[177] !== 1'bz) && CH1_TXDATA_delay[177]; // rv 0
  assign CH1_TXDATA_in[178] = (CH1_TXDATA[178] !== 1'bz) && CH1_TXDATA_delay[178]; // rv 0
  assign CH1_TXDATA_in[179] = (CH1_TXDATA[179] !== 1'bz) && CH1_TXDATA_delay[179]; // rv 0
  assign CH1_TXDATA_in[17] = (CH1_TXDATA[17] !== 1'bz) && CH1_TXDATA_delay[17]; // rv 0
  assign CH1_TXDATA_in[180] = (CH1_TXDATA[180] !== 1'bz) && CH1_TXDATA_delay[180]; // rv 0
  assign CH1_TXDATA_in[181] = (CH1_TXDATA[181] !== 1'bz) && CH1_TXDATA_delay[181]; // rv 0
  assign CH1_TXDATA_in[182] = (CH1_TXDATA[182] !== 1'bz) && CH1_TXDATA_delay[182]; // rv 0
  assign CH1_TXDATA_in[183] = (CH1_TXDATA[183] !== 1'bz) && CH1_TXDATA_delay[183]; // rv 0
  assign CH1_TXDATA_in[184] = (CH1_TXDATA[184] !== 1'bz) && CH1_TXDATA_delay[184]; // rv 0
  assign CH1_TXDATA_in[185] = (CH1_TXDATA[185] !== 1'bz) && CH1_TXDATA_delay[185]; // rv 0
  assign CH1_TXDATA_in[186] = (CH1_TXDATA[186] !== 1'bz) && CH1_TXDATA_delay[186]; // rv 0
  assign CH1_TXDATA_in[187] = (CH1_TXDATA[187] !== 1'bz) && CH1_TXDATA_delay[187]; // rv 0
  assign CH1_TXDATA_in[188] = (CH1_TXDATA[188] !== 1'bz) && CH1_TXDATA_delay[188]; // rv 0
  assign CH1_TXDATA_in[189] = (CH1_TXDATA[189] !== 1'bz) && CH1_TXDATA_delay[189]; // rv 0
  assign CH1_TXDATA_in[18] = (CH1_TXDATA[18] !== 1'bz) && CH1_TXDATA_delay[18]; // rv 0
  assign CH1_TXDATA_in[190] = (CH1_TXDATA[190] !== 1'bz) && CH1_TXDATA_delay[190]; // rv 0
  assign CH1_TXDATA_in[191] = (CH1_TXDATA[191] !== 1'bz) && CH1_TXDATA_delay[191]; // rv 0
  assign CH1_TXDATA_in[192] = (CH1_TXDATA[192] !== 1'bz) && CH1_TXDATA_delay[192]; // rv 0
  assign CH1_TXDATA_in[193] = (CH1_TXDATA[193] !== 1'bz) && CH1_TXDATA_delay[193]; // rv 0
  assign CH1_TXDATA_in[194] = (CH1_TXDATA[194] !== 1'bz) && CH1_TXDATA_delay[194]; // rv 0
  assign CH1_TXDATA_in[195] = (CH1_TXDATA[195] !== 1'bz) && CH1_TXDATA_delay[195]; // rv 0
  assign CH1_TXDATA_in[196] = (CH1_TXDATA[196] !== 1'bz) && CH1_TXDATA_delay[196]; // rv 0
  assign CH1_TXDATA_in[197] = (CH1_TXDATA[197] !== 1'bz) && CH1_TXDATA_delay[197]; // rv 0
  assign CH1_TXDATA_in[198] = (CH1_TXDATA[198] !== 1'bz) && CH1_TXDATA_delay[198]; // rv 0
  assign CH1_TXDATA_in[199] = (CH1_TXDATA[199] !== 1'bz) && CH1_TXDATA_delay[199]; // rv 0
  assign CH1_TXDATA_in[19] = (CH1_TXDATA[19] !== 1'bz) && CH1_TXDATA_delay[19]; // rv 0
  assign CH1_TXDATA_in[1] = (CH1_TXDATA[1] !== 1'bz) && CH1_TXDATA_delay[1]; // rv 0
  assign CH1_TXDATA_in[200] = (CH1_TXDATA[200] !== 1'bz) && CH1_TXDATA_delay[200]; // rv 0
  assign CH1_TXDATA_in[201] = (CH1_TXDATA[201] !== 1'bz) && CH1_TXDATA_delay[201]; // rv 0
  assign CH1_TXDATA_in[202] = (CH1_TXDATA[202] !== 1'bz) && CH1_TXDATA_delay[202]; // rv 0
  assign CH1_TXDATA_in[203] = (CH1_TXDATA[203] !== 1'bz) && CH1_TXDATA_delay[203]; // rv 0
  assign CH1_TXDATA_in[204] = (CH1_TXDATA[204] !== 1'bz) && CH1_TXDATA_delay[204]; // rv 0
  assign CH1_TXDATA_in[205] = (CH1_TXDATA[205] !== 1'bz) && CH1_TXDATA_delay[205]; // rv 0
  assign CH1_TXDATA_in[206] = (CH1_TXDATA[206] !== 1'bz) && CH1_TXDATA_delay[206]; // rv 0
  assign CH1_TXDATA_in[207] = (CH1_TXDATA[207] !== 1'bz) && CH1_TXDATA_delay[207]; // rv 0
  assign CH1_TXDATA_in[208] = (CH1_TXDATA[208] !== 1'bz) && CH1_TXDATA_delay[208]; // rv 0
  assign CH1_TXDATA_in[209] = (CH1_TXDATA[209] !== 1'bz) && CH1_TXDATA_delay[209]; // rv 0
  assign CH1_TXDATA_in[20] = (CH1_TXDATA[20] !== 1'bz) && CH1_TXDATA_delay[20]; // rv 0
  assign CH1_TXDATA_in[210] = (CH1_TXDATA[210] !== 1'bz) && CH1_TXDATA_delay[210]; // rv 0
  assign CH1_TXDATA_in[211] = (CH1_TXDATA[211] !== 1'bz) && CH1_TXDATA_delay[211]; // rv 0
  assign CH1_TXDATA_in[212] = (CH1_TXDATA[212] !== 1'bz) && CH1_TXDATA_delay[212]; // rv 0
  assign CH1_TXDATA_in[213] = (CH1_TXDATA[213] !== 1'bz) && CH1_TXDATA_delay[213]; // rv 0
  assign CH1_TXDATA_in[214] = (CH1_TXDATA[214] !== 1'bz) && CH1_TXDATA_delay[214]; // rv 0
  assign CH1_TXDATA_in[215] = (CH1_TXDATA[215] !== 1'bz) && CH1_TXDATA_delay[215]; // rv 0
  assign CH1_TXDATA_in[216] = (CH1_TXDATA[216] !== 1'bz) && CH1_TXDATA_delay[216]; // rv 0
  assign CH1_TXDATA_in[217] = (CH1_TXDATA[217] !== 1'bz) && CH1_TXDATA_delay[217]; // rv 0
  assign CH1_TXDATA_in[218] = (CH1_TXDATA[218] !== 1'bz) && CH1_TXDATA_delay[218]; // rv 0
  assign CH1_TXDATA_in[219] = (CH1_TXDATA[219] !== 1'bz) && CH1_TXDATA_delay[219]; // rv 0
  assign CH1_TXDATA_in[21] = (CH1_TXDATA[21] !== 1'bz) && CH1_TXDATA_delay[21]; // rv 0
  assign CH1_TXDATA_in[220] = (CH1_TXDATA[220] !== 1'bz) && CH1_TXDATA_delay[220]; // rv 0
  assign CH1_TXDATA_in[221] = (CH1_TXDATA[221] !== 1'bz) && CH1_TXDATA_delay[221]; // rv 0
  assign CH1_TXDATA_in[222] = (CH1_TXDATA[222] !== 1'bz) && CH1_TXDATA_delay[222]; // rv 0
  assign CH1_TXDATA_in[223] = (CH1_TXDATA[223] !== 1'bz) && CH1_TXDATA_delay[223]; // rv 0
  assign CH1_TXDATA_in[224] = (CH1_TXDATA[224] !== 1'bz) && CH1_TXDATA_delay[224]; // rv 0
  assign CH1_TXDATA_in[225] = (CH1_TXDATA[225] !== 1'bz) && CH1_TXDATA_delay[225]; // rv 0
  assign CH1_TXDATA_in[226] = (CH1_TXDATA[226] !== 1'bz) && CH1_TXDATA_delay[226]; // rv 0
  assign CH1_TXDATA_in[227] = (CH1_TXDATA[227] !== 1'bz) && CH1_TXDATA_delay[227]; // rv 0
  assign CH1_TXDATA_in[228] = (CH1_TXDATA[228] !== 1'bz) && CH1_TXDATA_delay[228]; // rv 0
  assign CH1_TXDATA_in[229] = (CH1_TXDATA[229] !== 1'bz) && CH1_TXDATA_delay[229]; // rv 0
  assign CH1_TXDATA_in[22] = (CH1_TXDATA[22] !== 1'bz) && CH1_TXDATA_delay[22]; // rv 0
  assign CH1_TXDATA_in[230] = (CH1_TXDATA[230] !== 1'bz) && CH1_TXDATA_delay[230]; // rv 0
  assign CH1_TXDATA_in[231] = (CH1_TXDATA[231] !== 1'bz) && CH1_TXDATA_delay[231]; // rv 0
  assign CH1_TXDATA_in[232] = (CH1_TXDATA[232] !== 1'bz) && CH1_TXDATA_delay[232]; // rv 0
  assign CH1_TXDATA_in[233] = (CH1_TXDATA[233] !== 1'bz) && CH1_TXDATA_delay[233]; // rv 0
  assign CH1_TXDATA_in[234] = (CH1_TXDATA[234] !== 1'bz) && CH1_TXDATA_delay[234]; // rv 0
  assign CH1_TXDATA_in[235] = (CH1_TXDATA[235] !== 1'bz) && CH1_TXDATA_delay[235]; // rv 0
  assign CH1_TXDATA_in[236] = (CH1_TXDATA[236] !== 1'bz) && CH1_TXDATA_delay[236]; // rv 0
  assign CH1_TXDATA_in[237] = (CH1_TXDATA[237] !== 1'bz) && CH1_TXDATA_delay[237]; // rv 0
  assign CH1_TXDATA_in[238] = (CH1_TXDATA[238] !== 1'bz) && CH1_TXDATA_delay[238]; // rv 0
  assign CH1_TXDATA_in[239] = (CH1_TXDATA[239] !== 1'bz) && CH1_TXDATA_delay[239]; // rv 0
  assign CH1_TXDATA_in[23] = (CH1_TXDATA[23] !== 1'bz) && CH1_TXDATA_delay[23]; // rv 0
  assign CH1_TXDATA_in[240] = (CH1_TXDATA[240] !== 1'bz) && CH1_TXDATA_delay[240]; // rv 0
  assign CH1_TXDATA_in[241] = (CH1_TXDATA[241] !== 1'bz) && CH1_TXDATA_delay[241]; // rv 0
  assign CH1_TXDATA_in[242] = (CH1_TXDATA[242] !== 1'bz) && CH1_TXDATA_delay[242]; // rv 0
  assign CH1_TXDATA_in[243] = (CH1_TXDATA[243] !== 1'bz) && CH1_TXDATA_delay[243]; // rv 0
  assign CH1_TXDATA_in[244] = (CH1_TXDATA[244] !== 1'bz) && CH1_TXDATA_delay[244]; // rv 0
  assign CH1_TXDATA_in[245] = (CH1_TXDATA[245] !== 1'bz) && CH1_TXDATA_delay[245]; // rv 0
  assign CH1_TXDATA_in[246] = (CH1_TXDATA[246] !== 1'bz) && CH1_TXDATA_delay[246]; // rv 0
  assign CH1_TXDATA_in[247] = (CH1_TXDATA[247] !== 1'bz) && CH1_TXDATA_delay[247]; // rv 0
  assign CH1_TXDATA_in[248] = (CH1_TXDATA[248] !== 1'bz) && CH1_TXDATA_delay[248]; // rv 0
  assign CH1_TXDATA_in[249] = (CH1_TXDATA[249] !== 1'bz) && CH1_TXDATA_delay[249]; // rv 0
  assign CH1_TXDATA_in[24] = (CH1_TXDATA[24] !== 1'bz) && CH1_TXDATA_delay[24]; // rv 0
  assign CH1_TXDATA_in[250] = (CH1_TXDATA[250] !== 1'bz) && CH1_TXDATA_delay[250]; // rv 0
  assign CH1_TXDATA_in[251] = (CH1_TXDATA[251] !== 1'bz) && CH1_TXDATA_delay[251]; // rv 0
  assign CH1_TXDATA_in[252] = (CH1_TXDATA[252] !== 1'bz) && CH1_TXDATA_delay[252]; // rv 0
  assign CH1_TXDATA_in[253] = (CH1_TXDATA[253] !== 1'bz) && CH1_TXDATA_delay[253]; // rv 0
  assign CH1_TXDATA_in[254] = (CH1_TXDATA[254] !== 1'bz) && CH1_TXDATA_delay[254]; // rv 0
  assign CH1_TXDATA_in[255] = (CH1_TXDATA[255] !== 1'bz) && CH1_TXDATA_delay[255]; // rv 0
  assign CH1_TXDATA_in[25] = (CH1_TXDATA[25] !== 1'bz) && CH1_TXDATA_delay[25]; // rv 0
  assign CH1_TXDATA_in[26] = (CH1_TXDATA[26] !== 1'bz) && CH1_TXDATA_delay[26]; // rv 0
  assign CH1_TXDATA_in[27] = (CH1_TXDATA[27] !== 1'bz) && CH1_TXDATA_delay[27]; // rv 0
  assign CH1_TXDATA_in[28] = (CH1_TXDATA[28] !== 1'bz) && CH1_TXDATA_delay[28]; // rv 0
  assign CH1_TXDATA_in[29] = (CH1_TXDATA[29] !== 1'bz) && CH1_TXDATA_delay[29]; // rv 0
  assign CH1_TXDATA_in[2] = (CH1_TXDATA[2] !== 1'bz) && CH1_TXDATA_delay[2]; // rv 0
  assign CH1_TXDATA_in[30] = (CH1_TXDATA[30] !== 1'bz) && CH1_TXDATA_delay[30]; // rv 0
  assign CH1_TXDATA_in[31] = (CH1_TXDATA[31] !== 1'bz) && CH1_TXDATA_delay[31]; // rv 0
  assign CH1_TXDATA_in[32] = (CH1_TXDATA[32] !== 1'bz) && CH1_TXDATA_delay[32]; // rv 0
  assign CH1_TXDATA_in[33] = (CH1_TXDATA[33] !== 1'bz) && CH1_TXDATA_delay[33]; // rv 0
  assign CH1_TXDATA_in[34] = (CH1_TXDATA[34] !== 1'bz) && CH1_TXDATA_delay[34]; // rv 0
  assign CH1_TXDATA_in[35] = (CH1_TXDATA[35] !== 1'bz) && CH1_TXDATA_delay[35]; // rv 0
  assign CH1_TXDATA_in[36] = (CH1_TXDATA[36] !== 1'bz) && CH1_TXDATA_delay[36]; // rv 0
  assign CH1_TXDATA_in[37] = (CH1_TXDATA[37] !== 1'bz) && CH1_TXDATA_delay[37]; // rv 0
  assign CH1_TXDATA_in[38] = (CH1_TXDATA[38] !== 1'bz) && CH1_TXDATA_delay[38]; // rv 0
  assign CH1_TXDATA_in[39] = (CH1_TXDATA[39] !== 1'bz) && CH1_TXDATA_delay[39]; // rv 0
  assign CH1_TXDATA_in[3] = (CH1_TXDATA[3] !== 1'bz) && CH1_TXDATA_delay[3]; // rv 0
  assign CH1_TXDATA_in[40] = (CH1_TXDATA[40] !== 1'bz) && CH1_TXDATA_delay[40]; // rv 0
  assign CH1_TXDATA_in[41] = (CH1_TXDATA[41] !== 1'bz) && CH1_TXDATA_delay[41]; // rv 0
  assign CH1_TXDATA_in[42] = (CH1_TXDATA[42] !== 1'bz) && CH1_TXDATA_delay[42]; // rv 0
  assign CH1_TXDATA_in[43] = (CH1_TXDATA[43] !== 1'bz) && CH1_TXDATA_delay[43]; // rv 0
  assign CH1_TXDATA_in[44] = (CH1_TXDATA[44] !== 1'bz) && CH1_TXDATA_delay[44]; // rv 0
  assign CH1_TXDATA_in[45] = (CH1_TXDATA[45] !== 1'bz) && CH1_TXDATA_delay[45]; // rv 0
  assign CH1_TXDATA_in[46] = (CH1_TXDATA[46] !== 1'bz) && CH1_TXDATA_delay[46]; // rv 0
  assign CH1_TXDATA_in[47] = (CH1_TXDATA[47] !== 1'bz) && CH1_TXDATA_delay[47]; // rv 0
  assign CH1_TXDATA_in[48] = (CH1_TXDATA[48] !== 1'bz) && CH1_TXDATA_delay[48]; // rv 0
  assign CH1_TXDATA_in[49] = (CH1_TXDATA[49] !== 1'bz) && CH1_TXDATA_delay[49]; // rv 0
  assign CH1_TXDATA_in[4] = (CH1_TXDATA[4] !== 1'bz) && CH1_TXDATA_delay[4]; // rv 0
  assign CH1_TXDATA_in[50] = (CH1_TXDATA[50] !== 1'bz) && CH1_TXDATA_delay[50]; // rv 0
  assign CH1_TXDATA_in[51] = (CH1_TXDATA[51] !== 1'bz) && CH1_TXDATA_delay[51]; // rv 0
  assign CH1_TXDATA_in[52] = (CH1_TXDATA[52] !== 1'bz) && CH1_TXDATA_delay[52]; // rv 0
  assign CH1_TXDATA_in[53] = (CH1_TXDATA[53] !== 1'bz) && CH1_TXDATA_delay[53]; // rv 0
  assign CH1_TXDATA_in[54] = (CH1_TXDATA[54] !== 1'bz) && CH1_TXDATA_delay[54]; // rv 0
  assign CH1_TXDATA_in[55] = (CH1_TXDATA[55] !== 1'bz) && CH1_TXDATA_delay[55]; // rv 0
  assign CH1_TXDATA_in[56] = (CH1_TXDATA[56] !== 1'bz) && CH1_TXDATA_delay[56]; // rv 0
  assign CH1_TXDATA_in[57] = (CH1_TXDATA[57] !== 1'bz) && CH1_TXDATA_delay[57]; // rv 0
  assign CH1_TXDATA_in[58] = (CH1_TXDATA[58] !== 1'bz) && CH1_TXDATA_delay[58]; // rv 0
  assign CH1_TXDATA_in[59] = (CH1_TXDATA[59] !== 1'bz) && CH1_TXDATA_delay[59]; // rv 0
  assign CH1_TXDATA_in[5] = (CH1_TXDATA[5] !== 1'bz) && CH1_TXDATA_delay[5]; // rv 0
  assign CH1_TXDATA_in[60] = (CH1_TXDATA[60] !== 1'bz) && CH1_TXDATA_delay[60]; // rv 0
  assign CH1_TXDATA_in[61] = (CH1_TXDATA[61] !== 1'bz) && CH1_TXDATA_delay[61]; // rv 0
  assign CH1_TXDATA_in[62] = (CH1_TXDATA[62] !== 1'bz) && CH1_TXDATA_delay[62]; // rv 0
  assign CH1_TXDATA_in[63] = (CH1_TXDATA[63] !== 1'bz) && CH1_TXDATA_delay[63]; // rv 0
  assign CH1_TXDATA_in[64] = (CH1_TXDATA[64] !== 1'bz) && CH1_TXDATA_delay[64]; // rv 0
  assign CH1_TXDATA_in[65] = (CH1_TXDATA[65] !== 1'bz) && CH1_TXDATA_delay[65]; // rv 0
  assign CH1_TXDATA_in[66] = (CH1_TXDATA[66] !== 1'bz) && CH1_TXDATA_delay[66]; // rv 0
  assign CH1_TXDATA_in[67] = (CH1_TXDATA[67] !== 1'bz) && CH1_TXDATA_delay[67]; // rv 0
  assign CH1_TXDATA_in[68] = (CH1_TXDATA[68] !== 1'bz) && CH1_TXDATA_delay[68]; // rv 0
  assign CH1_TXDATA_in[69] = (CH1_TXDATA[69] !== 1'bz) && CH1_TXDATA_delay[69]; // rv 0
  assign CH1_TXDATA_in[6] = (CH1_TXDATA[6] !== 1'bz) && CH1_TXDATA_delay[6]; // rv 0
  assign CH1_TXDATA_in[70] = (CH1_TXDATA[70] !== 1'bz) && CH1_TXDATA_delay[70]; // rv 0
  assign CH1_TXDATA_in[71] = (CH1_TXDATA[71] !== 1'bz) && CH1_TXDATA_delay[71]; // rv 0
  assign CH1_TXDATA_in[72] = (CH1_TXDATA[72] !== 1'bz) && CH1_TXDATA_delay[72]; // rv 0
  assign CH1_TXDATA_in[73] = (CH1_TXDATA[73] !== 1'bz) && CH1_TXDATA_delay[73]; // rv 0
  assign CH1_TXDATA_in[74] = (CH1_TXDATA[74] !== 1'bz) && CH1_TXDATA_delay[74]; // rv 0
  assign CH1_TXDATA_in[75] = (CH1_TXDATA[75] !== 1'bz) && CH1_TXDATA_delay[75]; // rv 0
  assign CH1_TXDATA_in[76] = (CH1_TXDATA[76] !== 1'bz) && CH1_TXDATA_delay[76]; // rv 0
  assign CH1_TXDATA_in[77] = (CH1_TXDATA[77] !== 1'bz) && CH1_TXDATA_delay[77]; // rv 0
  assign CH1_TXDATA_in[78] = (CH1_TXDATA[78] !== 1'bz) && CH1_TXDATA_delay[78]; // rv 0
  assign CH1_TXDATA_in[79] = (CH1_TXDATA[79] !== 1'bz) && CH1_TXDATA_delay[79]; // rv 0
  assign CH1_TXDATA_in[7] = (CH1_TXDATA[7] !== 1'bz) && CH1_TXDATA_delay[7]; // rv 0
  assign CH1_TXDATA_in[80] = (CH1_TXDATA[80] !== 1'bz) && CH1_TXDATA_delay[80]; // rv 0
  assign CH1_TXDATA_in[81] = (CH1_TXDATA[81] !== 1'bz) && CH1_TXDATA_delay[81]; // rv 0
  assign CH1_TXDATA_in[82] = (CH1_TXDATA[82] !== 1'bz) && CH1_TXDATA_delay[82]; // rv 0
  assign CH1_TXDATA_in[83] = (CH1_TXDATA[83] !== 1'bz) && CH1_TXDATA_delay[83]; // rv 0
  assign CH1_TXDATA_in[84] = (CH1_TXDATA[84] !== 1'bz) && CH1_TXDATA_delay[84]; // rv 0
  assign CH1_TXDATA_in[85] = (CH1_TXDATA[85] !== 1'bz) && CH1_TXDATA_delay[85]; // rv 0
  assign CH1_TXDATA_in[86] = (CH1_TXDATA[86] !== 1'bz) && CH1_TXDATA_delay[86]; // rv 0
  assign CH1_TXDATA_in[87] = (CH1_TXDATA[87] !== 1'bz) && CH1_TXDATA_delay[87]; // rv 0
  assign CH1_TXDATA_in[88] = (CH1_TXDATA[88] !== 1'bz) && CH1_TXDATA_delay[88]; // rv 0
  assign CH1_TXDATA_in[89] = (CH1_TXDATA[89] !== 1'bz) && CH1_TXDATA_delay[89]; // rv 0
  assign CH1_TXDATA_in[8] = (CH1_TXDATA[8] !== 1'bz) && CH1_TXDATA_delay[8]; // rv 0
  assign CH1_TXDATA_in[90] = (CH1_TXDATA[90] !== 1'bz) && CH1_TXDATA_delay[90]; // rv 0
  assign CH1_TXDATA_in[91] = (CH1_TXDATA[91] !== 1'bz) && CH1_TXDATA_delay[91]; // rv 0
  assign CH1_TXDATA_in[92] = (CH1_TXDATA[92] !== 1'bz) && CH1_TXDATA_delay[92]; // rv 0
  assign CH1_TXDATA_in[93] = (CH1_TXDATA[93] !== 1'bz) && CH1_TXDATA_delay[93]; // rv 0
  assign CH1_TXDATA_in[94] = (CH1_TXDATA[94] !== 1'bz) && CH1_TXDATA_delay[94]; // rv 0
  assign CH1_TXDATA_in[95] = (CH1_TXDATA[95] !== 1'bz) && CH1_TXDATA_delay[95]; // rv 0
  assign CH1_TXDATA_in[96] = (CH1_TXDATA[96] !== 1'bz) && CH1_TXDATA_delay[96]; // rv 0
  assign CH1_TXDATA_in[97] = (CH1_TXDATA[97] !== 1'bz) && CH1_TXDATA_delay[97]; // rv 0
  assign CH1_TXDATA_in[98] = (CH1_TXDATA[98] !== 1'bz) && CH1_TXDATA_delay[98]; // rv 0
  assign CH1_TXDATA_in[99] = (CH1_TXDATA[99] !== 1'bz) && CH1_TXDATA_delay[99]; // rv 0
  assign CH1_TXDATA_in[9] = (CH1_TXDATA[9] !== 1'bz) && CH1_TXDATA_delay[9]; // rv 0
  assign CH1_TXINHIBIT_in = (CH1_TXINHIBIT !== 1'bz) && CH1_TXINHIBIT_delay; // rv 0
  assign CH1_TXPOLARITY_in = (CH1_TXPOLARITY !== 1'bz) && CH1_TXPOLARITY_delay; // rv 0
  assign CH1_TXPRBSINERR_in = (CH1_TXPRBSINERR !== 1'bz) && CH1_TXPRBSINERR_delay; // rv 0
  assign CH1_TXPRBSPTN_in[0] = (CH1_TXPRBSPTN[0] !== 1'bz) && CH1_TXPRBSPTN_delay[0]; // rv 0
  assign CH1_TXPRBSPTN_in[1] = (CH1_TXPRBSPTN[1] !== 1'bz) && CH1_TXPRBSPTN_delay[1]; // rv 0
  assign CH1_TXPRBSPTN_in[2] = (CH1_TXPRBSPTN[2] !== 1'bz) && CH1_TXPRBSPTN_delay[2]; // rv 0
  assign CH1_TXPRBSPTN_in[3] = (CH1_TXPRBSPTN[3] !== 1'bz) && CH1_TXPRBSPTN_delay[3]; // rv 0
  assign CH1_TXQPRBSEN_in = (CH1_TXQPRBSEN !== 1'bz) && CH1_TXQPRBSEN_delay; // rv 0
  assign CH1_TXUSRCLK2_in = (CH1_TXUSRCLK2 !== 1'bz) && CH1_TXUSRCLK2_delay; // rv 0
  assign CH1_TXUSRCLK_in = (CH1_TXUSRCLK !== 1'bz) && CH1_TXUSRCLK_delay; // rv 0
  assign DRPADDR_in[0] = (DRPADDR[0] !== 1'bz) && DRPADDR_delay[0]; // rv 0
  assign DRPADDR_in[10] = (DRPADDR[10] !== 1'bz) && DRPADDR_delay[10]; // rv 0
  assign DRPADDR_in[1] = (DRPADDR[1] !== 1'bz) && DRPADDR_delay[1]; // rv 0
  assign DRPADDR_in[2] = (DRPADDR[2] !== 1'bz) && DRPADDR_delay[2]; // rv 0
  assign DRPADDR_in[3] = (DRPADDR[3] !== 1'bz) && DRPADDR_delay[3]; // rv 0
  assign DRPADDR_in[4] = (DRPADDR[4] !== 1'bz) && DRPADDR_delay[4]; // rv 0
  assign DRPADDR_in[5] = (DRPADDR[5] !== 1'bz) && DRPADDR_delay[5]; // rv 0
  assign DRPADDR_in[6] = (DRPADDR[6] !== 1'bz) && DRPADDR_delay[6]; // rv 0
  assign DRPADDR_in[7] = (DRPADDR[7] !== 1'bz) && DRPADDR_delay[7]; // rv 0
  assign DRPADDR_in[8] = (DRPADDR[8] !== 1'bz) && DRPADDR_delay[8]; // rv 0
  assign DRPADDR_in[9] = (DRPADDR[9] !== 1'bz) && DRPADDR_delay[9]; // rv 0
  assign DRPCLK_in = (DRPCLK !== 1'bz) && DRPCLK_delay; // rv 0
  assign DRPDI_in[0] = (DRPDI[0] !== 1'bz) && DRPDI_delay[0]; // rv 0
  assign DRPDI_in[10] = (DRPDI[10] !== 1'bz) && DRPDI_delay[10]; // rv 0
  assign DRPDI_in[11] = (DRPDI[11] !== 1'bz) && DRPDI_delay[11]; // rv 0
  assign DRPDI_in[12] = (DRPDI[12] !== 1'bz) && DRPDI_delay[12]; // rv 0
  assign DRPDI_in[13] = (DRPDI[13] !== 1'bz) && DRPDI_delay[13]; // rv 0
  assign DRPDI_in[14] = (DRPDI[14] !== 1'bz) && DRPDI_delay[14]; // rv 0
  assign DRPDI_in[15] = (DRPDI[15] !== 1'bz) && DRPDI_delay[15]; // rv 0
  assign DRPDI_in[1] = (DRPDI[1] !== 1'bz) && DRPDI_delay[1]; // rv 0
  assign DRPDI_in[2] = (DRPDI[2] !== 1'bz) && DRPDI_delay[2]; // rv 0
  assign DRPDI_in[3] = (DRPDI[3] !== 1'bz) && DRPDI_delay[3]; // rv 0
  assign DRPDI_in[4] = (DRPDI[4] !== 1'bz) && DRPDI_delay[4]; // rv 0
  assign DRPDI_in[5] = (DRPDI[5] !== 1'bz) && DRPDI_delay[5]; // rv 0
  assign DRPDI_in[6] = (DRPDI[6] !== 1'bz) && DRPDI_delay[6]; // rv 0
  assign DRPDI_in[7] = (DRPDI[7] !== 1'bz) && DRPDI_delay[7]; // rv 0
  assign DRPDI_in[8] = (DRPDI[8] !== 1'bz) && DRPDI_delay[8]; // rv 0
  assign DRPDI_in[9] = (DRPDI[9] !== 1'bz) && DRPDI_delay[9]; // rv 0
  assign DRPEN_in = (DRPEN !== 1'bz) && DRPEN_delay; // rv 0
  assign DRPWE_in = (DRPWE !== 1'bz) && DRPWE_delay; // rv 0
  assign FECCTRLRX0BITSLIPFS_in = (FECCTRLRX0BITSLIPFS !== 1'bz) && FECCTRLRX0BITSLIPFS_delay; // rv 0
  assign FECCTRLRX1BITSLIPFS_in = (FECCTRLRX1BITSLIPFS !== 1'bz) && FECCTRLRX1BITSLIPFS_delay; // rv 0
`else
  assign CH0_AXISEN_in = (CH0_AXISEN !== 1'bz) && CH0_AXISEN; // rv 0
  assign CH0_AXISTRDY_in = (CH0_AXISTRDY !== 1'bz) && CH0_AXISTRDY; // rv 0
  assign CH0_RXEQTRAINING_in = (CH0_RXEQTRAINING !== 1'bz) && CH0_RXEQTRAINING; // rv 0
  assign CH0_RXPOLARITY_in = (CH0_RXPOLARITY !== 1'bz) && CH0_RXPOLARITY; // rv 0
  assign CH0_RXPRBSCNTSTOP_in = (CH0_RXPRBSCNTSTOP !== 1'bz) && CH0_RXPRBSCNTSTOP; // rv 0
  assign CH0_RXPRBSPTN_in[0] = (CH0_RXPRBSPTN[0] !== 1'bz) && CH0_RXPRBSPTN[0]; // rv 0
  assign CH0_RXPRBSPTN_in[1] = (CH0_RXPRBSPTN[1] !== 1'bz) && CH0_RXPRBSPTN[1]; // rv 0
  assign CH0_RXPRBSPTN_in[2] = (CH0_RXPRBSPTN[2] !== 1'bz) && CH0_RXPRBSPTN[2]; // rv 0
  assign CH0_RXPRBSPTN_in[3] = (CH0_RXPRBSPTN[3] !== 1'bz) && CH0_RXPRBSPTN[3]; // rv 0
  assign CH0_RXQPRBSEN_in = (CH0_RXQPRBSEN !== 1'bz) && CH0_RXQPRBSEN; // rv 0
  assign CH0_RXUSRCLK2_in = (CH0_RXUSRCLK2 !== 1'bz) && CH0_RXUSRCLK2; // rv 0
  assign CH0_RXUSRCLK_in = (CH0_RXUSRCLK !== 1'bz) && CH0_RXUSRCLK; // rv 0
  assign CH0_TXDATASTART_in = (CH0_TXDATASTART !== 1'bz) && CH0_TXDATASTART; // rv 0
  assign CH0_TXDATA_in[0] = (CH0_TXDATA[0] !== 1'bz) && CH0_TXDATA[0]; // rv 0
  assign CH0_TXDATA_in[100] = (CH0_TXDATA[100] !== 1'bz) && CH0_TXDATA[100]; // rv 0
  assign CH0_TXDATA_in[101] = (CH0_TXDATA[101] !== 1'bz) && CH0_TXDATA[101]; // rv 0
  assign CH0_TXDATA_in[102] = (CH0_TXDATA[102] !== 1'bz) && CH0_TXDATA[102]; // rv 0
  assign CH0_TXDATA_in[103] = (CH0_TXDATA[103] !== 1'bz) && CH0_TXDATA[103]; // rv 0
  assign CH0_TXDATA_in[104] = (CH0_TXDATA[104] !== 1'bz) && CH0_TXDATA[104]; // rv 0
  assign CH0_TXDATA_in[105] = (CH0_TXDATA[105] !== 1'bz) && CH0_TXDATA[105]; // rv 0
  assign CH0_TXDATA_in[106] = (CH0_TXDATA[106] !== 1'bz) && CH0_TXDATA[106]; // rv 0
  assign CH0_TXDATA_in[107] = (CH0_TXDATA[107] !== 1'bz) && CH0_TXDATA[107]; // rv 0
  assign CH0_TXDATA_in[108] = (CH0_TXDATA[108] !== 1'bz) && CH0_TXDATA[108]; // rv 0
  assign CH0_TXDATA_in[109] = (CH0_TXDATA[109] !== 1'bz) && CH0_TXDATA[109]; // rv 0
  assign CH0_TXDATA_in[10] = (CH0_TXDATA[10] !== 1'bz) && CH0_TXDATA[10]; // rv 0
  assign CH0_TXDATA_in[110] = (CH0_TXDATA[110] !== 1'bz) && CH0_TXDATA[110]; // rv 0
  assign CH0_TXDATA_in[111] = (CH0_TXDATA[111] !== 1'bz) && CH0_TXDATA[111]; // rv 0
  assign CH0_TXDATA_in[112] = (CH0_TXDATA[112] !== 1'bz) && CH0_TXDATA[112]; // rv 0
  assign CH0_TXDATA_in[113] = (CH0_TXDATA[113] !== 1'bz) && CH0_TXDATA[113]; // rv 0
  assign CH0_TXDATA_in[114] = (CH0_TXDATA[114] !== 1'bz) && CH0_TXDATA[114]; // rv 0
  assign CH0_TXDATA_in[115] = (CH0_TXDATA[115] !== 1'bz) && CH0_TXDATA[115]; // rv 0
  assign CH0_TXDATA_in[116] = (CH0_TXDATA[116] !== 1'bz) && CH0_TXDATA[116]; // rv 0
  assign CH0_TXDATA_in[117] = (CH0_TXDATA[117] !== 1'bz) && CH0_TXDATA[117]; // rv 0
  assign CH0_TXDATA_in[118] = (CH0_TXDATA[118] !== 1'bz) && CH0_TXDATA[118]; // rv 0
  assign CH0_TXDATA_in[119] = (CH0_TXDATA[119] !== 1'bz) && CH0_TXDATA[119]; // rv 0
  assign CH0_TXDATA_in[11] = (CH0_TXDATA[11] !== 1'bz) && CH0_TXDATA[11]; // rv 0
  assign CH0_TXDATA_in[120] = (CH0_TXDATA[120] !== 1'bz) && CH0_TXDATA[120]; // rv 0
  assign CH0_TXDATA_in[121] = (CH0_TXDATA[121] !== 1'bz) && CH0_TXDATA[121]; // rv 0
  assign CH0_TXDATA_in[122] = (CH0_TXDATA[122] !== 1'bz) && CH0_TXDATA[122]; // rv 0
  assign CH0_TXDATA_in[123] = (CH0_TXDATA[123] !== 1'bz) && CH0_TXDATA[123]; // rv 0
  assign CH0_TXDATA_in[124] = (CH0_TXDATA[124] !== 1'bz) && CH0_TXDATA[124]; // rv 0
  assign CH0_TXDATA_in[125] = (CH0_TXDATA[125] !== 1'bz) && CH0_TXDATA[125]; // rv 0
  assign CH0_TXDATA_in[126] = (CH0_TXDATA[126] !== 1'bz) && CH0_TXDATA[126]; // rv 0
  assign CH0_TXDATA_in[127] = (CH0_TXDATA[127] !== 1'bz) && CH0_TXDATA[127]; // rv 0
  assign CH0_TXDATA_in[128] = (CH0_TXDATA[128] !== 1'bz) && CH0_TXDATA[128]; // rv 0
  assign CH0_TXDATA_in[129] = (CH0_TXDATA[129] !== 1'bz) && CH0_TXDATA[129]; // rv 0
  assign CH0_TXDATA_in[12] = (CH0_TXDATA[12] !== 1'bz) && CH0_TXDATA[12]; // rv 0
  assign CH0_TXDATA_in[130] = (CH0_TXDATA[130] !== 1'bz) && CH0_TXDATA[130]; // rv 0
  assign CH0_TXDATA_in[131] = (CH0_TXDATA[131] !== 1'bz) && CH0_TXDATA[131]; // rv 0
  assign CH0_TXDATA_in[132] = (CH0_TXDATA[132] !== 1'bz) && CH0_TXDATA[132]; // rv 0
  assign CH0_TXDATA_in[133] = (CH0_TXDATA[133] !== 1'bz) && CH0_TXDATA[133]; // rv 0
  assign CH0_TXDATA_in[134] = (CH0_TXDATA[134] !== 1'bz) && CH0_TXDATA[134]; // rv 0
  assign CH0_TXDATA_in[135] = (CH0_TXDATA[135] !== 1'bz) && CH0_TXDATA[135]; // rv 0
  assign CH0_TXDATA_in[136] = (CH0_TXDATA[136] !== 1'bz) && CH0_TXDATA[136]; // rv 0
  assign CH0_TXDATA_in[137] = (CH0_TXDATA[137] !== 1'bz) && CH0_TXDATA[137]; // rv 0
  assign CH0_TXDATA_in[138] = (CH0_TXDATA[138] !== 1'bz) && CH0_TXDATA[138]; // rv 0
  assign CH0_TXDATA_in[139] = (CH0_TXDATA[139] !== 1'bz) && CH0_TXDATA[139]; // rv 0
  assign CH0_TXDATA_in[13] = (CH0_TXDATA[13] !== 1'bz) && CH0_TXDATA[13]; // rv 0
  assign CH0_TXDATA_in[140] = (CH0_TXDATA[140] !== 1'bz) && CH0_TXDATA[140]; // rv 0
  assign CH0_TXDATA_in[141] = (CH0_TXDATA[141] !== 1'bz) && CH0_TXDATA[141]; // rv 0
  assign CH0_TXDATA_in[142] = (CH0_TXDATA[142] !== 1'bz) && CH0_TXDATA[142]; // rv 0
  assign CH0_TXDATA_in[143] = (CH0_TXDATA[143] !== 1'bz) && CH0_TXDATA[143]; // rv 0
  assign CH0_TXDATA_in[144] = (CH0_TXDATA[144] !== 1'bz) && CH0_TXDATA[144]; // rv 0
  assign CH0_TXDATA_in[145] = (CH0_TXDATA[145] !== 1'bz) && CH0_TXDATA[145]; // rv 0
  assign CH0_TXDATA_in[146] = (CH0_TXDATA[146] !== 1'bz) && CH0_TXDATA[146]; // rv 0
  assign CH0_TXDATA_in[147] = (CH0_TXDATA[147] !== 1'bz) && CH0_TXDATA[147]; // rv 0
  assign CH0_TXDATA_in[148] = (CH0_TXDATA[148] !== 1'bz) && CH0_TXDATA[148]; // rv 0
  assign CH0_TXDATA_in[149] = (CH0_TXDATA[149] !== 1'bz) && CH0_TXDATA[149]; // rv 0
  assign CH0_TXDATA_in[14] = (CH0_TXDATA[14] !== 1'bz) && CH0_TXDATA[14]; // rv 0
  assign CH0_TXDATA_in[150] = (CH0_TXDATA[150] !== 1'bz) && CH0_TXDATA[150]; // rv 0
  assign CH0_TXDATA_in[151] = (CH0_TXDATA[151] !== 1'bz) && CH0_TXDATA[151]; // rv 0
  assign CH0_TXDATA_in[152] = (CH0_TXDATA[152] !== 1'bz) && CH0_TXDATA[152]; // rv 0
  assign CH0_TXDATA_in[153] = (CH0_TXDATA[153] !== 1'bz) && CH0_TXDATA[153]; // rv 0
  assign CH0_TXDATA_in[154] = (CH0_TXDATA[154] !== 1'bz) && CH0_TXDATA[154]; // rv 0
  assign CH0_TXDATA_in[155] = (CH0_TXDATA[155] !== 1'bz) && CH0_TXDATA[155]; // rv 0
  assign CH0_TXDATA_in[156] = (CH0_TXDATA[156] !== 1'bz) && CH0_TXDATA[156]; // rv 0
  assign CH0_TXDATA_in[157] = (CH0_TXDATA[157] !== 1'bz) && CH0_TXDATA[157]; // rv 0
  assign CH0_TXDATA_in[158] = (CH0_TXDATA[158] !== 1'bz) && CH0_TXDATA[158]; // rv 0
  assign CH0_TXDATA_in[159] = (CH0_TXDATA[159] !== 1'bz) && CH0_TXDATA[159]; // rv 0
  assign CH0_TXDATA_in[15] = (CH0_TXDATA[15] !== 1'bz) && CH0_TXDATA[15]; // rv 0
  assign CH0_TXDATA_in[160] = (CH0_TXDATA[160] !== 1'bz) && CH0_TXDATA[160]; // rv 0
  assign CH0_TXDATA_in[161] = (CH0_TXDATA[161] !== 1'bz) && CH0_TXDATA[161]; // rv 0
  assign CH0_TXDATA_in[162] = (CH0_TXDATA[162] !== 1'bz) && CH0_TXDATA[162]; // rv 0
  assign CH0_TXDATA_in[163] = (CH0_TXDATA[163] !== 1'bz) && CH0_TXDATA[163]; // rv 0
  assign CH0_TXDATA_in[164] = (CH0_TXDATA[164] !== 1'bz) && CH0_TXDATA[164]; // rv 0
  assign CH0_TXDATA_in[165] = (CH0_TXDATA[165] !== 1'bz) && CH0_TXDATA[165]; // rv 0
  assign CH0_TXDATA_in[166] = (CH0_TXDATA[166] !== 1'bz) && CH0_TXDATA[166]; // rv 0
  assign CH0_TXDATA_in[167] = (CH0_TXDATA[167] !== 1'bz) && CH0_TXDATA[167]; // rv 0
  assign CH0_TXDATA_in[168] = (CH0_TXDATA[168] !== 1'bz) && CH0_TXDATA[168]; // rv 0
  assign CH0_TXDATA_in[169] = (CH0_TXDATA[169] !== 1'bz) && CH0_TXDATA[169]; // rv 0
  assign CH0_TXDATA_in[16] = (CH0_TXDATA[16] !== 1'bz) && CH0_TXDATA[16]; // rv 0
  assign CH0_TXDATA_in[170] = (CH0_TXDATA[170] !== 1'bz) && CH0_TXDATA[170]; // rv 0
  assign CH0_TXDATA_in[171] = (CH0_TXDATA[171] !== 1'bz) && CH0_TXDATA[171]; // rv 0
  assign CH0_TXDATA_in[172] = (CH0_TXDATA[172] !== 1'bz) && CH0_TXDATA[172]; // rv 0
  assign CH0_TXDATA_in[173] = (CH0_TXDATA[173] !== 1'bz) && CH0_TXDATA[173]; // rv 0
  assign CH0_TXDATA_in[174] = (CH0_TXDATA[174] !== 1'bz) && CH0_TXDATA[174]; // rv 0
  assign CH0_TXDATA_in[175] = (CH0_TXDATA[175] !== 1'bz) && CH0_TXDATA[175]; // rv 0
  assign CH0_TXDATA_in[176] = (CH0_TXDATA[176] !== 1'bz) && CH0_TXDATA[176]; // rv 0
  assign CH0_TXDATA_in[177] = (CH0_TXDATA[177] !== 1'bz) && CH0_TXDATA[177]; // rv 0
  assign CH0_TXDATA_in[178] = (CH0_TXDATA[178] !== 1'bz) && CH0_TXDATA[178]; // rv 0
  assign CH0_TXDATA_in[179] = (CH0_TXDATA[179] !== 1'bz) && CH0_TXDATA[179]; // rv 0
  assign CH0_TXDATA_in[17] = (CH0_TXDATA[17] !== 1'bz) && CH0_TXDATA[17]; // rv 0
  assign CH0_TXDATA_in[180] = (CH0_TXDATA[180] !== 1'bz) && CH0_TXDATA[180]; // rv 0
  assign CH0_TXDATA_in[181] = (CH0_TXDATA[181] !== 1'bz) && CH0_TXDATA[181]; // rv 0
  assign CH0_TXDATA_in[182] = (CH0_TXDATA[182] !== 1'bz) && CH0_TXDATA[182]; // rv 0
  assign CH0_TXDATA_in[183] = (CH0_TXDATA[183] !== 1'bz) && CH0_TXDATA[183]; // rv 0
  assign CH0_TXDATA_in[184] = (CH0_TXDATA[184] !== 1'bz) && CH0_TXDATA[184]; // rv 0
  assign CH0_TXDATA_in[185] = (CH0_TXDATA[185] !== 1'bz) && CH0_TXDATA[185]; // rv 0
  assign CH0_TXDATA_in[186] = (CH0_TXDATA[186] !== 1'bz) && CH0_TXDATA[186]; // rv 0
  assign CH0_TXDATA_in[187] = (CH0_TXDATA[187] !== 1'bz) && CH0_TXDATA[187]; // rv 0
  assign CH0_TXDATA_in[188] = (CH0_TXDATA[188] !== 1'bz) && CH0_TXDATA[188]; // rv 0
  assign CH0_TXDATA_in[189] = (CH0_TXDATA[189] !== 1'bz) && CH0_TXDATA[189]; // rv 0
  assign CH0_TXDATA_in[18] = (CH0_TXDATA[18] !== 1'bz) && CH0_TXDATA[18]; // rv 0
  assign CH0_TXDATA_in[190] = (CH0_TXDATA[190] !== 1'bz) && CH0_TXDATA[190]; // rv 0
  assign CH0_TXDATA_in[191] = (CH0_TXDATA[191] !== 1'bz) && CH0_TXDATA[191]; // rv 0
  assign CH0_TXDATA_in[192] = (CH0_TXDATA[192] !== 1'bz) && CH0_TXDATA[192]; // rv 0
  assign CH0_TXDATA_in[193] = (CH0_TXDATA[193] !== 1'bz) && CH0_TXDATA[193]; // rv 0
  assign CH0_TXDATA_in[194] = (CH0_TXDATA[194] !== 1'bz) && CH0_TXDATA[194]; // rv 0
  assign CH0_TXDATA_in[195] = (CH0_TXDATA[195] !== 1'bz) && CH0_TXDATA[195]; // rv 0
  assign CH0_TXDATA_in[196] = (CH0_TXDATA[196] !== 1'bz) && CH0_TXDATA[196]; // rv 0
  assign CH0_TXDATA_in[197] = (CH0_TXDATA[197] !== 1'bz) && CH0_TXDATA[197]; // rv 0
  assign CH0_TXDATA_in[198] = (CH0_TXDATA[198] !== 1'bz) && CH0_TXDATA[198]; // rv 0
  assign CH0_TXDATA_in[199] = (CH0_TXDATA[199] !== 1'bz) && CH0_TXDATA[199]; // rv 0
  assign CH0_TXDATA_in[19] = (CH0_TXDATA[19] !== 1'bz) && CH0_TXDATA[19]; // rv 0
  assign CH0_TXDATA_in[1] = (CH0_TXDATA[1] !== 1'bz) && CH0_TXDATA[1]; // rv 0
  assign CH0_TXDATA_in[200] = (CH0_TXDATA[200] !== 1'bz) && CH0_TXDATA[200]; // rv 0
  assign CH0_TXDATA_in[201] = (CH0_TXDATA[201] !== 1'bz) && CH0_TXDATA[201]; // rv 0
  assign CH0_TXDATA_in[202] = (CH0_TXDATA[202] !== 1'bz) && CH0_TXDATA[202]; // rv 0
  assign CH0_TXDATA_in[203] = (CH0_TXDATA[203] !== 1'bz) && CH0_TXDATA[203]; // rv 0
  assign CH0_TXDATA_in[204] = (CH0_TXDATA[204] !== 1'bz) && CH0_TXDATA[204]; // rv 0
  assign CH0_TXDATA_in[205] = (CH0_TXDATA[205] !== 1'bz) && CH0_TXDATA[205]; // rv 0
  assign CH0_TXDATA_in[206] = (CH0_TXDATA[206] !== 1'bz) && CH0_TXDATA[206]; // rv 0
  assign CH0_TXDATA_in[207] = (CH0_TXDATA[207] !== 1'bz) && CH0_TXDATA[207]; // rv 0
  assign CH0_TXDATA_in[208] = (CH0_TXDATA[208] !== 1'bz) && CH0_TXDATA[208]; // rv 0
  assign CH0_TXDATA_in[209] = (CH0_TXDATA[209] !== 1'bz) && CH0_TXDATA[209]; // rv 0
  assign CH0_TXDATA_in[20] = (CH0_TXDATA[20] !== 1'bz) && CH0_TXDATA[20]; // rv 0
  assign CH0_TXDATA_in[210] = (CH0_TXDATA[210] !== 1'bz) && CH0_TXDATA[210]; // rv 0
  assign CH0_TXDATA_in[211] = (CH0_TXDATA[211] !== 1'bz) && CH0_TXDATA[211]; // rv 0
  assign CH0_TXDATA_in[212] = (CH0_TXDATA[212] !== 1'bz) && CH0_TXDATA[212]; // rv 0
  assign CH0_TXDATA_in[213] = (CH0_TXDATA[213] !== 1'bz) && CH0_TXDATA[213]; // rv 0
  assign CH0_TXDATA_in[214] = (CH0_TXDATA[214] !== 1'bz) && CH0_TXDATA[214]; // rv 0
  assign CH0_TXDATA_in[215] = (CH0_TXDATA[215] !== 1'bz) && CH0_TXDATA[215]; // rv 0
  assign CH0_TXDATA_in[216] = (CH0_TXDATA[216] !== 1'bz) && CH0_TXDATA[216]; // rv 0
  assign CH0_TXDATA_in[217] = (CH0_TXDATA[217] !== 1'bz) && CH0_TXDATA[217]; // rv 0
  assign CH0_TXDATA_in[218] = (CH0_TXDATA[218] !== 1'bz) && CH0_TXDATA[218]; // rv 0
  assign CH0_TXDATA_in[219] = (CH0_TXDATA[219] !== 1'bz) && CH0_TXDATA[219]; // rv 0
  assign CH0_TXDATA_in[21] = (CH0_TXDATA[21] !== 1'bz) && CH0_TXDATA[21]; // rv 0
  assign CH0_TXDATA_in[220] = (CH0_TXDATA[220] !== 1'bz) && CH0_TXDATA[220]; // rv 0
  assign CH0_TXDATA_in[221] = (CH0_TXDATA[221] !== 1'bz) && CH0_TXDATA[221]; // rv 0
  assign CH0_TXDATA_in[222] = (CH0_TXDATA[222] !== 1'bz) && CH0_TXDATA[222]; // rv 0
  assign CH0_TXDATA_in[223] = (CH0_TXDATA[223] !== 1'bz) && CH0_TXDATA[223]; // rv 0
  assign CH0_TXDATA_in[224] = (CH0_TXDATA[224] !== 1'bz) && CH0_TXDATA[224]; // rv 0
  assign CH0_TXDATA_in[225] = (CH0_TXDATA[225] !== 1'bz) && CH0_TXDATA[225]; // rv 0
  assign CH0_TXDATA_in[226] = (CH0_TXDATA[226] !== 1'bz) && CH0_TXDATA[226]; // rv 0
  assign CH0_TXDATA_in[227] = (CH0_TXDATA[227] !== 1'bz) && CH0_TXDATA[227]; // rv 0
  assign CH0_TXDATA_in[228] = (CH0_TXDATA[228] !== 1'bz) && CH0_TXDATA[228]; // rv 0
  assign CH0_TXDATA_in[229] = (CH0_TXDATA[229] !== 1'bz) && CH0_TXDATA[229]; // rv 0
  assign CH0_TXDATA_in[22] = (CH0_TXDATA[22] !== 1'bz) && CH0_TXDATA[22]; // rv 0
  assign CH0_TXDATA_in[230] = (CH0_TXDATA[230] !== 1'bz) && CH0_TXDATA[230]; // rv 0
  assign CH0_TXDATA_in[231] = (CH0_TXDATA[231] !== 1'bz) && CH0_TXDATA[231]; // rv 0
  assign CH0_TXDATA_in[232] = (CH0_TXDATA[232] !== 1'bz) && CH0_TXDATA[232]; // rv 0
  assign CH0_TXDATA_in[233] = (CH0_TXDATA[233] !== 1'bz) && CH0_TXDATA[233]; // rv 0
  assign CH0_TXDATA_in[234] = (CH0_TXDATA[234] !== 1'bz) && CH0_TXDATA[234]; // rv 0
  assign CH0_TXDATA_in[235] = (CH0_TXDATA[235] !== 1'bz) && CH0_TXDATA[235]; // rv 0
  assign CH0_TXDATA_in[236] = (CH0_TXDATA[236] !== 1'bz) && CH0_TXDATA[236]; // rv 0
  assign CH0_TXDATA_in[237] = (CH0_TXDATA[237] !== 1'bz) && CH0_TXDATA[237]; // rv 0
  assign CH0_TXDATA_in[238] = (CH0_TXDATA[238] !== 1'bz) && CH0_TXDATA[238]; // rv 0
  assign CH0_TXDATA_in[239] = (CH0_TXDATA[239] !== 1'bz) && CH0_TXDATA[239]; // rv 0
  assign CH0_TXDATA_in[23] = (CH0_TXDATA[23] !== 1'bz) && CH0_TXDATA[23]; // rv 0
  assign CH0_TXDATA_in[240] = (CH0_TXDATA[240] !== 1'bz) && CH0_TXDATA[240]; // rv 0
  assign CH0_TXDATA_in[241] = (CH0_TXDATA[241] !== 1'bz) && CH0_TXDATA[241]; // rv 0
  assign CH0_TXDATA_in[242] = (CH0_TXDATA[242] !== 1'bz) && CH0_TXDATA[242]; // rv 0
  assign CH0_TXDATA_in[243] = (CH0_TXDATA[243] !== 1'bz) && CH0_TXDATA[243]; // rv 0
  assign CH0_TXDATA_in[244] = (CH0_TXDATA[244] !== 1'bz) && CH0_TXDATA[244]; // rv 0
  assign CH0_TXDATA_in[245] = (CH0_TXDATA[245] !== 1'bz) && CH0_TXDATA[245]; // rv 0
  assign CH0_TXDATA_in[246] = (CH0_TXDATA[246] !== 1'bz) && CH0_TXDATA[246]; // rv 0
  assign CH0_TXDATA_in[247] = (CH0_TXDATA[247] !== 1'bz) && CH0_TXDATA[247]; // rv 0
  assign CH0_TXDATA_in[248] = (CH0_TXDATA[248] !== 1'bz) && CH0_TXDATA[248]; // rv 0
  assign CH0_TXDATA_in[249] = (CH0_TXDATA[249] !== 1'bz) && CH0_TXDATA[249]; // rv 0
  assign CH0_TXDATA_in[24] = (CH0_TXDATA[24] !== 1'bz) && CH0_TXDATA[24]; // rv 0
  assign CH0_TXDATA_in[250] = (CH0_TXDATA[250] !== 1'bz) && CH0_TXDATA[250]; // rv 0
  assign CH0_TXDATA_in[251] = (CH0_TXDATA[251] !== 1'bz) && CH0_TXDATA[251]; // rv 0
  assign CH0_TXDATA_in[252] = (CH0_TXDATA[252] !== 1'bz) && CH0_TXDATA[252]; // rv 0
  assign CH0_TXDATA_in[253] = (CH0_TXDATA[253] !== 1'bz) && CH0_TXDATA[253]; // rv 0
  assign CH0_TXDATA_in[254] = (CH0_TXDATA[254] !== 1'bz) && CH0_TXDATA[254]; // rv 0
  assign CH0_TXDATA_in[255] = (CH0_TXDATA[255] !== 1'bz) && CH0_TXDATA[255]; // rv 0
  assign CH0_TXDATA_in[25] = (CH0_TXDATA[25] !== 1'bz) && CH0_TXDATA[25]; // rv 0
  assign CH0_TXDATA_in[26] = (CH0_TXDATA[26] !== 1'bz) && CH0_TXDATA[26]; // rv 0
  assign CH0_TXDATA_in[27] = (CH0_TXDATA[27] !== 1'bz) && CH0_TXDATA[27]; // rv 0
  assign CH0_TXDATA_in[28] = (CH0_TXDATA[28] !== 1'bz) && CH0_TXDATA[28]; // rv 0
  assign CH0_TXDATA_in[29] = (CH0_TXDATA[29] !== 1'bz) && CH0_TXDATA[29]; // rv 0
  assign CH0_TXDATA_in[2] = (CH0_TXDATA[2] !== 1'bz) && CH0_TXDATA[2]; // rv 0
  assign CH0_TXDATA_in[30] = (CH0_TXDATA[30] !== 1'bz) && CH0_TXDATA[30]; // rv 0
  assign CH0_TXDATA_in[31] = (CH0_TXDATA[31] !== 1'bz) && CH0_TXDATA[31]; // rv 0
  assign CH0_TXDATA_in[32] = (CH0_TXDATA[32] !== 1'bz) && CH0_TXDATA[32]; // rv 0
  assign CH0_TXDATA_in[33] = (CH0_TXDATA[33] !== 1'bz) && CH0_TXDATA[33]; // rv 0
  assign CH0_TXDATA_in[34] = (CH0_TXDATA[34] !== 1'bz) && CH0_TXDATA[34]; // rv 0
  assign CH0_TXDATA_in[35] = (CH0_TXDATA[35] !== 1'bz) && CH0_TXDATA[35]; // rv 0
  assign CH0_TXDATA_in[36] = (CH0_TXDATA[36] !== 1'bz) && CH0_TXDATA[36]; // rv 0
  assign CH0_TXDATA_in[37] = (CH0_TXDATA[37] !== 1'bz) && CH0_TXDATA[37]; // rv 0
  assign CH0_TXDATA_in[38] = (CH0_TXDATA[38] !== 1'bz) && CH0_TXDATA[38]; // rv 0
  assign CH0_TXDATA_in[39] = (CH0_TXDATA[39] !== 1'bz) && CH0_TXDATA[39]; // rv 0
  assign CH0_TXDATA_in[3] = (CH0_TXDATA[3] !== 1'bz) && CH0_TXDATA[3]; // rv 0
  assign CH0_TXDATA_in[40] = (CH0_TXDATA[40] !== 1'bz) && CH0_TXDATA[40]; // rv 0
  assign CH0_TXDATA_in[41] = (CH0_TXDATA[41] !== 1'bz) && CH0_TXDATA[41]; // rv 0
  assign CH0_TXDATA_in[42] = (CH0_TXDATA[42] !== 1'bz) && CH0_TXDATA[42]; // rv 0
  assign CH0_TXDATA_in[43] = (CH0_TXDATA[43] !== 1'bz) && CH0_TXDATA[43]; // rv 0
  assign CH0_TXDATA_in[44] = (CH0_TXDATA[44] !== 1'bz) && CH0_TXDATA[44]; // rv 0
  assign CH0_TXDATA_in[45] = (CH0_TXDATA[45] !== 1'bz) && CH0_TXDATA[45]; // rv 0
  assign CH0_TXDATA_in[46] = (CH0_TXDATA[46] !== 1'bz) && CH0_TXDATA[46]; // rv 0
  assign CH0_TXDATA_in[47] = (CH0_TXDATA[47] !== 1'bz) && CH0_TXDATA[47]; // rv 0
  assign CH0_TXDATA_in[48] = (CH0_TXDATA[48] !== 1'bz) && CH0_TXDATA[48]; // rv 0
  assign CH0_TXDATA_in[49] = (CH0_TXDATA[49] !== 1'bz) && CH0_TXDATA[49]; // rv 0
  assign CH0_TXDATA_in[4] = (CH0_TXDATA[4] !== 1'bz) && CH0_TXDATA[4]; // rv 0
  assign CH0_TXDATA_in[50] = (CH0_TXDATA[50] !== 1'bz) && CH0_TXDATA[50]; // rv 0
  assign CH0_TXDATA_in[51] = (CH0_TXDATA[51] !== 1'bz) && CH0_TXDATA[51]; // rv 0
  assign CH0_TXDATA_in[52] = (CH0_TXDATA[52] !== 1'bz) && CH0_TXDATA[52]; // rv 0
  assign CH0_TXDATA_in[53] = (CH0_TXDATA[53] !== 1'bz) && CH0_TXDATA[53]; // rv 0
  assign CH0_TXDATA_in[54] = (CH0_TXDATA[54] !== 1'bz) && CH0_TXDATA[54]; // rv 0
  assign CH0_TXDATA_in[55] = (CH0_TXDATA[55] !== 1'bz) && CH0_TXDATA[55]; // rv 0
  assign CH0_TXDATA_in[56] = (CH0_TXDATA[56] !== 1'bz) && CH0_TXDATA[56]; // rv 0
  assign CH0_TXDATA_in[57] = (CH0_TXDATA[57] !== 1'bz) && CH0_TXDATA[57]; // rv 0
  assign CH0_TXDATA_in[58] = (CH0_TXDATA[58] !== 1'bz) && CH0_TXDATA[58]; // rv 0
  assign CH0_TXDATA_in[59] = (CH0_TXDATA[59] !== 1'bz) && CH0_TXDATA[59]; // rv 0
  assign CH0_TXDATA_in[5] = (CH0_TXDATA[5] !== 1'bz) && CH0_TXDATA[5]; // rv 0
  assign CH0_TXDATA_in[60] = (CH0_TXDATA[60] !== 1'bz) && CH0_TXDATA[60]; // rv 0
  assign CH0_TXDATA_in[61] = (CH0_TXDATA[61] !== 1'bz) && CH0_TXDATA[61]; // rv 0
  assign CH0_TXDATA_in[62] = (CH0_TXDATA[62] !== 1'bz) && CH0_TXDATA[62]; // rv 0
  assign CH0_TXDATA_in[63] = (CH0_TXDATA[63] !== 1'bz) && CH0_TXDATA[63]; // rv 0
  assign CH0_TXDATA_in[64] = (CH0_TXDATA[64] !== 1'bz) && CH0_TXDATA[64]; // rv 0
  assign CH0_TXDATA_in[65] = (CH0_TXDATA[65] !== 1'bz) && CH0_TXDATA[65]; // rv 0
  assign CH0_TXDATA_in[66] = (CH0_TXDATA[66] !== 1'bz) && CH0_TXDATA[66]; // rv 0
  assign CH0_TXDATA_in[67] = (CH0_TXDATA[67] !== 1'bz) && CH0_TXDATA[67]; // rv 0
  assign CH0_TXDATA_in[68] = (CH0_TXDATA[68] !== 1'bz) && CH0_TXDATA[68]; // rv 0
  assign CH0_TXDATA_in[69] = (CH0_TXDATA[69] !== 1'bz) && CH0_TXDATA[69]; // rv 0
  assign CH0_TXDATA_in[6] = (CH0_TXDATA[6] !== 1'bz) && CH0_TXDATA[6]; // rv 0
  assign CH0_TXDATA_in[70] = (CH0_TXDATA[70] !== 1'bz) && CH0_TXDATA[70]; // rv 0
  assign CH0_TXDATA_in[71] = (CH0_TXDATA[71] !== 1'bz) && CH0_TXDATA[71]; // rv 0
  assign CH0_TXDATA_in[72] = (CH0_TXDATA[72] !== 1'bz) && CH0_TXDATA[72]; // rv 0
  assign CH0_TXDATA_in[73] = (CH0_TXDATA[73] !== 1'bz) && CH0_TXDATA[73]; // rv 0
  assign CH0_TXDATA_in[74] = (CH0_TXDATA[74] !== 1'bz) && CH0_TXDATA[74]; // rv 0
  assign CH0_TXDATA_in[75] = (CH0_TXDATA[75] !== 1'bz) && CH0_TXDATA[75]; // rv 0
  assign CH0_TXDATA_in[76] = (CH0_TXDATA[76] !== 1'bz) && CH0_TXDATA[76]; // rv 0
  assign CH0_TXDATA_in[77] = (CH0_TXDATA[77] !== 1'bz) && CH0_TXDATA[77]; // rv 0
  assign CH0_TXDATA_in[78] = (CH0_TXDATA[78] !== 1'bz) && CH0_TXDATA[78]; // rv 0
  assign CH0_TXDATA_in[79] = (CH0_TXDATA[79] !== 1'bz) && CH0_TXDATA[79]; // rv 0
  assign CH0_TXDATA_in[7] = (CH0_TXDATA[7] !== 1'bz) && CH0_TXDATA[7]; // rv 0
  assign CH0_TXDATA_in[80] = (CH0_TXDATA[80] !== 1'bz) && CH0_TXDATA[80]; // rv 0
  assign CH0_TXDATA_in[81] = (CH0_TXDATA[81] !== 1'bz) && CH0_TXDATA[81]; // rv 0
  assign CH0_TXDATA_in[82] = (CH0_TXDATA[82] !== 1'bz) && CH0_TXDATA[82]; // rv 0
  assign CH0_TXDATA_in[83] = (CH0_TXDATA[83] !== 1'bz) && CH0_TXDATA[83]; // rv 0
  assign CH0_TXDATA_in[84] = (CH0_TXDATA[84] !== 1'bz) && CH0_TXDATA[84]; // rv 0
  assign CH0_TXDATA_in[85] = (CH0_TXDATA[85] !== 1'bz) && CH0_TXDATA[85]; // rv 0
  assign CH0_TXDATA_in[86] = (CH0_TXDATA[86] !== 1'bz) && CH0_TXDATA[86]; // rv 0
  assign CH0_TXDATA_in[87] = (CH0_TXDATA[87] !== 1'bz) && CH0_TXDATA[87]; // rv 0
  assign CH0_TXDATA_in[88] = (CH0_TXDATA[88] !== 1'bz) && CH0_TXDATA[88]; // rv 0
  assign CH0_TXDATA_in[89] = (CH0_TXDATA[89] !== 1'bz) && CH0_TXDATA[89]; // rv 0
  assign CH0_TXDATA_in[8] = (CH0_TXDATA[8] !== 1'bz) && CH0_TXDATA[8]; // rv 0
  assign CH0_TXDATA_in[90] = (CH0_TXDATA[90] !== 1'bz) && CH0_TXDATA[90]; // rv 0
  assign CH0_TXDATA_in[91] = (CH0_TXDATA[91] !== 1'bz) && CH0_TXDATA[91]; // rv 0
  assign CH0_TXDATA_in[92] = (CH0_TXDATA[92] !== 1'bz) && CH0_TXDATA[92]; // rv 0
  assign CH0_TXDATA_in[93] = (CH0_TXDATA[93] !== 1'bz) && CH0_TXDATA[93]; // rv 0
  assign CH0_TXDATA_in[94] = (CH0_TXDATA[94] !== 1'bz) && CH0_TXDATA[94]; // rv 0
  assign CH0_TXDATA_in[95] = (CH0_TXDATA[95] !== 1'bz) && CH0_TXDATA[95]; // rv 0
  assign CH0_TXDATA_in[96] = (CH0_TXDATA[96] !== 1'bz) && CH0_TXDATA[96]; // rv 0
  assign CH0_TXDATA_in[97] = (CH0_TXDATA[97] !== 1'bz) && CH0_TXDATA[97]; // rv 0
  assign CH0_TXDATA_in[98] = (CH0_TXDATA[98] !== 1'bz) && CH0_TXDATA[98]; // rv 0
  assign CH0_TXDATA_in[99] = (CH0_TXDATA[99] !== 1'bz) && CH0_TXDATA[99]; // rv 0
  assign CH0_TXDATA_in[9] = (CH0_TXDATA[9] !== 1'bz) && CH0_TXDATA[9]; // rv 0
  assign CH0_TXINHIBIT_in = (CH0_TXINHIBIT !== 1'bz) && CH0_TXINHIBIT; // rv 0
  assign CH0_TXPOLARITY_in = (CH0_TXPOLARITY !== 1'bz) && CH0_TXPOLARITY; // rv 0
  assign CH0_TXPRBSINERR_in = (CH0_TXPRBSINERR !== 1'bz) && CH0_TXPRBSINERR; // rv 0
  assign CH0_TXPRBSPTN_in[0] = (CH0_TXPRBSPTN[0] !== 1'bz) && CH0_TXPRBSPTN[0]; // rv 0
  assign CH0_TXPRBSPTN_in[1] = (CH0_TXPRBSPTN[1] !== 1'bz) && CH0_TXPRBSPTN[1]; // rv 0
  assign CH0_TXPRBSPTN_in[2] = (CH0_TXPRBSPTN[2] !== 1'bz) && CH0_TXPRBSPTN[2]; // rv 0
  assign CH0_TXPRBSPTN_in[3] = (CH0_TXPRBSPTN[3] !== 1'bz) && CH0_TXPRBSPTN[3]; // rv 0
  assign CH0_TXQPRBSEN_in = (CH0_TXQPRBSEN !== 1'bz) && CH0_TXQPRBSEN; // rv 0
  assign CH0_TXUSRCLK2_in = (CH0_TXUSRCLK2 !== 1'bz) && CH0_TXUSRCLK2; // rv 0
  assign CH0_TXUSRCLK_in = (CH0_TXUSRCLK !== 1'bz) && CH0_TXUSRCLK; // rv 0
  assign CH1_AXISEN_in = (CH1_AXISEN !== 1'bz) && CH1_AXISEN; // rv 0
  assign CH1_AXISTRDY_in = (CH1_AXISTRDY !== 1'bz) && CH1_AXISTRDY; // rv 0
  assign CH1_RXEQTRAINING_in = (CH1_RXEQTRAINING !== 1'bz) && CH1_RXEQTRAINING; // rv 0
  assign CH1_RXPOLARITY_in = (CH1_RXPOLARITY !== 1'bz) && CH1_RXPOLARITY; // rv 0
  assign CH1_RXPRBSCNTSTOP_in = (CH1_RXPRBSCNTSTOP !== 1'bz) && CH1_RXPRBSCNTSTOP; // rv 0
  assign CH1_RXPRBSPTN_in[0] = (CH1_RXPRBSPTN[0] !== 1'bz) && CH1_RXPRBSPTN[0]; // rv 0
  assign CH1_RXPRBSPTN_in[1] = (CH1_RXPRBSPTN[1] !== 1'bz) && CH1_RXPRBSPTN[1]; // rv 0
  assign CH1_RXPRBSPTN_in[2] = (CH1_RXPRBSPTN[2] !== 1'bz) && CH1_RXPRBSPTN[2]; // rv 0
  assign CH1_RXPRBSPTN_in[3] = (CH1_RXPRBSPTN[3] !== 1'bz) && CH1_RXPRBSPTN[3]; // rv 0
  assign CH1_RXQPRBSEN_in = (CH1_RXQPRBSEN !== 1'bz) && CH1_RXQPRBSEN; // rv 0
  assign CH1_RXUSRCLK2_in = (CH1_RXUSRCLK2 !== 1'bz) && CH1_RXUSRCLK2; // rv 0
  assign CH1_RXUSRCLK_in = (CH1_RXUSRCLK !== 1'bz) && CH1_RXUSRCLK; // rv 0
  assign CH1_TXDATASTART_in = (CH1_TXDATASTART !== 1'bz) && CH1_TXDATASTART; // rv 0
  assign CH1_TXDATA_in[0] = (CH1_TXDATA[0] !== 1'bz) && CH1_TXDATA[0]; // rv 0
  assign CH1_TXDATA_in[100] = (CH1_TXDATA[100] !== 1'bz) && CH1_TXDATA[100]; // rv 0
  assign CH1_TXDATA_in[101] = (CH1_TXDATA[101] !== 1'bz) && CH1_TXDATA[101]; // rv 0
  assign CH1_TXDATA_in[102] = (CH1_TXDATA[102] !== 1'bz) && CH1_TXDATA[102]; // rv 0
  assign CH1_TXDATA_in[103] = (CH1_TXDATA[103] !== 1'bz) && CH1_TXDATA[103]; // rv 0
  assign CH1_TXDATA_in[104] = (CH1_TXDATA[104] !== 1'bz) && CH1_TXDATA[104]; // rv 0
  assign CH1_TXDATA_in[105] = (CH1_TXDATA[105] !== 1'bz) && CH1_TXDATA[105]; // rv 0
  assign CH1_TXDATA_in[106] = (CH1_TXDATA[106] !== 1'bz) && CH1_TXDATA[106]; // rv 0
  assign CH1_TXDATA_in[107] = (CH1_TXDATA[107] !== 1'bz) && CH1_TXDATA[107]; // rv 0
  assign CH1_TXDATA_in[108] = (CH1_TXDATA[108] !== 1'bz) && CH1_TXDATA[108]; // rv 0
  assign CH1_TXDATA_in[109] = (CH1_TXDATA[109] !== 1'bz) && CH1_TXDATA[109]; // rv 0
  assign CH1_TXDATA_in[10] = (CH1_TXDATA[10] !== 1'bz) && CH1_TXDATA[10]; // rv 0
  assign CH1_TXDATA_in[110] = (CH1_TXDATA[110] !== 1'bz) && CH1_TXDATA[110]; // rv 0
  assign CH1_TXDATA_in[111] = (CH1_TXDATA[111] !== 1'bz) && CH1_TXDATA[111]; // rv 0
  assign CH1_TXDATA_in[112] = (CH1_TXDATA[112] !== 1'bz) && CH1_TXDATA[112]; // rv 0
  assign CH1_TXDATA_in[113] = (CH1_TXDATA[113] !== 1'bz) && CH1_TXDATA[113]; // rv 0
  assign CH1_TXDATA_in[114] = (CH1_TXDATA[114] !== 1'bz) && CH1_TXDATA[114]; // rv 0
  assign CH1_TXDATA_in[115] = (CH1_TXDATA[115] !== 1'bz) && CH1_TXDATA[115]; // rv 0
  assign CH1_TXDATA_in[116] = (CH1_TXDATA[116] !== 1'bz) && CH1_TXDATA[116]; // rv 0
  assign CH1_TXDATA_in[117] = (CH1_TXDATA[117] !== 1'bz) && CH1_TXDATA[117]; // rv 0
  assign CH1_TXDATA_in[118] = (CH1_TXDATA[118] !== 1'bz) && CH1_TXDATA[118]; // rv 0
  assign CH1_TXDATA_in[119] = (CH1_TXDATA[119] !== 1'bz) && CH1_TXDATA[119]; // rv 0
  assign CH1_TXDATA_in[11] = (CH1_TXDATA[11] !== 1'bz) && CH1_TXDATA[11]; // rv 0
  assign CH1_TXDATA_in[120] = (CH1_TXDATA[120] !== 1'bz) && CH1_TXDATA[120]; // rv 0
  assign CH1_TXDATA_in[121] = (CH1_TXDATA[121] !== 1'bz) && CH1_TXDATA[121]; // rv 0
  assign CH1_TXDATA_in[122] = (CH1_TXDATA[122] !== 1'bz) && CH1_TXDATA[122]; // rv 0
  assign CH1_TXDATA_in[123] = (CH1_TXDATA[123] !== 1'bz) && CH1_TXDATA[123]; // rv 0
  assign CH1_TXDATA_in[124] = (CH1_TXDATA[124] !== 1'bz) && CH1_TXDATA[124]; // rv 0
  assign CH1_TXDATA_in[125] = (CH1_TXDATA[125] !== 1'bz) && CH1_TXDATA[125]; // rv 0
  assign CH1_TXDATA_in[126] = (CH1_TXDATA[126] !== 1'bz) && CH1_TXDATA[126]; // rv 0
  assign CH1_TXDATA_in[127] = (CH1_TXDATA[127] !== 1'bz) && CH1_TXDATA[127]; // rv 0
  assign CH1_TXDATA_in[128] = (CH1_TXDATA[128] !== 1'bz) && CH1_TXDATA[128]; // rv 0
  assign CH1_TXDATA_in[129] = (CH1_TXDATA[129] !== 1'bz) && CH1_TXDATA[129]; // rv 0
  assign CH1_TXDATA_in[12] = (CH1_TXDATA[12] !== 1'bz) && CH1_TXDATA[12]; // rv 0
  assign CH1_TXDATA_in[130] = (CH1_TXDATA[130] !== 1'bz) && CH1_TXDATA[130]; // rv 0
  assign CH1_TXDATA_in[131] = (CH1_TXDATA[131] !== 1'bz) && CH1_TXDATA[131]; // rv 0
  assign CH1_TXDATA_in[132] = (CH1_TXDATA[132] !== 1'bz) && CH1_TXDATA[132]; // rv 0
  assign CH1_TXDATA_in[133] = (CH1_TXDATA[133] !== 1'bz) && CH1_TXDATA[133]; // rv 0
  assign CH1_TXDATA_in[134] = (CH1_TXDATA[134] !== 1'bz) && CH1_TXDATA[134]; // rv 0
  assign CH1_TXDATA_in[135] = (CH1_TXDATA[135] !== 1'bz) && CH1_TXDATA[135]; // rv 0
  assign CH1_TXDATA_in[136] = (CH1_TXDATA[136] !== 1'bz) && CH1_TXDATA[136]; // rv 0
  assign CH1_TXDATA_in[137] = (CH1_TXDATA[137] !== 1'bz) && CH1_TXDATA[137]; // rv 0
  assign CH1_TXDATA_in[138] = (CH1_TXDATA[138] !== 1'bz) && CH1_TXDATA[138]; // rv 0
  assign CH1_TXDATA_in[139] = (CH1_TXDATA[139] !== 1'bz) && CH1_TXDATA[139]; // rv 0
  assign CH1_TXDATA_in[13] = (CH1_TXDATA[13] !== 1'bz) && CH1_TXDATA[13]; // rv 0
  assign CH1_TXDATA_in[140] = (CH1_TXDATA[140] !== 1'bz) && CH1_TXDATA[140]; // rv 0
  assign CH1_TXDATA_in[141] = (CH1_TXDATA[141] !== 1'bz) && CH1_TXDATA[141]; // rv 0
  assign CH1_TXDATA_in[142] = (CH1_TXDATA[142] !== 1'bz) && CH1_TXDATA[142]; // rv 0
  assign CH1_TXDATA_in[143] = (CH1_TXDATA[143] !== 1'bz) && CH1_TXDATA[143]; // rv 0
  assign CH1_TXDATA_in[144] = (CH1_TXDATA[144] !== 1'bz) && CH1_TXDATA[144]; // rv 0
  assign CH1_TXDATA_in[145] = (CH1_TXDATA[145] !== 1'bz) && CH1_TXDATA[145]; // rv 0
  assign CH1_TXDATA_in[146] = (CH1_TXDATA[146] !== 1'bz) && CH1_TXDATA[146]; // rv 0
  assign CH1_TXDATA_in[147] = (CH1_TXDATA[147] !== 1'bz) && CH1_TXDATA[147]; // rv 0
  assign CH1_TXDATA_in[148] = (CH1_TXDATA[148] !== 1'bz) && CH1_TXDATA[148]; // rv 0
  assign CH1_TXDATA_in[149] = (CH1_TXDATA[149] !== 1'bz) && CH1_TXDATA[149]; // rv 0
  assign CH1_TXDATA_in[14] = (CH1_TXDATA[14] !== 1'bz) && CH1_TXDATA[14]; // rv 0
  assign CH1_TXDATA_in[150] = (CH1_TXDATA[150] !== 1'bz) && CH1_TXDATA[150]; // rv 0
  assign CH1_TXDATA_in[151] = (CH1_TXDATA[151] !== 1'bz) && CH1_TXDATA[151]; // rv 0
  assign CH1_TXDATA_in[152] = (CH1_TXDATA[152] !== 1'bz) && CH1_TXDATA[152]; // rv 0
  assign CH1_TXDATA_in[153] = (CH1_TXDATA[153] !== 1'bz) && CH1_TXDATA[153]; // rv 0
  assign CH1_TXDATA_in[154] = (CH1_TXDATA[154] !== 1'bz) && CH1_TXDATA[154]; // rv 0
  assign CH1_TXDATA_in[155] = (CH1_TXDATA[155] !== 1'bz) && CH1_TXDATA[155]; // rv 0
  assign CH1_TXDATA_in[156] = (CH1_TXDATA[156] !== 1'bz) && CH1_TXDATA[156]; // rv 0
  assign CH1_TXDATA_in[157] = (CH1_TXDATA[157] !== 1'bz) && CH1_TXDATA[157]; // rv 0
  assign CH1_TXDATA_in[158] = (CH1_TXDATA[158] !== 1'bz) && CH1_TXDATA[158]; // rv 0
  assign CH1_TXDATA_in[159] = (CH1_TXDATA[159] !== 1'bz) && CH1_TXDATA[159]; // rv 0
  assign CH1_TXDATA_in[15] = (CH1_TXDATA[15] !== 1'bz) && CH1_TXDATA[15]; // rv 0
  assign CH1_TXDATA_in[160] = (CH1_TXDATA[160] !== 1'bz) && CH1_TXDATA[160]; // rv 0
  assign CH1_TXDATA_in[161] = (CH1_TXDATA[161] !== 1'bz) && CH1_TXDATA[161]; // rv 0
  assign CH1_TXDATA_in[162] = (CH1_TXDATA[162] !== 1'bz) && CH1_TXDATA[162]; // rv 0
  assign CH1_TXDATA_in[163] = (CH1_TXDATA[163] !== 1'bz) && CH1_TXDATA[163]; // rv 0
  assign CH1_TXDATA_in[164] = (CH1_TXDATA[164] !== 1'bz) && CH1_TXDATA[164]; // rv 0
  assign CH1_TXDATA_in[165] = (CH1_TXDATA[165] !== 1'bz) && CH1_TXDATA[165]; // rv 0
  assign CH1_TXDATA_in[166] = (CH1_TXDATA[166] !== 1'bz) && CH1_TXDATA[166]; // rv 0
  assign CH1_TXDATA_in[167] = (CH1_TXDATA[167] !== 1'bz) && CH1_TXDATA[167]; // rv 0
  assign CH1_TXDATA_in[168] = (CH1_TXDATA[168] !== 1'bz) && CH1_TXDATA[168]; // rv 0
  assign CH1_TXDATA_in[169] = (CH1_TXDATA[169] !== 1'bz) && CH1_TXDATA[169]; // rv 0
  assign CH1_TXDATA_in[16] = (CH1_TXDATA[16] !== 1'bz) && CH1_TXDATA[16]; // rv 0
  assign CH1_TXDATA_in[170] = (CH1_TXDATA[170] !== 1'bz) && CH1_TXDATA[170]; // rv 0
  assign CH1_TXDATA_in[171] = (CH1_TXDATA[171] !== 1'bz) && CH1_TXDATA[171]; // rv 0
  assign CH1_TXDATA_in[172] = (CH1_TXDATA[172] !== 1'bz) && CH1_TXDATA[172]; // rv 0
  assign CH1_TXDATA_in[173] = (CH1_TXDATA[173] !== 1'bz) && CH1_TXDATA[173]; // rv 0
  assign CH1_TXDATA_in[174] = (CH1_TXDATA[174] !== 1'bz) && CH1_TXDATA[174]; // rv 0
  assign CH1_TXDATA_in[175] = (CH1_TXDATA[175] !== 1'bz) && CH1_TXDATA[175]; // rv 0
  assign CH1_TXDATA_in[176] = (CH1_TXDATA[176] !== 1'bz) && CH1_TXDATA[176]; // rv 0
  assign CH1_TXDATA_in[177] = (CH1_TXDATA[177] !== 1'bz) && CH1_TXDATA[177]; // rv 0
  assign CH1_TXDATA_in[178] = (CH1_TXDATA[178] !== 1'bz) && CH1_TXDATA[178]; // rv 0
  assign CH1_TXDATA_in[179] = (CH1_TXDATA[179] !== 1'bz) && CH1_TXDATA[179]; // rv 0
  assign CH1_TXDATA_in[17] = (CH1_TXDATA[17] !== 1'bz) && CH1_TXDATA[17]; // rv 0
  assign CH1_TXDATA_in[180] = (CH1_TXDATA[180] !== 1'bz) && CH1_TXDATA[180]; // rv 0
  assign CH1_TXDATA_in[181] = (CH1_TXDATA[181] !== 1'bz) && CH1_TXDATA[181]; // rv 0
  assign CH1_TXDATA_in[182] = (CH1_TXDATA[182] !== 1'bz) && CH1_TXDATA[182]; // rv 0
  assign CH1_TXDATA_in[183] = (CH1_TXDATA[183] !== 1'bz) && CH1_TXDATA[183]; // rv 0
  assign CH1_TXDATA_in[184] = (CH1_TXDATA[184] !== 1'bz) && CH1_TXDATA[184]; // rv 0
  assign CH1_TXDATA_in[185] = (CH1_TXDATA[185] !== 1'bz) && CH1_TXDATA[185]; // rv 0
  assign CH1_TXDATA_in[186] = (CH1_TXDATA[186] !== 1'bz) && CH1_TXDATA[186]; // rv 0
  assign CH1_TXDATA_in[187] = (CH1_TXDATA[187] !== 1'bz) && CH1_TXDATA[187]; // rv 0
  assign CH1_TXDATA_in[188] = (CH1_TXDATA[188] !== 1'bz) && CH1_TXDATA[188]; // rv 0
  assign CH1_TXDATA_in[189] = (CH1_TXDATA[189] !== 1'bz) && CH1_TXDATA[189]; // rv 0
  assign CH1_TXDATA_in[18] = (CH1_TXDATA[18] !== 1'bz) && CH1_TXDATA[18]; // rv 0
  assign CH1_TXDATA_in[190] = (CH1_TXDATA[190] !== 1'bz) && CH1_TXDATA[190]; // rv 0
  assign CH1_TXDATA_in[191] = (CH1_TXDATA[191] !== 1'bz) && CH1_TXDATA[191]; // rv 0
  assign CH1_TXDATA_in[192] = (CH1_TXDATA[192] !== 1'bz) && CH1_TXDATA[192]; // rv 0
  assign CH1_TXDATA_in[193] = (CH1_TXDATA[193] !== 1'bz) && CH1_TXDATA[193]; // rv 0
  assign CH1_TXDATA_in[194] = (CH1_TXDATA[194] !== 1'bz) && CH1_TXDATA[194]; // rv 0
  assign CH1_TXDATA_in[195] = (CH1_TXDATA[195] !== 1'bz) && CH1_TXDATA[195]; // rv 0
  assign CH1_TXDATA_in[196] = (CH1_TXDATA[196] !== 1'bz) && CH1_TXDATA[196]; // rv 0
  assign CH1_TXDATA_in[197] = (CH1_TXDATA[197] !== 1'bz) && CH1_TXDATA[197]; // rv 0
  assign CH1_TXDATA_in[198] = (CH1_TXDATA[198] !== 1'bz) && CH1_TXDATA[198]; // rv 0
  assign CH1_TXDATA_in[199] = (CH1_TXDATA[199] !== 1'bz) && CH1_TXDATA[199]; // rv 0
  assign CH1_TXDATA_in[19] = (CH1_TXDATA[19] !== 1'bz) && CH1_TXDATA[19]; // rv 0
  assign CH1_TXDATA_in[1] = (CH1_TXDATA[1] !== 1'bz) && CH1_TXDATA[1]; // rv 0
  assign CH1_TXDATA_in[200] = (CH1_TXDATA[200] !== 1'bz) && CH1_TXDATA[200]; // rv 0
  assign CH1_TXDATA_in[201] = (CH1_TXDATA[201] !== 1'bz) && CH1_TXDATA[201]; // rv 0
  assign CH1_TXDATA_in[202] = (CH1_TXDATA[202] !== 1'bz) && CH1_TXDATA[202]; // rv 0
  assign CH1_TXDATA_in[203] = (CH1_TXDATA[203] !== 1'bz) && CH1_TXDATA[203]; // rv 0
  assign CH1_TXDATA_in[204] = (CH1_TXDATA[204] !== 1'bz) && CH1_TXDATA[204]; // rv 0
  assign CH1_TXDATA_in[205] = (CH1_TXDATA[205] !== 1'bz) && CH1_TXDATA[205]; // rv 0
  assign CH1_TXDATA_in[206] = (CH1_TXDATA[206] !== 1'bz) && CH1_TXDATA[206]; // rv 0
  assign CH1_TXDATA_in[207] = (CH1_TXDATA[207] !== 1'bz) && CH1_TXDATA[207]; // rv 0
  assign CH1_TXDATA_in[208] = (CH1_TXDATA[208] !== 1'bz) && CH1_TXDATA[208]; // rv 0
  assign CH1_TXDATA_in[209] = (CH1_TXDATA[209] !== 1'bz) && CH1_TXDATA[209]; // rv 0
  assign CH1_TXDATA_in[20] = (CH1_TXDATA[20] !== 1'bz) && CH1_TXDATA[20]; // rv 0
  assign CH1_TXDATA_in[210] = (CH1_TXDATA[210] !== 1'bz) && CH1_TXDATA[210]; // rv 0
  assign CH1_TXDATA_in[211] = (CH1_TXDATA[211] !== 1'bz) && CH1_TXDATA[211]; // rv 0
  assign CH1_TXDATA_in[212] = (CH1_TXDATA[212] !== 1'bz) && CH1_TXDATA[212]; // rv 0
  assign CH1_TXDATA_in[213] = (CH1_TXDATA[213] !== 1'bz) && CH1_TXDATA[213]; // rv 0
  assign CH1_TXDATA_in[214] = (CH1_TXDATA[214] !== 1'bz) && CH1_TXDATA[214]; // rv 0
  assign CH1_TXDATA_in[215] = (CH1_TXDATA[215] !== 1'bz) && CH1_TXDATA[215]; // rv 0
  assign CH1_TXDATA_in[216] = (CH1_TXDATA[216] !== 1'bz) && CH1_TXDATA[216]; // rv 0
  assign CH1_TXDATA_in[217] = (CH1_TXDATA[217] !== 1'bz) && CH1_TXDATA[217]; // rv 0
  assign CH1_TXDATA_in[218] = (CH1_TXDATA[218] !== 1'bz) && CH1_TXDATA[218]; // rv 0
  assign CH1_TXDATA_in[219] = (CH1_TXDATA[219] !== 1'bz) && CH1_TXDATA[219]; // rv 0
  assign CH1_TXDATA_in[21] = (CH1_TXDATA[21] !== 1'bz) && CH1_TXDATA[21]; // rv 0
  assign CH1_TXDATA_in[220] = (CH1_TXDATA[220] !== 1'bz) && CH1_TXDATA[220]; // rv 0
  assign CH1_TXDATA_in[221] = (CH1_TXDATA[221] !== 1'bz) && CH1_TXDATA[221]; // rv 0
  assign CH1_TXDATA_in[222] = (CH1_TXDATA[222] !== 1'bz) && CH1_TXDATA[222]; // rv 0
  assign CH1_TXDATA_in[223] = (CH1_TXDATA[223] !== 1'bz) && CH1_TXDATA[223]; // rv 0
  assign CH1_TXDATA_in[224] = (CH1_TXDATA[224] !== 1'bz) && CH1_TXDATA[224]; // rv 0
  assign CH1_TXDATA_in[225] = (CH1_TXDATA[225] !== 1'bz) && CH1_TXDATA[225]; // rv 0
  assign CH1_TXDATA_in[226] = (CH1_TXDATA[226] !== 1'bz) && CH1_TXDATA[226]; // rv 0
  assign CH1_TXDATA_in[227] = (CH1_TXDATA[227] !== 1'bz) && CH1_TXDATA[227]; // rv 0
  assign CH1_TXDATA_in[228] = (CH1_TXDATA[228] !== 1'bz) && CH1_TXDATA[228]; // rv 0
  assign CH1_TXDATA_in[229] = (CH1_TXDATA[229] !== 1'bz) && CH1_TXDATA[229]; // rv 0
  assign CH1_TXDATA_in[22] = (CH1_TXDATA[22] !== 1'bz) && CH1_TXDATA[22]; // rv 0
  assign CH1_TXDATA_in[230] = (CH1_TXDATA[230] !== 1'bz) && CH1_TXDATA[230]; // rv 0
  assign CH1_TXDATA_in[231] = (CH1_TXDATA[231] !== 1'bz) && CH1_TXDATA[231]; // rv 0
  assign CH1_TXDATA_in[232] = (CH1_TXDATA[232] !== 1'bz) && CH1_TXDATA[232]; // rv 0
  assign CH1_TXDATA_in[233] = (CH1_TXDATA[233] !== 1'bz) && CH1_TXDATA[233]; // rv 0
  assign CH1_TXDATA_in[234] = (CH1_TXDATA[234] !== 1'bz) && CH1_TXDATA[234]; // rv 0
  assign CH1_TXDATA_in[235] = (CH1_TXDATA[235] !== 1'bz) && CH1_TXDATA[235]; // rv 0
  assign CH1_TXDATA_in[236] = (CH1_TXDATA[236] !== 1'bz) && CH1_TXDATA[236]; // rv 0
  assign CH1_TXDATA_in[237] = (CH1_TXDATA[237] !== 1'bz) && CH1_TXDATA[237]; // rv 0
  assign CH1_TXDATA_in[238] = (CH1_TXDATA[238] !== 1'bz) && CH1_TXDATA[238]; // rv 0
  assign CH1_TXDATA_in[239] = (CH1_TXDATA[239] !== 1'bz) && CH1_TXDATA[239]; // rv 0
  assign CH1_TXDATA_in[23] = (CH1_TXDATA[23] !== 1'bz) && CH1_TXDATA[23]; // rv 0
  assign CH1_TXDATA_in[240] = (CH1_TXDATA[240] !== 1'bz) && CH1_TXDATA[240]; // rv 0
  assign CH1_TXDATA_in[241] = (CH1_TXDATA[241] !== 1'bz) && CH1_TXDATA[241]; // rv 0
  assign CH1_TXDATA_in[242] = (CH1_TXDATA[242] !== 1'bz) && CH1_TXDATA[242]; // rv 0
  assign CH1_TXDATA_in[243] = (CH1_TXDATA[243] !== 1'bz) && CH1_TXDATA[243]; // rv 0
  assign CH1_TXDATA_in[244] = (CH1_TXDATA[244] !== 1'bz) && CH1_TXDATA[244]; // rv 0
  assign CH1_TXDATA_in[245] = (CH1_TXDATA[245] !== 1'bz) && CH1_TXDATA[245]; // rv 0
  assign CH1_TXDATA_in[246] = (CH1_TXDATA[246] !== 1'bz) && CH1_TXDATA[246]; // rv 0
  assign CH1_TXDATA_in[247] = (CH1_TXDATA[247] !== 1'bz) && CH1_TXDATA[247]; // rv 0
  assign CH1_TXDATA_in[248] = (CH1_TXDATA[248] !== 1'bz) && CH1_TXDATA[248]; // rv 0
  assign CH1_TXDATA_in[249] = (CH1_TXDATA[249] !== 1'bz) && CH1_TXDATA[249]; // rv 0
  assign CH1_TXDATA_in[24] = (CH1_TXDATA[24] !== 1'bz) && CH1_TXDATA[24]; // rv 0
  assign CH1_TXDATA_in[250] = (CH1_TXDATA[250] !== 1'bz) && CH1_TXDATA[250]; // rv 0
  assign CH1_TXDATA_in[251] = (CH1_TXDATA[251] !== 1'bz) && CH1_TXDATA[251]; // rv 0
  assign CH1_TXDATA_in[252] = (CH1_TXDATA[252] !== 1'bz) && CH1_TXDATA[252]; // rv 0
  assign CH1_TXDATA_in[253] = (CH1_TXDATA[253] !== 1'bz) && CH1_TXDATA[253]; // rv 0
  assign CH1_TXDATA_in[254] = (CH1_TXDATA[254] !== 1'bz) && CH1_TXDATA[254]; // rv 0
  assign CH1_TXDATA_in[255] = (CH1_TXDATA[255] !== 1'bz) && CH1_TXDATA[255]; // rv 0
  assign CH1_TXDATA_in[25] = (CH1_TXDATA[25] !== 1'bz) && CH1_TXDATA[25]; // rv 0
  assign CH1_TXDATA_in[26] = (CH1_TXDATA[26] !== 1'bz) && CH1_TXDATA[26]; // rv 0
  assign CH1_TXDATA_in[27] = (CH1_TXDATA[27] !== 1'bz) && CH1_TXDATA[27]; // rv 0
  assign CH1_TXDATA_in[28] = (CH1_TXDATA[28] !== 1'bz) && CH1_TXDATA[28]; // rv 0
  assign CH1_TXDATA_in[29] = (CH1_TXDATA[29] !== 1'bz) && CH1_TXDATA[29]; // rv 0
  assign CH1_TXDATA_in[2] = (CH1_TXDATA[2] !== 1'bz) && CH1_TXDATA[2]; // rv 0
  assign CH1_TXDATA_in[30] = (CH1_TXDATA[30] !== 1'bz) && CH1_TXDATA[30]; // rv 0
  assign CH1_TXDATA_in[31] = (CH1_TXDATA[31] !== 1'bz) && CH1_TXDATA[31]; // rv 0
  assign CH1_TXDATA_in[32] = (CH1_TXDATA[32] !== 1'bz) && CH1_TXDATA[32]; // rv 0
  assign CH1_TXDATA_in[33] = (CH1_TXDATA[33] !== 1'bz) && CH1_TXDATA[33]; // rv 0
  assign CH1_TXDATA_in[34] = (CH1_TXDATA[34] !== 1'bz) && CH1_TXDATA[34]; // rv 0
  assign CH1_TXDATA_in[35] = (CH1_TXDATA[35] !== 1'bz) && CH1_TXDATA[35]; // rv 0
  assign CH1_TXDATA_in[36] = (CH1_TXDATA[36] !== 1'bz) && CH1_TXDATA[36]; // rv 0
  assign CH1_TXDATA_in[37] = (CH1_TXDATA[37] !== 1'bz) && CH1_TXDATA[37]; // rv 0
  assign CH1_TXDATA_in[38] = (CH1_TXDATA[38] !== 1'bz) && CH1_TXDATA[38]; // rv 0
  assign CH1_TXDATA_in[39] = (CH1_TXDATA[39] !== 1'bz) && CH1_TXDATA[39]; // rv 0
  assign CH1_TXDATA_in[3] = (CH1_TXDATA[3] !== 1'bz) && CH1_TXDATA[3]; // rv 0
  assign CH1_TXDATA_in[40] = (CH1_TXDATA[40] !== 1'bz) && CH1_TXDATA[40]; // rv 0
  assign CH1_TXDATA_in[41] = (CH1_TXDATA[41] !== 1'bz) && CH1_TXDATA[41]; // rv 0
  assign CH1_TXDATA_in[42] = (CH1_TXDATA[42] !== 1'bz) && CH1_TXDATA[42]; // rv 0
  assign CH1_TXDATA_in[43] = (CH1_TXDATA[43] !== 1'bz) && CH1_TXDATA[43]; // rv 0
  assign CH1_TXDATA_in[44] = (CH1_TXDATA[44] !== 1'bz) && CH1_TXDATA[44]; // rv 0
  assign CH1_TXDATA_in[45] = (CH1_TXDATA[45] !== 1'bz) && CH1_TXDATA[45]; // rv 0
  assign CH1_TXDATA_in[46] = (CH1_TXDATA[46] !== 1'bz) && CH1_TXDATA[46]; // rv 0
  assign CH1_TXDATA_in[47] = (CH1_TXDATA[47] !== 1'bz) && CH1_TXDATA[47]; // rv 0
  assign CH1_TXDATA_in[48] = (CH1_TXDATA[48] !== 1'bz) && CH1_TXDATA[48]; // rv 0
  assign CH1_TXDATA_in[49] = (CH1_TXDATA[49] !== 1'bz) && CH1_TXDATA[49]; // rv 0
  assign CH1_TXDATA_in[4] = (CH1_TXDATA[4] !== 1'bz) && CH1_TXDATA[4]; // rv 0
  assign CH1_TXDATA_in[50] = (CH1_TXDATA[50] !== 1'bz) && CH1_TXDATA[50]; // rv 0
  assign CH1_TXDATA_in[51] = (CH1_TXDATA[51] !== 1'bz) && CH1_TXDATA[51]; // rv 0
  assign CH1_TXDATA_in[52] = (CH1_TXDATA[52] !== 1'bz) && CH1_TXDATA[52]; // rv 0
  assign CH1_TXDATA_in[53] = (CH1_TXDATA[53] !== 1'bz) && CH1_TXDATA[53]; // rv 0
  assign CH1_TXDATA_in[54] = (CH1_TXDATA[54] !== 1'bz) && CH1_TXDATA[54]; // rv 0
  assign CH1_TXDATA_in[55] = (CH1_TXDATA[55] !== 1'bz) && CH1_TXDATA[55]; // rv 0
  assign CH1_TXDATA_in[56] = (CH1_TXDATA[56] !== 1'bz) && CH1_TXDATA[56]; // rv 0
  assign CH1_TXDATA_in[57] = (CH1_TXDATA[57] !== 1'bz) && CH1_TXDATA[57]; // rv 0
  assign CH1_TXDATA_in[58] = (CH1_TXDATA[58] !== 1'bz) && CH1_TXDATA[58]; // rv 0
  assign CH1_TXDATA_in[59] = (CH1_TXDATA[59] !== 1'bz) && CH1_TXDATA[59]; // rv 0
  assign CH1_TXDATA_in[5] = (CH1_TXDATA[5] !== 1'bz) && CH1_TXDATA[5]; // rv 0
  assign CH1_TXDATA_in[60] = (CH1_TXDATA[60] !== 1'bz) && CH1_TXDATA[60]; // rv 0
  assign CH1_TXDATA_in[61] = (CH1_TXDATA[61] !== 1'bz) && CH1_TXDATA[61]; // rv 0
  assign CH1_TXDATA_in[62] = (CH1_TXDATA[62] !== 1'bz) && CH1_TXDATA[62]; // rv 0
  assign CH1_TXDATA_in[63] = (CH1_TXDATA[63] !== 1'bz) && CH1_TXDATA[63]; // rv 0
  assign CH1_TXDATA_in[64] = (CH1_TXDATA[64] !== 1'bz) && CH1_TXDATA[64]; // rv 0
  assign CH1_TXDATA_in[65] = (CH1_TXDATA[65] !== 1'bz) && CH1_TXDATA[65]; // rv 0
  assign CH1_TXDATA_in[66] = (CH1_TXDATA[66] !== 1'bz) && CH1_TXDATA[66]; // rv 0
  assign CH1_TXDATA_in[67] = (CH1_TXDATA[67] !== 1'bz) && CH1_TXDATA[67]; // rv 0
  assign CH1_TXDATA_in[68] = (CH1_TXDATA[68] !== 1'bz) && CH1_TXDATA[68]; // rv 0
  assign CH1_TXDATA_in[69] = (CH1_TXDATA[69] !== 1'bz) && CH1_TXDATA[69]; // rv 0
  assign CH1_TXDATA_in[6] = (CH1_TXDATA[6] !== 1'bz) && CH1_TXDATA[6]; // rv 0
  assign CH1_TXDATA_in[70] = (CH1_TXDATA[70] !== 1'bz) && CH1_TXDATA[70]; // rv 0
  assign CH1_TXDATA_in[71] = (CH1_TXDATA[71] !== 1'bz) && CH1_TXDATA[71]; // rv 0
  assign CH1_TXDATA_in[72] = (CH1_TXDATA[72] !== 1'bz) && CH1_TXDATA[72]; // rv 0
  assign CH1_TXDATA_in[73] = (CH1_TXDATA[73] !== 1'bz) && CH1_TXDATA[73]; // rv 0
  assign CH1_TXDATA_in[74] = (CH1_TXDATA[74] !== 1'bz) && CH1_TXDATA[74]; // rv 0
  assign CH1_TXDATA_in[75] = (CH1_TXDATA[75] !== 1'bz) && CH1_TXDATA[75]; // rv 0
  assign CH1_TXDATA_in[76] = (CH1_TXDATA[76] !== 1'bz) && CH1_TXDATA[76]; // rv 0
  assign CH1_TXDATA_in[77] = (CH1_TXDATA[77] !== 1'bz) && CH1_TXDATA[77]; // rv 0
  assign CH1_TXDATA_in[78] = (CH1_TXDATA[78] !== 1'bz) && CH1_TXDATA[78]; // rv 0
  assign CH1_TXDATA_in[79] = (CH1_TXDATA[79] !== 1'bz) && CH1_TXDATA[79]; // rv 0
  assign CH1_TXDATA_in[7] = (CH1_TXDATA[7] !== 1'bz) && CH1_TXDATA[7]; // rv 0
  assign CH1_TXDATA_in[80] = (CH1_TXDATA[80] !== 1'bz) && CH1_TXDATA[80]; // rv 0
  assign CH1_TXDATA_in[81] = (CH1_TXDATA[81] !== 1'bz) && CH1_TXDATA[81]; // rv 0
  assign CH1_TXDATA_in[82] = (CH1_TXDATA[82] !== 1'bz) && CH1_TXDATA[82]; // rv 0
  assign CH1_TXDATA_in[83] = (CH1_TXDATA[83] !== 1'bz) && CH1_TXDATA[83]; // rv 0
  assign CH1_TXDATA_in[84] = (CH1_TXDATA[84] !== 1'bz) && CH1_TXDATA[84]; // rv 0
  assign CH1_TXDATA_in[85] = (CH1_TXDATA[85] !== 1'bz) && CH1_TXDATA[85]; // rv 0
  assign CH1_TXDATA_in[86] = (CH1_TXDATA[86] !== 1'bz) && CH1_TXDATA[86]; // rv 0
  assign CH1_TXDATA_in[87] = (CH1_TXDATA[87] !== 1'bz) && CH1_TXDATA[87]; // rv 0
  assign CH1_TXDATA_in[88] = (CH1_TXDATA[88] !== 1'bz) && CH1_TXDATA[88]; // rv 0
  assign CH1_TXDATA_in[89] = (CH1_TXDATA[89] !== 1'bz) && CH1_TXDATA[89]; // rv 0
  assign CH1_TXDATA_in[8] = (CH1_TXDATA[8] !== 1'bz) && CH1_TXDATA[8]; // rv 0
  assign CH1_TXDATA_in[90] = (CH1_TXDATA[90] !== 1'bz) && CH1_TXDATA[90]; // rv 0
  assign CH1_TXDATA_in[91] = (CH1_TXDATA[91] !== 1'bz) && CH1_TXDATA[91]; // rv 0
  assign CH1_TXDATA_in[92] = (CH1_TXDATA[92] !== 1'bz) && CH1_TXDATA[92]; // rv 0
  assign CH1_TXDATA_in[93] = (CH1_TXDATA[93] !== 1'bz) && CH1_TXDATA[93]; // rv 0
  assign CH1_TXDATA_in[94] = (CH1_TXDATA[94] !== 1'bz) && CH1_TXDATA[94]; // rv 0
  assign CH1_TXDATA_in[95] = (CH1_TXDATA[95] !== 1'bz) && CH1_TXDATA[95]; // rv 0
  assign CH1_TXDATA_in[96] = (CH1_TXDATA[96] !== 1'bz) && CH1_TXDATA[96]; // rv 0
  assign CH1_TXDATA_in[97] = (CH1_TXDATA[97] !== 1'bz) && CH1_TXDATA[97]; // rv 0
  assign CH1_TXDATA_in[98] = (CH1_TXDATA[98] !== 1'bz) && CH1_TXDATA[98]; // rv 0
  assign CH1_TXDATA_in[99] = (CH1_TXDATA[99] !== 1'bz) && CH1_TXDATA[99]; // rv 0
  assign CH1_TXDATA_in[9] = (CH1_TXDATA[9] !== 1'bz) && CH1_TXDATA[9]; // rv 0
  assign CH1_TXINHIBIT_in = (CH1_TXINHIBIT !== 1'bz) && CH1_TXINHIBIT; // rv 0
  assign CH1_TXPOLARITY_in = (CH1_TXPOLARITY !== 1'bz) && CH1_TXPOLARITY; // rv 0
  assign CH1_TXPRBSINERR_in = (CH1_TXPRBSINERR !== 1'bz) && CH1_TXPRBSINERR; // rv 0
  assign CH1_TXPRBSPTN_in[0] = (CH1_TXPRBSPTN[0] !== 1'bz) && CH1_TXPRBSPTN[0]; // rv 0
  assign CH1_TXPRBSPTN_in[1] = (CH1_TXPRBSPTN[1] !== 1'bz) && CH1_TXPRBSPTN[1]; // rv 0
  assign CH1_TXPRBSPTN_in[2] = (CH1_TXPRBSPTN[2] !== 1'bz) && CH1_TXPRBSPTN[2]; // rv 0
  assign CH1_TXPRBSPTN_in[3] = (CH1_TXPRBSPTN[3] !== 1'bz) && CH1_TXPRBSPTN[3]; // rv 0
  assign CH1_TXQPRBSEN_in = (CH1_TXQPRBSEN !== 1'bz) && CH1_TXQPRBSEN; // rv 0
  assign CH1_TXUSRCLK2_in = (CH1_TXUSRCLK2 !== 1'bz) && CH1_TXUSRCLK2; // rv 0
  assign CH1_TXUSRCLK_in = (CH1_TXUSRCLK !== 1'bz) && CH1_TXUSRCLK; // rv 0
  assign DRPADDR_in[0] = (DRPADDR[0] !== 1'bz) && DRPADDR[0]; // rv 0
  assign DRPADDR_in[10] = (DRPADDR[10] !== 1'bz) && DRPADDR[10]; // rv 0
  assign DRPADDR_in[1] = (DRPADDR[1] !== 1'bz) && DRPADDR[1]; // rv 0
  assign DRPADDR_in[2] = (DRPADDR[2] !== 1'bz) && DRPADDR[2]; // rv 0
  assign DRPADDR_in[3] = (DRPADDR[3] !== 1'bz) && DRPADDR[3]; // rv 0
  assign DRPADDR_in[4] = (DRPADDR[4] !== 1'bz) && DRPADDR[4]; // rv 0
  assign DRPADDR_in[5] = (DRPADDR[5] !== 1'bz) && DRPADDR[5]; // rv 0
  assign DRPADDR_in[6] = (DRPADDR[6] !== 1'bz) && DRPADDR[6]; // rv 0
  assign DRPADDR_in[7] = (DRPADDR[7] !== 1'bz) && DRPADDR[7]; // rv 0
  assign DRPADDR_in[8] = (DRPADDR[8] !== 1'bz) && DRPADDR[8]; // rv 0
  assign DRPADDR_in[9] = (DRPADDR[9] !== 1'bz) && DRPADDR[9]; // rv 0
  assign DRPCLK_in = (DRPCLK !== 1'bz) && DRPCLK; // rv 0
  assign DRPDI_in[0] = (DRPDI[0] !== 1'bz) && DRPDI[0]; // rv 0
  assign DRPDI_in[10] = (DRPDI[10] !== 1'bz) && DRPDI[10]; // rv 0
  assign DRPDI_in[11] = (DRPDI[11] !== 1'bz) && DRPDI[11]; // rv 0
  assign DRPDI_in[12] = (DRPDI[12] !== 1'bz) && DRPDI[12]; // rv 0
  assign DRPDI_in[13] = (DRPDI[13] !== 1'bz) && DRPDI[13]; // rv 0
  assign DRPDI_in[14] = (DRPDI[14] !== 1'bz) && DRPDI[14]; // rv 0
  assign DRPDI_in[15] = (DRPDI[15] !== 1'bz) && DRPDI[15]; // rv 0
  assign DRPDI_in[1] = (DRPDI[1] !== 1'bz) && DRPDI[1]; // rv 0
  assign DRPDI_in[2] = (DRPDI[2] !== 1'bz) && DRPDI[2]; // rv 0
  assign DRPDI_in[3] = (DRPDI[3] !== 1'bz) && DRPDI[3]; // rv 0
  assign DRPDI_in[4] = (DRPDI[4] !== 1'bz) && DRPDI[4]; // rv 0
  assign DRPDI_in[5] = (DRPDI[5] !== 1'bz) && DRPDI[5]; // rv 0
  assign DRPDI_in[6] = (DRPDI[6] !== 1'bz) && DRPDI[6]; // rv 0
  assign DRPDI_in[7] = (DRPDI[7] !== 1'bz) && DRPDI[7]; // rv 0
  assign DRPDI_in[8] = (DRPDI[8] !== 1'bz) && DRPDI[8]; // rv 0
  assign DRPDI_in[9] = (DRPDI[9] !== 1'bz) && DRPDI[9]; // rv 0
  assign DRPEN_in = (DRPEN !== 1'bz) && DRPEN; // rv 0
  assign DRPWE_in = (DRPWE !== 1'bz) && DRPWE; // rv 0
  assign FECCTRLRX0BITSLIPFS_in = (FECCTRLRX0BITSLIPFS !== 1'bz) && FECCTRLRX0BITSLIPFS; // rv 0
  assign FECCTRLRX1BITSLIPFS_in = (FECCTRLRX1BITSLIPFS !== 1'bz) && FECCTRLRX1BITSLIPFS; // rv 0
`endif

  assign BGBYPASSB_in = BGBYPASSB;
  assign BGMONITORENB_in = BGMONITORENB;
  assign BGPDB_in = BGPDB;
  assign BGRCALOVRDENB_in = (BGRCALOVRDENB === 1'bz) || BGRCALOVRDENB; // rv 1
  assign BGRCALOVRD_in = BGRCALOVRD;
  assign CH0_AXISRST_in = (CH0_AXISRST !== 1'bz) && CH0_AXISRST; // rv 0
  assign CH0_CFGRESET_in = (CH0_CFGRESET !== 1'bz) && CH0_CFGRESET; // rv 0
  assign CH0_DMONFIFORESET_in = (CH0_DMONFIFORESET !== 1'bz) && CH0_DMONFIFORESET; // rv 0
  assign CH0_DMONITORCLK_in = (CH0_DMONITORCLK !== 1'bz) && CH0_DMONITORCLK; // rv 0
  assign CH0_GTMRXN_in = CH0_GTMRXN;
  assign CH0_GTMRXP_in = CH0_GTMRXP;
  assign CH0_GTRXRESET_in = (CH0_GTRXRESET !== 1'bz) && CH0_GTRXRESET; // rv 0
  assign CH0_GTTXRESET_in = (CH0_GTTXRESET !== 1'bz) && CH0_GTTXRESET; // rv 0
  assign CH0_LOOPBACK_in[0] = (CH0_LOOPBACK[0] !== 1'bz) && CH0_LOOPBACK[0]; // rv 0
  assign CH0_LOOPBACK_in[1] = (CH0_LOOPBACK[1] !== 1'bz) && CH0_LOOPBACK[1]; // rv 0
  assign CH0_LOOPBACK_in[2] = (CH0_LOOPBACK[2] !== 1'bz) && CH0_LOOPBACK[2]; // rv 0
  assign CH0_PCSRSVDIN_in[0] = (CH0_PCSRSVDIN[0] !== 1'bz) && CH0_PCSRSVDIN[0]; // rv 0
  assign CH0_PCSRSVDIN_in[10] = (CH0_PCSRSVDIN[10] !== 1'bz) && CH0_PCSRSVDIN[10]; // rv 0
  assign CH0_PCSRSVDIN_in[11] = (CH0_PCSRSVDIN[11] !== 1'bz) && CH0_PCSRSVDIN[11]; // rv 0
  assign CH0_PCSRSVDIN_in[12] = (CH0_PCSRSVDIN[12] !== 1'bz) && CH0_PCSRSVDIN[12]; // rv 0
  assign CH0_PCSRSVDIN_in[13] = (CH0_PCSRSVDIN[13] !== 1'bz) && CH0_PCSRSVDIN[13]; // rv 0
  assign CH0_PCSRSVDIN_in[14] = (CH0_PCSRSVDIN[14] !== 1'bz) && CH0_PCSRSVDIN[14]; // rv 0
  assign CH0_PCSRSVDIN_in[15] = (CH0_PCSRSVDIN[15] !== 1'bz) && CH0_PCSRSVDIN[15]; // rv 0
  assign CH0_PCSRSVDIN_in[1] = (CH0_PCSRSVDIN[1] !== 1'bz) && CH0_PCSRSVDIN[1]; // rv 0
  assign CH0_PCSRSVDIN_in[2] = (CH0_PCSRSVDIN[2] !== 1'bz) && CH0_PCSRSVDIN[2]; // rv 0
  assign CH0_PCSRSVDIN_in[3] = (CH0_PCSRSVDIN[3] !== 1'bz) && CH0_PCSRSVDIN[3]; // rv 0
  assign CH0_PCSRSVDIN_in[4] = (CH0_PCSRSVDIN[4] !== 1'bz) && CH0_PCSRSVDIN[4]; // rv 0
  assign CH0_PCSRSVDIN_in[5] = (CH0_PCSRSVDIN[5] !== 1'bz) && CH0_PCSRSVDIN[5]; // rv 0
  assign CH0_PCSRSVDIN_in[6] = (CH0_PCSRSVDIN[6] !== 1'bz) && CH0_PCSRSVDIN[6]; // rv 0
  assign CH0_PCSRSVDIN_in[7] = (CH0_PCSRSVDIN[7] !== 1'bz) && CH0_PCSRSVDIN[7]; // rv 0
  assign CH0_PCSRSVDIN_in[8] = (CH0_PCSRSVDIN[8] !== 1'bz) && CH0_PCSRSVDIN[8]; // rv 0
  assign CH0_PCSRSVDIN_in[9] = (CH0_PCSRSVDIN[9] !== 1'bz) && CH0_PCSRSVDIN[9]; // rv 0
  assign CH0_PMARSVDIN_in[0] = (CH0_PMARSVDIN[0] === 1'bz) || CH0_PMARSVDIN[0]; // rv 1
  assign CH0_PMARSVDIN_in[10] = (CH0_PMARSVDIN[10] !== 1'bz) && CH0_PMARSVDIN[10]; // rv 0
  assign CH0_PMARSVDIN_in[11] = (CH0_PMARSVDIN[11] !== 1'bz) && CH0_PMARSVDIN[11]; // rv 0
  assign CH0_PMARSVDIN_in[12] = (CH0_PMARSVDIN[12] !== 1'bz) && CH0_PMARSVDIN[12]; // rv 0
  assign CH0_PMARSVDIN_in[13] = (CH0_PMARSVDIN[13] !== 1'bz) && CH0_PMARSVDIN[13]; // rv 0
  assign CH0_PMARSVDIN_in[14] = (CH0_PMARSVDIN[14] !== 1'bz) && CH0_PMARSVDIN[14]; // rv 0
  assign CH0_PMARSVDIN_in[15] = (CH0_PMARSVDIN[15] !== 1'bz) && CH0_PMARSVDIN[15]; // rv 0
  assign CH0_PMARSVDIN_in[1] = (CH0_PMARSVDIN[1] !== 1'bz) && CH0_PMARSVDIN[1]; // rv 0
  assign CH0_PMARSVDIN_in[2] = (CH0_PMARSVDIN[2] !== 1'bz) && CH0_PMARSVDIN[2]; // rv 0
  assign CH0_PMARSVDIN_in[3] = (CH0_PMARSVDIN[3] !== 1'bz) && CH0_PMARSVDIN[3]; // rv 0
  assign CH0_PMARSVDIN_in[4] = (CH0_PMARSVDIN[4] !== 1'bz) && CH0_PMARSVDIN[4]; // rv 0
  assign CH0_PMARSVDIN_in[5] = (CH0_PMARSVDIN[5] !== 1'bz) && CH0_PMARSVDIN[5]; // rv 0
  assign CH0_PMARSVDIN_in[6] = (CH0_PMARSVDIN[6] !== 1'bz) && CH0_PMARSVDIN[6]; // rv 0
  assign CH0_PMARSVDIN_in[7] = (CH0_PMARSVDIN[7] !== 1'bz) && CH0_PMARSVDIN[7]; // rv 0
  assign CH0_PMARSVDIN_in[8] = (CH0_PMARSVDIN[8] !== 1'bz) && CH0_PMARSVDIN[8]; // rv 0
  assign CH0_PMARSVDIN_in[9] = (CH0_PMARSVDIN[9] !== 1'bz) && CH0_PMARSVDIN[9]; // rv 0
  assign CH0_RESETOVRD_in = (CH0_RESETOVRD !== 1'bz) && CH0_RESETOVRD; // rv 0
  assign CH0_RXADAPTRESET_in = (CH0_RXADAPTRESET !== 1'bz) && CH0_RXADAPTRESET; // rv 0
  assign CH0_RXADCCALRESET_in = (CH0_RXADCCALRESET !== 1'bz) && CH0_RXADCCALRESET; // rv 0
  assign CH0_RXADCCLKGENRESET_in = (CH0_RXADCCLKGENRESET !== 1'bz) && CH0_RXADCCLKGENRESET; // rv 0
  assign CH0_RXBUFRESET_in = (CH0_RXBUFRESET !== 1'bz) && CH0_RXBUFRESET; // rv 0
  assign CH0_RXCDRFREQOS_in = (CH0_RXCDRFREQOS !== 1'bz) && CH0_RXCDRFREQOS; // rv 0
  assign CH0_RXCDRFRRESET_in = (CH0_RXCDRFRRESET !== 1'bz) && CH0_RXCDRFRRESET; // rv 0
  assign CH0_RXCDRHOLD_in = (CH0_RXCDRHOLD !== 1'bz) && CH0_RXCDRHOLD; // rv 0
  assign CH0_RXCDRINCPCTRL_in = (CH0_RXCDRINCPCTRL !== 1'bz) && CH0_RXCDRINCPCTRL; // rv 0
  assign CH0_RXCDROVRDEN_in = (CH0_RXCDROVRDEN !== 1'bz) && CH0_RXCDROVRDEN; // rv 0
  assign CH0_RXCDRPHRESET_in = (CH0_RXCDRPHRESET !== 1'bz) && CH0_RXCDRPHRESET; // rv 0
  assign CH0_RXDFERESET_in = (CH0_RXDFERESET !== 1'bz) && CH0_RXDFERESET; // rv 0
  assign CH0_RXDSPRESET_in = (CH0_RXDSPRESET !== 1'bz) && CH0_RXDSPRESET; // rv 0
  assign CH0_RXEYESCANRESET_in = (CH0_RXEYESCANRESET !== 1'bz) && CH0_RXEYESCANRESET; // rv 0
  assign CH0_RXFECRESET_in = (CH0_RXFECRESET !== 1'bz) && CH0_RXFECRESET; // rv 0
  assign CH0_RXOUTCLKSEL_in[0] = (CH0_RXOUTCLKSEL[0] !== 1'bz) && CH0_RXOUTCLKSEL[0]; // rv 0
  assign CH0_RXOUTCLKSEL_in[1] = (CH0_RXOUTCLKSEL[1] !== 1'bz) && CH0_RXOUTCLKSEL[1]; // rv 0
  assign CH0_RXOUTCLKSEL_in[2] = (CH0_RXOUTCLKSEL[2] !== 1'bz) && CH0_RXOUTCLKSEL[2]; // rv 0
  assign CH0_RXPCSRESETMASK_in[0] = (CH0_RXPCSRESETMASK[0] !== 1'bz) && CH0_RXPCSRESETMASK[0]; // rv 0
  assign CH0_RXPCSRESETMASK_in[1] = (CH0_RXPCSRESETMASK[1] !== 1'bz) && CH0_RXPCSRESETMASK[1]; // rv 0
  assign CH0_RXPCSRESETMASK_in[2] = (CH0_RXPCSRESETMASK[2] !== 1'bz) && CH0_RXPCSRESETMASK[2]; // rv 0
  assign CH0_RXPCSRESETMASK_in[3] = (CH0_RXPCSRESETMASK[3] !== 1'bz) && CH0_RXPCSRESETMASK[3]; // rv 0
  assign CH0_RXPCSRESET_in = (CH0_RXPCSRESET !== 1'bz) && CH0_RXPCSRESET; // rv 0
  assign CH0_RXPMARESETMASK_in[0] = (CH0_RXPMARESETMASK[0] !== 1'bz) && CH0_RXPMARESETMASK[0]; // rv 0
  assign CH0_RXPMARESETMASK_in[1] = (CH0_RXPMARESETMASK[1] !== 1'bz) && CH0_RXPMARESETMASK[1]; // rv 0
  assign CH0_RXPMARESETMASK_in[2] = (CH0_RXPMARESETMASK[2] !== 1'bz) && CH0_RXPMARESETMASK[2]; // rv 0
  assign CH0_RXPMARESETMASK_in[3] = (CH0_RXPMARESETMASK[3] !== 1'bz) && CH0_RXPMARESETMASK[3]; // rv 0
  assign CH0_RXPMARESETMASK_in[4] = (CH0_RXPMARESETMASK[4] !== 1'bz) && CH0_RXPMARESETMASK[4]; // rv 0
  assign CH0_RXPMARESETMASK_in[5] = (CH0_RXPMARESETMASK[5] !== 1'bz) && CH0_RXPMARESETMASK[5]; // rv 0
  assign CH0_RXPMARESETMASK_in[6] = (CH0_RXPMARESETMASK[6] !== 1'bz) && CH0_RXPMARESETMASK[6]; // rv 0
  assign CH0_RXPMARESETMASK_in[7] = (CH0_RXPMARESETMASK[7] !== 1'bz) && CH0_RXPMARESETMASK[7]; // rv 0
  assign CH0_RXPMARESET_in = (CH0_RXPMARESET !== 1'bz) && CH0_RXPMARESET; // rv 0
  assign CH0_RXPRBSCSCNTRST_in = (CH0_RXPRBSCSCNTRST !== 1'bz) && CH0_RXPRBSCSCNTRST; // rv 0
  assign CH0_RXPROGDIVRESET_in = (CH0_RXPROGDIVRESET !== 1'bz) && CH0_RXPROGDIVRESET; // rv 0
  assign CH0_RXRESETMODE_in[0] = (CH0_RXRESETMODE[0] !== 1'bz) && CH0_RXRESETMODE[0]; // rv 0
  assign CH0_RXRESETMODE_in[1] = (CH0_RXRESETMODE[1] !== 1'bz) && CH0_RXRESETMODE[1]; // rv 0
  assign CH0_RXSPCSEQADV_in = (CH0_RXSPCSEQADV !== 1'bz) && CH0_RXSPCSEQADV; // rv 0
  assign CH0_RXUSRRDY_in = (CH0_RXUSRRDY !== 1'bz) && CH0_RXUSRRDY; // rv 0
  assign CH0_RXUSRSTART_in = (CH0_RXUSRSTART !== 1'bz) && CH0_RXUSRSTART; // rv 0
  assign CH0_RXUSRSTOP_in = (CH0_RXUSRSTOP !== 1'bz) && CH0_RXUSRSTOP; // rv 0
  assign CH0_TXCKALRESET_in = (CH0_TXCKALRESET !== 1'bz) && CH0_TXCKALRESET; // rv 0
  assign CH0_TXCTLFIRDAT_in[0] = (CH0_TXCTLFIRDAT[0] !== 1'bz) && CH0_TXCTLFIRDAT[0]; // rv 0
  assign CH0_TXCTLFIRDAT_in[1] = (CH0_TXCTLFIRDAT[1] !== 1'bz) && CH0_TXCTLFIRDAT[1]; // rv 0
  assign CH0_TXCTLFIRDAT_in[2] = (CH0_TXCTLFIRDAT[2] !== 1'bz) && CH0_TXCTLFIRDAT[2]; // rv 0
  assign CH0_TXCTLFIRDAT_in[3] = (CH0_TXCTLFIRDAT[3] !== 1'bz) && CH0_TXCTLFIRDAT[3]; // rv 0
  assign CH0_TXCTLFIRDAT_in[4] = (CH0_TXCTLFIRDAT[4] !== 1'bz) && CH0_TXCTLFIRDAT[4]; // rv 0
  assign CH0_TXCTLFIRDAT_in[5] = (CH0_TXCTLFIRDAT[5] !== 1'bz) && CH0_TXCTLFIRDAT[5]; // rv 0
  assign CH0_TXDRVAMP_in[0] = (CH0_TXDRVAMP[0] !== 1'bz) && CH0_TXDRVAMP[0]; // rv 0
  assign CH0_TXDRVAMP_in[1] = (CH0_TXDRVAMP[1] !== 1'bz) && CH0_TXDRVAMP[1]; // rv 0
  assign CH0_TXDRVAMP_in[2] = (CH0_TXDRVAMP[2] !== 1'bz) && CH0_TXDRVAMP[2]; // rv 0
  assign CH0_TXDRVAMP_in[3] = (CH0_TXDRVAMP[3] !== 1'bz) && CH0_TXDRVAMP[3]; // rv 0
  assign CH0_TXDRVAMP_in[4] = (CH0_TXDRVAMP[4] !== 1'bz) && CH0_TXDRVAMP[4]; // rv 0
  assign CH0_TXEMPMAIN_in[0] = (CH0_TXEMPMAIN[0] !== 1'bz) && CH0_TXEMPMAIN[0]; // rv 0
  assign CH0_TXEMPMAIN_in[1] = (CH0_TXEMPMAIN[1] !== 1'bz) && CH0_TXEMPMAIN[1]; // rv 0
  assign CH0_TXEMPMAIN_in[2] = (CH0_TXEMPMAIN[2] !== 1'bz) && CH0_TXEMPMAIN[2]; // rv 0
  assign CH0_TXEMPMAIN_in[3] = (CH0_TXEMPMAIN[3] !== 1'bz) && CH0_TXEMPMAIN[3]; // rv 0
  assign CH0_TXEMPMAIN_in[4] = (CH0_TXEMPMAIN[4] !== 1'bz) && CH0_TXEMPMAIN[4]; // rv 0
  assign CH0_TXEMPMAIN_in[5] = (CH0_TXEMPMAIN[5] !== 1'bz) && CH0_TXEMPMAIN[5]; // rv 0
  assign CH0_TXEMPPOST_in[0] = (CH0_TXEMPPOST[0] !== 1'bz) && CH0_TXEMPPOST[0]; // rv 0
  assign CH0_TXEMPPOST_in[1] = (CH0_TXEMPPOST[1] !== 1'bz) && CH0_TXEMPPOST[1]; // rv 0
  assign CH0_TXEMPPOST_in[2] = (CH0_TXEMPPOST[2] !== 1'bz) && CH0_TXEMPPOST[2]; // rv 0
  assign CH0_TXEMPPOST_in[3] = (CH0_TXEMPPOST[3] !== 1'bz) && CH0_TXEMPPOST[3]; // rv 0
  assign CH0_TXEMPPOST_in[4] = (CH0_TXEMPPOST[4] !== 1'bz) && CH0_TXEMPPOST[4]; // rv 0
  assign CH0_TXEMPPRE2_in[0] = (CH0_TXEMPPRE2[0] !== 1'bz) && CH0_TXEMPPRE2[0]; // rv 0
  assign CH0_TXEMPPRE2_in[1] = (CH0_TXEMPPRE2[1] !== 1'bz) && CH0_TXEMPPRE2[1]; // rv 0
  assign CH0_TXEMPPRE2_in[2] = (CH0_TXEMPPRE2[2] !== 1'bz) && CH0_TXEMPPRE2[2]; // rv 0
  assign CH0_TXEMPPRE2_in[3] = (CH0_TXEMPPRE2[3] !== 1'bz) && CH0_TXEMPPRE2[3]; // rv 0
  assign CH0_TXEMPPRE_in[0] = (CH0_TXEMPPRE[0] !== 1'bz) && CH0_TXEMPPRE[0]; // rv 0
  assign CH0_TXEMPPRE_in[1] = (CH0_TXEMPPRE[1] !== 1'bz) && CH0_TXEMPPRE[1]; // rv 0
  assign CH0_TXEMPPRE_in[2] = (CH0_TXEMPPRE[2] !== 1'bz) && CH0_TXEMPPRE[2]; // rv 0
  assign CH0_TXEMPPRE_in[3] = (CH0_TXEMPPRE[3] !== 1'bz) && CH0_TXEMPPRE[3]; // rv 0
  assign CH0_TXEMPPRE_in[4] = (CH0_TXEMPPRE[4] !== 1'bz) && CH0_TXEMPPRE[4]; // rv 0
  assign CH0_TXFECRESET_in = (CH0_TXFECRESET !== 1'bz) && CH0_TXFECRESET; // rv 0
  assign CH0_TXMUXDCDEXHOLD_in = (CH0_TXMUXDCDEXHOLD !== 1'bz) && CH0_TXMUXDCDEXHOLD; // rv 0
  assign CH0_TXMUXDCDORWREN_in = (CH0_TXMUXDCDORWREN !== 1'bz) && CH0_TXMUXDCDORWREN; // rv 0
  assign CH0_TXOUTCLKSEL_in[0] = (CH0_TXOUTCLKSEL[0] !== 1'bz) && CH0_TXOUTCLKSEL[0]; // rv 0
  assign CH0_TXOUTCLKSEL_in[1] = (CH0_TXOUTCLKSEL[1] !== 1'bz) && CH0_TXOUTCLKSEL[1]; // rv 0
  assign CH0_TXOUTCLKSEL_in[2] = (CH0_TXOUTCLKSEL[2] !== 1'bz) && CH0_TXOUTCLKSEL[2]; // rv 0
  assign CH0_TXPCSRESETMASK_in[0] = (CH0_TXPCSRESETMASK[0] !== 1'bz) && CH0_TXPCSRESETMASK[0]; // rv 0
  assign CH0_TXPCSRESETMASK_in[1] = (CH0_TXPCSRESETMASK[1] !== 1'bz) && CH0_TXPCSRESETMASK[1]; // rv 0
  assign CH0_TXPCSRESET_in = (CH0_TXPCSRESET !== 1'bz) && CH0_TXPCSRESET; // rv 0
  assign CH0_TXPMARESETMASK_in[0] = (CH0_TXPMARESETMASK[0] !== 1'bz) && CH0_TXPMARESETMASK[0]; // rv 0
  assign CH0_TXPMARESETMASK_in[1] = (CH0_TXPMARESETMASK[1] !== 1'bz) && CH0_TXPMARESETMASK[1]; // rv 0
  assign CH0_TXPMARESET_in = (CH0_TXPMARESET !== 1'bz) && CH0_TXPMARESET; // rv 0
  assign CH0_TXPROGDIVRESET_in = (CH0_TXPROGDIVRESET !== 1'bz) && CH0_TXPROGDIVRESET; // rv 0
  assign CH0_TXRESETMODE_in[0] = (CH0_TXRESETMODE[0] !== 1'bz) && CH0_TXRESETMODE[0]; // rv 0
  assign CH0_TXRESETMODE_in[1] = (CH0_TXRESETMODE[1] !== 1'bz) && CH0_TXRESETMODE[1]; // rv 0
  assign CH0_TXSPCSEQADV_in = (CH0_TXSPCSEQADV !== 1'bz) && CH0_TXSPCSEQADV; // rv 0
  assign CH0_TXUSRRDY_in = (CH0_TXUSRRDY !== 1'bz) && CH0_TXUSRRDY; // rv 0
  assign CH1_AXISRST_in = (CH1_AXISRST !== 1'bz) && CH1_AXISRST; // rv 0
  assign CH1_CFGRESET_in = (CH1_CFGRESET !== 1'bz) && CH1_CFGRESET; // rv 0
  assign CH1_DMONFIFORESET_in = (CH1_DMONFIFORESET !== 1'bz) && CH1_DMONFIFORESET; // rv 0
  assign CH1_DMONITORCLK_in = (CH1_DMONITORCLK !== 1'bz) && CH1_DMONITORCLK; // rv 0
  assign CH1_GTMRXN_in = CH1_GTMRXN;
  assign CH1_GTMRXP_in = CH1_GTMRXP;
  assign CH1_GTRXRESET_in = (CH1_GTRXRESET !== 1'bz) && CH1_GTRXRESET; // rv 0
  assign CH1_GTTXRESET_in = (CH1_GTTXRESET !== 1'bz) && CH1_GTTXRESET; // rv 0
  assign CH1_LOOPBACK_in[0] = (CH1_LOOPBACK[0] !== 1'bz) && CH1_LOOPBACK[0]; // rv 0
  assign CH1_LOOPBACK_in[1] = (CH1_LOOPBACK[1] !== 1'bz) && CH1_LOOPBACK[1]; // rv 0
  assign CH1_LOOPBACK_in[2] = (CH1_LOOPBACK[2] !== 1'bz) && CH1_LOOPBACK[2]; // rv 0
  assign CH1_PCSRSVDIN_in[0] = (CH1_PCSRSVDIN[0] !== 1'bz) && CH1_PCSRSVDIN[0]; // rv 0
  assign CH1_PCSRSVDIN_in[10] = (CH1_PCSRSVDIN[10] !== 1'bz) && CH1_PCSRSVDIN[10]; // rv 0
  assign CH1_PCSRSVDIN_in[11] = (CH1_PCSRSVDIN[11] !== 1'bz) && CH1_PCSRSVDIN[11]; // rv 0
  assign CH1_PCSRSVDIN_in[12] = (CH1_PCSRSVDIN[12] !== 1'bz) && CH1_PCSRSVDIN[12]; // rv 0
  assign CH1_PCSRSVDIN_in[13] = (CH1_PCSRSVDIN[13] !== 1'bz) && CH1_PCSRSVDIN[13]; // rv 0
  assign CH1_PCSRSVDIN_in[14] = (CH1_PCSRSVDIN[14] !== 1'bz) && CH1_PCSRSVDIN[14]; // rv 0
  assign CH1_PCSRSVDIN_in[15] = (CH1_PCSRSVDIN[15] !== 1'bz) && CH1_PCSRSVDIN[15]; // rv 0
  assign CH1_PCSRSVDIN_in[1] = (CH1_PCSRSVDIN[1] !== 1'bz) && CH1_PCSRSVDIN[1]; // rv 0
  assign CH1_PCSRSVDIN_in[2] = (CH1_PCSRSVDIN[2] !== 1'bz) && CH1_PCSRSVDIN[2]; // rv 0
  assign CH1_PCSRSVDIN_in[3] = (CH1_PCSRSVDIN[3] !== 1'bz) && CH1_PCSRSVDIN[3]; // rv 0
  assign CH1_PCSRSVDIN_in[4] = (CH1_PCSRSVDIN[4] !== 1'bz) && CH1_PCSRSVDIN[4]; // rv 0
  assign CH1_PCSRSVDIN_in[5] = (CH1_PCSRSVDIN[5] !== 1'bz) && CH1_PCSRSVDIN[5]; // rv 0
  assign CH1_PCSRSVDIN_in[6] = (CH1_PCSRSVDIN[6] !== 1'bz) && CH1_PCSRSVDIN[6]; // rv 0
  assign CH1_PCSRSVDIN_in[7] = (CH1_PCSRSVDIN[7] !== 1'bz) && CH1_PCSRSVDIN[7]; // rv 0
  assign CH1_PCSRSVDIN_in[8] = (CH1_PCSRSVDIN[8] !== 1'bz) && CH1_PCSRSVDIN[8]; // rv 0
  assign CH1_PCSRSVDIN_in[9] = (CH1_PCSRSVDIN[9] !== 1'bz) && CH1_PCSRSVDIN[9]; // rv 0
  assign CH1_PMARSVDIN_in[0] = (CH1_PMARSVDIN[0] === 1'bz) || CH1_PMARSVDIN[0]; // rv 1
  assign CH1_PMARSVDIN_in[10] = (CH1_PMARSVDIN[10] !== 1'bz) && CH1_PMARSVDIN[10]; // rv 0
  assign CH1_PMARSVDIN_in[11] = (CH1_PMARSVDIN[11] !== 1'bz) && CH1_PMARSVDIN[11]; // rv 0
  assign CH1_PMARSVDIN_in[12] = (CH1_PMARSVDIN[12] !== 1'bz) && CH1_PMARSVDIN[12]; // rv 0
  assign CH1_PMARSVDIN_in[13] = (CH1_PMARSVDIN[13] !== 1'bz) && CH1_PMARSVDIN[13]; // rv 0
  assign CH1_PMARSVDIN_in[14] = (CH1_PMARSVDIN[14] !== 1'bz) && CH1_PMARSVDIN[14]; // rv 0
  assign CH1_PMARSVDIN_in[15] = (CH1_PMARSVDIN[15] !== 1'bz) && CH1_PMARSVDIN[15]; // rv 0
  assign CH1_PMARSVDIN_in[1] = (CH1_PMARSVDIN[1] !== 1'bz) && CH1_PMARSVDIN[1]; // rv 0
  assign CH1_PMARSVDIN_in[2] = (CH1_PMARSVDIN[2] !== 1'bz) && CH1_PMARSVDIN[2]; // rv 0
  assign CH1_PMARSVDIN_in[3] = (CH1_PMARSVDIN[3] !== 1'bz) && CH1_PMARSVDIN[3]; // rv 0
  assign CH1_PMARSVDIN_in[4] = (CH1_PMARSVDIN[4] !== 1'bz) && CH1_PMARSVDIN[4]; // rv 0
  assign CH1_PMARSVDIN_in[5] = (CH1_PMARSVDIN[5] !== 1'bz) && CH1_PMARSVDIN[5]; // rv 0
  assign CH1_PMARSVDIN_in[6] = (CH1_PMARSVDIN[6] !== 1'bz) && CH1_PMARSVDIN[6]; // rv 0
  assign CH1_PMARSVDIN_in[7] = (CH1_PMARSVDIN[7] !== 1'bz) && CH1_PMARSVDIN[7]; // rv 0
  assign CH1_PMARSVDIN_in[8] = (CH1_PMARSVDIN[8] !== 1'bz) && CH1_PMARSVDIN[8]; // rv 0
  assign CH1_PMARSVDIN_in[9] = (CH1_PMARSVDIN[9] !== 1'bz) && CH1_PMARSVDIN[9]; // rv 0
  assign CH1_RESETOVRD_in = (CH1_RESETOVRD !== 1'bz) && CH1_RESETOVRD; // rv 0
  assign CH1_RXADAPTRESET_in = (CH1_RXADAPTRESET !== 1'bz) && CH1_RXADAPTRESET; // rv 0
  assign CH1_RXADCCALRESET_in = (CH1_RXADCCALRESET !== 1'bz) && CH1_RXADCCALRESET; // rv 0
  assign CH1_RXADCCLKGENRESET_in = (CH1_RXADCCLKGENRESET !== 1'bz) && CH1_RXADCCLKGENRESET; // rv 0
  assign CH1_RXBUFRESET_in = (CH1_RXBUFRESET !== 1'bz) && CH1_RXBUFRESET; // rv 0
  assign CH1_RXCDRFREQOS_in = (CH1_RXCDRFREQOS !== 1'bz) && CH1_RXCDRFREQOS; // rv 0
  assign CH1_RXCDRFRRESET_in = (CH1_RXCDRFRRESET !== 1'bz) && CH1_RXCDRFRRESET; // rv 0
  assign CH1_RXCDRHOLD_in = (CH1_RXCDRHOLD !== 1'bz) && CH1_RXCDRHOLD; // rv 0
  assign CH1_RXCDRINCPCTRL_in = (CH1_RXCDRINCPCTRL !== 1'bz) && CH1_RXCDRINCPCTRL; // rv 0
  assign CH1_RXCDROVRDEN_in = (CH1_RXCDROVRDEN !== 1'bz) && CH1_RXCDROVRDEN; // rv 0
  assign CH1_RXCDRPHRESET_in = (CH1_RXCDRPHRESET !== 1'bz) && CH1_RXCDRPHRESET; // rv 0
  assign CH1_RXDFERESET_in = (CH1_RXDFERESET !== 1'bz) && CH1_RXDFERESET; // rv 0
  assign CH1_RXDSPRESET_in = (CH1_RXDSPRESET !== 1'bz) && CH1_RXDSPRESET; // rv 0
  assign CH1_RXEYESCANRESET_in = (CH1_RXEYESCANRESET !== 1'bz) && CH1_RXEYESCANRESET; // rv 0
  assign CH1_RXFECRESET_in = (CH1_RXFECRESET !== 1'bz) && CH1_RXFECRESET; // rv 0
  assign CH1_RXOUTCLKSEL_in[0] = (CH1_RXOUTCLKSEL[0] !== 1'bz) && CH1_RXOUTCLKSEL[0]; // rv 0
  assign CH1_RXOUTCLKSEL_in[1] = (CH1_RXOUTCLKSEL[1] !== 1'bz) && CH1_RXOUTCLKSEL[1]; // rv 0
  assign CH1_RXOUTCLKSEL_in[2] = (CH1_RXOUTCLKSEL[2] !== 1'bz) && CH1_RXOUTCLKSEL[2]; // rv 0
  assign CH1_RXPCSRESETMASK_in[0] = (CH1_RXPCSRESETMASK[0] !== 1'bz) && CH1_RXPCSRESETMASK[0]; // rv 0
  assign CH1_RXPCSRESETMASK_in[1] = (CH1_RXPCSRESETMASK[1] !== 1'bz) && CH1_RXPCSRESETMASK[1]; // rv 0
  assign CH1_RXPCSRESETMASK_in[2] = (CH1_RXPCSRESETMASK[2] !== 1'bz) && CH1_RXPCSRESETMASK[2]; // rv 0
  assign CH1_RXPCSRESETMASK_in[3] = (CH1_RXPCSRESETMASK[3] !== 1'bz) && CH1_RXPCSRESETMASK[3]; // rv 0
  assign CH1_RXPCSRESET_in = (CH1_RXPCSRESET !== 1'bz) && CH1_RXPCSRESET; // rv 0
  assign CH1_RXPMARESETMASK_in[0] = (CH1_RXPMARESETMASK[0] !== 1'bz) && CH1_RXPMARESETMASK[0]; // rv 0
  assign CH1_RXPMARESETMASK_in[1] = (CH1_RXPMARESETMASK[1] !== 1'bz) && CH1_RXPMARESETMASK[1]; // rv 0
  assign CH1_RXPMARESETMASK_in[2] = (CH1_RXPMARESETMASK[2] !== 1'bz) && CH1_RXPMARESETMASK[2]; // rv 0
  assign CH1_RXPMARESETMASK_in[3] = (CH1_RXPMARESETMASK[3] !== 1'bz) && CH1_RXPMARESETMASK[3]; // rv 0
  assign CH1_RXPMARESETMASK_in[4] = (CH1_RXPMARESETMASK[4] !== 1'bz) && CH1_RXPMARESETMASK[4]; // rv 0
  assign CH1_RXPMARESETMASK_in[5] = (CH1_RXPMARESETMASK[5] !== 1'bz) && CH1_RXPMARESETMASK[5]; // rv 0
  assign CH1_RXPMARESETMASK_in[6] = (CH1_RXPMARESETMASK[6] !== 1'bz) && CH1_RXPMARESETMASK[6]; // rv 0
  assign CH1_RXPMARESETMASK_in[7] = (CH1_RXPMARESETMASK[7] !== 1'bz) && CH1_RXPMARESETMASK[7]; // rv 0
  assign CH1_RXPMARESET_in = (CH1_RXPMARESET !== 1'bz) && CH1_RXPMARESET; // rv 0
  assign CH1_RXPRBSCSCNTRST_in = (CH1_RXPRBSCSCNTRST !== 1'bz) && CH1_RXPRBSCSCNTRST; // rv 0
  assign CH1_RXPROGDIVRESET_in = (CH1_RXPROGDIVRESET !== 1'bz) && CH1_RXPROGDIVRESET; // rv 0
  assign CH1_RXRESETMODE_in[0] = (CH1_RXRESETMODE[0] !== 1'bz) && CH1_RXRESETMODE[0]; // rv 0
  assign CH1_RXRESETMODE_in[1] = (CH1_RXRESETMODE[1] !== 1'bz) && CH1_RXRESETMODE[1]; // rv 0
  assign CH1_RXSPCSEQADV_in = (CH1_RXSPCSEQADV !== 1'bz) && CH1_RXSPCSEQADV; // rv 0
  assign CH1_RXUSRRDY_in = (CH1_RXUSRRDY !== 1'bz) && CH1_RXUSRRDY; // rv 0
  assign CH1_RXUSRSTART_in = (CH1_RXUSRSTART !== 1'bz) && CH1_RXUSRSTART; // rv 0
  assign CH1_RXUSRSTOP_in = (CH1_RXUSRSTOP !== 1'bz) && CH1_RXUSRSTOP; // rv 0
  assign CH1_TXCKALRESET_in = (CH1_TXCKALRESET !== 1'bz) && CH1_TXCKALRESET; // rv 0
  assign CH1_TXCTLFIRDAT_in[0] = (CH1_TXCTLFIRDAT[0] !== 1'bz) && CH1_TXCTLFIRDAT[0]; // rv 0
  assign CH1_TXCTLFIRDAT_in[1] = (CH1_TXCTLFIRDAT[1] !== 1'bz) && CH1_TXCTLFIRDAT[1]; // rv 0
  assign CH1_TXCTLFIRDAT_in[2] = (CH1_TXCTLFIRDAT[2] !== 1'bz) && CH1_TXCTLFIRDAT[2]; // rv 0
  assign CH1_TXCTLFIRDAT_in[3] = (CH1_TXCTLFIRDAT[3] !== 1'bz) && CH1_TXCTLFIRDAT[3]; // rv 0
  assign CH1_TXCTLFIRDAT_in[4] = (CH1_TXCTLFIRDAT[4] !== 1'bz) && CH1_TXCTLFIRDAT[4]; // rv 0
  assign CH1_TXCTLFIRDAT_in[5] = (CH1_TXCTLFIRDAT[5] !== 1'bz) && CH1_TXCTLFIRDAT[5]; // rv 0
  assign CH1_TXDRVAMP_in[0] = (CH1_TXDRVAMP[0] !== 1'bz) && CH1_TXDRVAMP[0]; // rv 0
  assign CH1_TXDRVAMP_in[1] = (CH1_TXDRVAMP[1] !== 1'bz) && CH1_TXDRVAMP[1]; // rv 0
  assign CH1_TXDRVAMP_in[2] = (CH1_TXDRVAMP[2] !== 1'bz) && CH1_TXDRVAMP[2]; // rv 0
  assign CH1_TXDRVAMP_in[3] = (CH1_TXDRVAMP[3] !== 1'bz) && CH1_TXDRVAMP[3]; // rv 0
  assign CH1_TXDRVAMP_in[4] = (CH1_TXDRVAMP[4] !== 1'bz) && CH1_TXDRVAMP[4]; // rv 0
  assign CH1_TXEMPMAIN_in[0] = (CH1_TXEMPMAIN[0] !== 1'bz) && CH1_TXEMPMAIN[0]; // rv 0
  assign CH1_TXEMPMAIN_in[1] = (CH1_TXEMPMAIN[1] !== 1'bz) && CH1_TXEMPMAIN[1]; // rv 0
  assign CH1_TXEMPMAIN_in[2] = (CH1_TXEMPMAIN[2] !== 1'bz) && CH1_TXEMPMAIN[2]; // rv 0
  assign CH1_TXEMPMAIN_in[3] = (CH1_TXEMPMAIN[3] !== 1'bz) && CH1_TXEMPMAIN[3]; // rv 0
  assign CH1_TXEMPMAIN_in[4] = (CH1_TXEMPMAIN[4] !== 1'bz) && CH1_TXEMPMAIN[4]; // rv 0
  assign CH1_TXEMPMAIN_in[5] = (CH1_TXEMPMAIN[5] !== 1'bz) && CH1_TXEMPMAIN[5]; // rv 0
  assign CH1_TXEMPPOST_in[0] = (CH1_TXEMPPOST[0] !== 1'bz) && CH1_TXEMPPOST[0]; // rv 0
  assign CH1_TXEMPPOST_in[1] = (CH1_TXEMPPOST[1] !== 1'bz) && CH1_TXEMPPOST[1]; // rv 0
  assign CH1_TXEMPPOST_in[2] = (CH1_TXEMPPOST[2] !== 1'bz) && CH1_TXEMPPOST[2]; // rv 0
  assign CH1_TXEMPPOST_in[3] = (CH1_TXEMPPOST[3] !== 1'bz) && CH1_TXEMPPOST[3]; // rv 0
  assign CH1_TXEMPPOST_in[4] = (CH1_TXEMPPOST[4] !== 1'bz) && CH1_TXEMPPOST[4]; // rv 0
  assign CH1_TXEMPPRE2_in[0] = (CH1_TXEMPPRE2[0] !== 1'bz) && CH1_TXEMPPRE2[0]; // rv 0
  assign CH1_TXEMPPRE2_in[1] = (CH1_TXEMPPRE2[1] !== 1'bz) && CH1_TXEMPPRE2[1]; // rv 0
  assign CH1_TXEMPPRE2_in[2] = (CH1_TXEMPPRE2[2] !== 1'bz) && CH1_TXEMPPRE2[2]; // rv 0
  assign CH1_TXEMPPRE2_in[3] = (CH1_TXEMPPRE2[3] !== 1'bz) && CH1_TXEMPPRE2[3]; // rv 0
  assign CH1_TXEMPPRE_in[0] = (CH1_TXEMPPRE[0] !== 1'bz) && CH1_TXEMPPRE[0]; // rv 0
  assign CH1_TXEMPPRE_in[1] = (CH1_TXEMPPRE[1] !== 1'bz) && CH1_TXEMPPRE[1]; // rv 0
  assign CH1_TXEMPPRE_in[2] = (CH1_TXEMPPRE[2] !== 1'bz) && CH1_TXEMPPRE[2]; // rv 0
  assign CH1_TXEMPPRE_in[3] = (CH1_TXEMPPRE[3] !== 1'bz) && CH1_TXEMPPRE[3]; // rv 0
  assign CH1_TXEMPPRE_in[4] = (CH1_TXEMPPRE[4] !== 1'bz) && CH1_TXEMPPRE[4]; // rv 0
  assign CH1_TXFECRESET_in = (CH1_TXFECRESET !== 1'bz) && CH1_TXFECRESET; // rv 0
  assign CH1_TXMUXDCDEXHOLD_in = (CH1_TXMUXDCDEXHOLD !== 1'bz) && CH1_TXMUXDCDEXHOLD; // rv 0
  assign CH1_TXMUXDCDORWREN_in = (CH1_TXMUXDCDORWREN !== 1'bz) && CH1_TXMUXDCDORWREN; // rv 0
  assign CH1_TXOUTCLKSEL_in[0] = (CH1_TXOUTCLKSEL[0] !== 1'bz) && CH1_TXOUTCLKSEL[0]; // rv 0
  assign CH1_TXOUTCLKSEL_in[1] = (CH1_TXOUTCLKSEL[1] !== 1'bz) && CH1_TXOUTCLKSEL[1]; // rv 0
  assign CH1_TXOUTCLKSEL_in[2] = (CH1_TXOUTCLKSEL[2] !== 1'bz) && CH1_TXOUTCLKSEL[2]; // rv 0
  assign CH1_TXPCSRESETMASK_in[0] = (CH1_TXPCSRESETMASK[0] !== 1'bz) && CH1_TXPCSRESETMASK[0]; // rv 0
  assign CH1_TXPCSRESETMASK_in[1] = (CH1_TXPCSRESETMASK[1] !== 1'bz) && CH1_TXPCSRESETMASK[1]; // rv 0
  assign CH1_TXPCSRESET_in = (CH1_TXPCSRESET !== 1'bz) && CH1_TXPCSRESET; // rv 0
  assign CH1_TXPMARESETMASK_in[0] = (CH1_TXPMARESETMASK[0] !== 1'bz) && CH1_TXPMARESETMASK[0]; // rv 0
  assign CH1_TXPMARESETMASK_in[1] = (CH1_TXPMARESETMASK[1] !== 1'bz) && CH1_TXPMARESETMASK[1]; // rv 0
  assign CH1_TXPMARESET_in = (CH1_TXPMARESET !== 1'bz) && CH1_TXPMARESET; // rv 0
  assign CH1_TXPROGDIVRESET_in = (CH1_TXPROGDIVRESET !== 1'bz) && CH1_TXPROGDIVRESET; // rv 0
  assign CH1_TXRESETMODE_in[0] = (CH1_TXRESETMODE[0] !== 1'bz) && CH1_TXRESETMODE[0]; // rv 0
  assign CH1_TXRESETMODE_in[1] = (CH1_TXRESETMODE[1] !== 1'bz) && CH1_TXRESETMODE[1]; // rv 0
  assign CH1_TXSPCSEQADV_in = (CH1_TXSPCSEQADV !== 1'bz) && CH1_TXSPCSEQADV; // rv 0
  assign CH1_TXUSRRDY_in = (CH1_TXUSRRDY !== 1'bz) && CH1_TXUSRRDY; // rv 0
  assign DRPRST_in = (DRPRST !== 1'bz) && DRPRST; // rv 0
  assign GTGREFCLK2PLL_in = GTGREFCLK2PLL;
  assign GTNORTHREFCLK_in = GTNORTHREFCLK;
  assign GTREFCLK_in = GTREFCLK;
  assign GTSOUTHREFCLK_in = GTSOUTHREFCLK;
  assign PLLFBDIV_in[0] = (PLLFBDIV[0] !== 1'bz) && PLLFBDIV[0]; // rv 0
  assign PLLFBDIV_in[1] = (PLLFBDIV[1] !== 1'bz) && PLLFBDIV[1]; // rv 0
  assign PLLFBDIV_in[2] = (PLLFBDIV[2] !== 1'bz) && PLLFBDIV[2]; // rv 0
  assign PLLFBDIV_in[3] = (PLLFBDIV[3] !== 1'bz) && PLLFBDIV[3]; // rv 0
  assign PLLFBDIV_in[4] = (PLLFBDIV[4] !== 1'bz) && PLLFBDIV[4]; // rv 0
  assign PLLFBDIV_in[5] = (PLLFBDIV[5] !== 1'bz) && PLLFBDIV[5]; // rv 0
  assign PLLFBDIV_in[6] = (PLLFBDIV[6] !== 1'bz) && PLLFBDIV[6]; // rv 0
  assign PLLFBDIV_in[7] = (PLLFBDIV[7] !== 1'bz) && PLLFBDIV[7]; // rv 0
  assign PLLMONCLK_in = (PLLMONCLK === 1'bz) || PLLMONCLK; // rv 1
  assign PLLPD_in = (PLLPD !== 1'bz) && PLLPD; // rv 0
  assign PLLREFCLKSEL_in[0] = (PLLREFCLKSEL[0] === 1'bz) || PLLREFCLKSEL[0]; // rv 1
  assign PLLREFCLKSEL_in[1] = (PLLREFCLKSEL[1] !== 1'bz) && PLLREFCLKSEL[1]; // rv 0
  assign PLLREFCLKSEL_in[2] = (PLLREFCLKSEL[2] !== 1'bz) && PLLREFCLKSEL[2]; // rv 0
  assign PLLRESETBYPASSMODE_in = (PLLRESETBYPASSMODE !== 1'bz) && PLLRESETBYPASSMODE; // rv 0
  assign PLLRESETMASK_in[0] = (PLLRESETMASK[0] !== 1'bz) && PLLRESETMASK[0]; // rv 0
  assign PLLRESETMASK_in[1] = (PLLRESETMASK[1] !== 1'bz) && PLLRESETMASK[1]; // rv 0
  assign PLLRESET_in = (PLLRESET === 1'bz) || PLLRESET; // rv 1
  assign PLLRSVDIN_in[0] = (PLLRSVDIN[0] === 1'bz) || PLLRSVDIN[0]; // rv 1
  assign PLLRSVDIN_in[10] = (PLLRSVDIN[10] !== 1'bz) && PLLRSVDIN[10]; // rv 0
  assign PLLRSVDIN_in[11] = (PLLRSVDIN[11] !== 1'bz) && PLLRSVDIN[11]; // rv 0
  assign PLLRSVDIN_in[12] = (PLLRSVDIN[12] !== 1'bz) && PLLRSVDIN[12]; // rv 0
  assign PLLRSVDIN_in[13] = (PLLRSVDIN[13] !== 1'bz) && PLLRSVDIN[13]; // rv 0
  assign PLLRSVDIN_in[14] = (PLLRSVDIN[14] !== 1'bz) && PLLRSVDIN[14]; // rv 0
  assign PLLRSVDIN_in[15] = (PLLRSVDIN[15] !== 1'bz) && PLLRSVDIN[15]; // rv 0
  assign PLLRSVDIN_in[1] = (PLLRSVDIN[1] !== 1'bz) && PLLRSVDIN[1]; // rv 0
  assign PLLRSVDIN_in[2] = (PLLRSVDIN[2] !== 1'bz) && PLLRSVDIN[2]; // rv 0
  assign PLLRSVDIN_in[3] = (PLLRSVDIN[3] !== 1'bz) && PLLRSVDIN[3]; // rv 0
  assign PLLRSVDIN_in[4] = (PLLRSVDIN[4] !== 1'bz) && PLLRSVDIN[4]; // rv 0
  assign PLLRSVDIN_in[5] = (PLLRSVDIN[5] !== 1'bz) && PLLRSVDIN[5]; // rv 0
  assign PLLRSVDIN_in[6] = (PLLRSVDIN[6] !== 1'bz) && PLLRSVDIN[6]; // rv 0
  assign PLLRSVDIN_in[7] = (PLLRSVDIN[7] !== 1'bz) && PLLRSVDIN[7]; // rv 0
  assign PLLRSVDIN_in[8] = (PLLRSVDIN[8] !== 1'bz) && PLLRSVDIN[8]; // rv 0
  assign PLLRSVDIN_in[9] = (PLLRSVDIN[9] !== 1'bz) && PLLRSVDIN[9]; // rv 0
  assign RCALENB_in = RCALENB;
  assign SDMDATA_in[0] = (SDMDATA[0] !== 1'bz) && SDMDATA[0]; // rv 0
  assign SDMDATA_in[10] = (SDMDATA[10] !== 1'bz) && SDMDATA[10]; // rv 0
  assign SDMDATA_in[11] = (SDMDATA[11] !== 1'bz) && SDMDATA[11]; // rv 0
  assign SDMDATA_in[12] = (SDMDATA[12] !== 1'bz) && SDMDATA[12]; // rv 0
  assign SDMDATA_in[13] = (SDMDATA[13] !== 1'bz) && SDMDATA[13]; // rv 0
  assign SDMDATA_in[14] = (SDMDATA[14] !== 1'bz) && SDMDATA[14]; // rv 0
  assign SDMDATA_in[15] = (SDMDATA[15] !== 1'bz) && SDMDATA[15]; // rv 0
  assign SDMDATA_in[16] = (SDMDATA[16] !== 1'bz) && SDMDATA[16]; // rv 0
  assign SDMDATA_in[17] = (SDMDATA[17] !== 1'bz) && SDMDATA[17]; // rv 0
  assign SDMDATA_in[18] = (SDMDATA[18] !== 1'bz) && SDMDATA[18]; // rv 0
  assign SDMDATA_in[19] = (SDMDATA[19] !== 1'bz) && SDMDATA[19]; // rv 0
  assign SDMDATA_in[1] = (SDMDATA[1] !== 1'bz) && SDMDATA[1]; // rv 0
  assign SDMDATA_in[20] = (SDMDATA[20] !== 1'bz) && SDMDATA[20]; // rv 0
  assign SDMDATA_in[21] = (SDMDATA[21] !== 1'bz) && SDMDATA[21]; // rv 0
  assign SDMDATA_in[22] = (SDMDATA[22] !== 1'bz) && SDMDATA[22]; // rv 0
  assign SDMDATA_in[23] = (SDMDATA[23] !== 1'bz) && SDMDATA[23]; // rv 0
  assign SDMDATA_in[24] = (SDMDATA[24] !== 1'bz) && SDMDATA[24]; // rv 0
  assign SDMDATA_in[25] = (SDMDATA[25] !== 1'bz) && SDMDATA[25]; // rv 0
  assign SDMDATA_in[2] = (SDMDATA[2] !== 1'bz) && SDMDATA[2]; // rv 0
  assign SDMDATA_in[3] = (SDMDATA[3] !== 1'bz) && SDMDATA[3]; // rv 0
  assign SDMDATA_in[4] = (SDMDATA[4] !== 1'bz) && SDMDATA[4]; // rv 0
  assign SDMDATA_in[5] = (SDMDATA[5] !== 1'bz) && SDMDATA[5]; // rv 0
  assign SDMDATA_in[6] = (SDMDATA[6] !== 1'bz) && SDMDATA[6]; // rv 0
  assign SDMDATA_in[7] = (SDMDATA[7] !== 1'bz) && SDMDATA[7]; // rv 0
  assign SDMDATA_in[8] = (SDMDATA[8] !== 1'bz) && SDMDATA[8]; // rv 0
  assign SDMDATA_in[9] = (SDMDATA[9] !== 1'bz) && SDMDATA[9]; // rv 0
  assign SDMTOGGLE_in = (SDMTOGGLE !== 1'bz) && SDMTOGGLE; // rv 0

`ifndef XIL_XECLIB
  reg attr_test;
  reg attr_err;
  
  initial begin
  trig_attr = 1'b0;
  `ifdef XIL_ATTR_TEST
    attr_test = 1'b1;
  `else
    attr_test = 1'b0;
  `endif
    attr_err = 1'b0;
    #1;
    trig_attr = ~trig_attr;
  end
`endif

`ifdef XIL_XECLIB
  assign DATARATE_BIN = DATARATE_REG * 1000;
  
  assign INS_LOSS_NYQ_BIN = INS_LOSS_NYQ_REG * 1000;
  
`else
  always @ (trig_attr) begin
  #1;
  DATARATE_BIN = DATARATE_REG * 1000;
  
  INS_LOSS_NYQ_BIN = INS_LOSS_NYQ_REG * 1000;
  
  end
`endif

`ifndef XIL_XECLIB
  always @ (trig_attr) begin
    #1;
    if ((attr_test == 1'b1) ||
        (DATARATE_REG < 9.800 || DATARATE_REG > 58.000)) begin
      $display("Error: [Unisim %s-406] DATARATE attribute is set to %f.  Legal values for this attribute are 9.800 to 58.000. Instance: %m", MODULE_NAME, DATARATE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((FEC_MODE_REG != "BYPASS") &&
         (FEC_MODE_REG != "KP4"))) begin
      $display("Error: [Unisim %s-436] FEC_MODE attribute is set to %s.  Legal values for this attribute are BYPASS or KP4. Instance: %m", MODULE_NAME, FEC_MODE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        (INS_LOSS_NYQ_REG < 0.000 || INS_LOSS_NYQ_REG > 60.000)) begin
      $display("Error: [Unisim %s-437] INS_LOSS_NYQ attribute is set to %f.  Legal values for this attribute are 0.000 to 60.000. Instance: %m", MODULE_NAME, INS_LOSS_NYQ_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((INTERFACE_WIDTH_REG < 64) || (INTERFACE_WIDTH_REG > 256))) begin
      $display("Error: [Unisim %s-438] INTERFACE_WIDTH attribute is set to %d.  Legal values for this attribute are 64 to 256. Instance: %m", MODULE_NAME, INTERFACE_WIDTH_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((MODULATION_MODE_REG != "NRZ") &&
         (MODULATION_MODE_REG != "PAM4"))) begin
      $display("Error: [Unisim %s-439] MODULATION_MODE attribute is set to %s.  Legal values for this attribute are NRZ or PAM4. Instance: %m", MODULE_NAME, MODULATION_MODE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((PLL_IPS_REFCLK_SEL_REG != 0) &&
         (PLL_IPS_REFCLK_SEL_REG != 1) &&
         (PLL_IPS_REFCLK_SEL_REG != 2) &&
         (PLL_IPS_REFCLK_SEL_REG != 3) &&
         (PLL_IPS_REFCLK_SEL_REG != 4) &&
         (PLL_IPS_REFCLK_SEL_REG != 5) &&
         (PLL_IPS_REFCLK_SEL_REG != 6) &&
         (PLL_IPS_REFCLK_SEL_REG != 7))) begin
      $display("Error: [Unisim %s-450] PLL_IPS_REFCLK_SEL attribute is set to %d.  Legal values for this attribute are 0, 1, 2, 3, 4, 5, 6 or 7. Instance: %m", MODULE_NAME, PLL_IPS_REFCLK_SEL_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((SIM_DEVICE_REG != "ULTRASCALE_PLUS_ES1") &&
         (SIM_DEVICE_REG != "ULTRASCALE_PLUS") &&
         (SIM_DEVICE_REG != "ULTRASCALE_PLUS_ES2"))) begin
      $display("Error: [Unisim %s-461] SIM_DEVICE attribute is set to %s.  Legal values for this attribute are ULTRASCALE_PLUS_ES1, ULTRASCALE_PLUS or ULTRASCALE_PLUS_ES2. Instance: %m", MODULE_NAME, SIM_DEVICE_REG);
      attr_err = 1'b1;
    end
    
    if ((attr_test == 1'b1) ||
        ((TX_AMPLITUDE_SWING_REG < 250) || (TX_AMPLITUDE_SWING_REG > 1025))) begin
      $display("Error: [Unisim %s-462] TX_AMPLITUDE_SWING attribute is set to %d.  Legal values for this attribute are 250 to 1025. Instance: %m", MODULE_NAME, TX_AMPLITUDE_SWING_REG);
      attr_err = 1'b1;
    end
    
    if (attr_err == 1'b1) #1 $finish;
  end
`endif


assign CH0_PCSSCANCLK_in = 2'b11; // tie off
assign CH0_PMASCANCLK_in = 9'b111111111; // tie off
assign CH0_TSTCLK0_in = 1'b1; // tie off
assign CH0_TSTCLK1_in = 1'b1; // tie off
assign CH1_PCSSCANCLK_in = 2'b11; // tie off
assign CH1_PMASCANCLK_in = 9'b111111111; // tie off
assign CH1_TSTCLK0_in = 1'b1; // tie off
assign CH1_TSTCLK1_in = 1'b1; // tie off
assign CLKTESTSIG_in = 1'b1; // tie off
assign FECSCANCLK_in = 1'b1; // tie off
assign PLLSCANCLK_in = 4'b1111; // tie off

assign CH0_BSRSERIAL_in = 1'b1; // tie off
assign CH0_PCSSCANENB_in = 1'b1; // tie off
assign CH0_PCSSCANIN_in = 15'b111111111111111; // tie off
assign CH0_PCSSCANMODEB_in = 1'b1; // tie off
assign CH0_PCSSCANRSTB_in = 1'b1; // tie off
assign CH0_PCSSCANRSTEN_in = 1'b1; // tie off
assign CH0_PMASCANENB_in = 1'b1; // tie off
assign CH0_PMASCANIN_in = 25'b1111111111111111111111111; // tie off
assign CH0_PMASCANMODEB_in = 1'b1; // tie off
assign CH0_PMASCANRSTEN_in = 1'b1; // tie off
assign CH1_BSRSERIAL_in = 1'b1; // tie off
assign CH1_PCSSCANENB_in = 1'b1; // tie off
assign CH1_PCSSCANIN_in = 15'b111111111111111; // tie off
assign CH1_PCSSCANMODEB_in = 1'b1; // tie off
assign CH1_PCSSCANRSTB_in = 1'b1; // tie off
assign CH1_PCSSCANRSTEN_in = 1'b1; // tie off
assign CH1_PMASCANENB_in = 1'b1; // tie off
assign CH1_PMASCANIN_in = 25'b1111111111111111111111111; // tie off
assign CH1_PMASCANMODEB_in = 1'b1; // tie off
assign CH1_PMASCANRSTEN_in = 1'b1; // tie off
assign FECSCANENB_in = 1'b1; // tie off
assign FECSCANIN_in = 200'b11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111; // tie off
assign FECSCANMODEB_in = 1'b1; // tie off
assign FECSCANRSTB_in = 1'b1; // tie off
assign GTREFCLKPD_in = 1'b1; // tie off
assign PLLSCANENB_in = 1'b1; // tie off
assign PLLSCANIN_in = 8'b11111111; // tie off
assign PLLSCANMODEB_in = 1'b1; // tie off
assign PLLSCANRSTEN_in = 1'b1; // tie off
assign RCALSEL_in = 2'b11; // tie off
assign REFCLK2HROW_in = 1'b1; // tie off

  SIP_GTM_DUAL SIP_GTM_DUAL_INST (
    .A_CFG (A_CFG_REG),
    .A_SDM_DATA_CFG0 (A_SDM_DATA_CFG0_REG),
    .A_SDM_DATA_CFG1 (A_SDM_DATA_CFG1_REG),
    .BIAS_CFG0 (BIAS_CFG0_REG),
    .BIAS_CFG1 (BIAS_CFG1_REG),
    .BIAS_CFG2 (BIAS_CFG2_REG),
    .BIAS_CFG3 (BIAS_CFG3_REG),
    .BIAS_CFG4 (BIAS_CFG4_REG),
    .BIAS_CFG5 (BIAS_CFG5_REG),
    .BIAS_CFG6 (BIAS_CFG6_REG),
    .BIAS_CFG7 (BIAS_CFG7_REG),
    .CH0_A_CH_CFG0 (CH0_A_CH_CFG0_REG),
    .CH0_A_CH_CFG1 (CH0_A_CH_CFG1_REG),
    .CH0_A_CH_CFG2 (CH0_A_CH_CFG2_REG),
    .CH0_A_CH_CFG3 (CH0_A_CH_CFG3_REG),
    .CH0_A_CH_CFG4 (CH0_A_CH_CFG4_REG),
    .CH0_A_CH_CFG5 (CH0_A_CH_CFG5_REG),
    .CH0_A_CH_CFG6 (CH0_A_CH_CFG6_REG),
    .CH0_RST_LP_CFG0 (CH0_RST_LP_CFG0_REG),
    .CH0_RST_LP_CFG1 (CH0_RST_LP_CFG1_REG),
    .CH0_RST_LP_CFG2 (CH0_RST_LP_CFG2_REG),
    .CH0_RST_LP_CFG3 (CH0_RST_LP_CFG3_REG),
    .CH0_RST_LP_CFG4 (CH0_RST_LP_CFG4_REG),
    .CH0_RST_LP_ID_CFG0 (CH0_RST_LP_ID_CFG0_REG),
    .CH0_RST_LP_ID_CFG1 (CH0_RST_LP_ID_CFG1_REG),
    .CH0_RST_TIME_CFG0 (CH0_RST_TIME_CFG0_REG),
    .CH0_RST_TIME_CFG1 (CH0_RST_TIME_CFG1_REG),
    .CH0_RST_TIME_CFG2 (CH0_RST_TIME_CFG2_REG),
    .CH0_RST_TIME_CFG3 (CH0_RST_TIME_CFG3_REG),
    .CH0_RST_TIME_CFG4 (CH0_RST_TIME_CFG4_REG),
    .CH0_RST_TIME_CFG5 (CH0_RST_TIME_CFG5_REG),
    .CH0_RST_TIME_CFG6 (CH0_RST_TIME_CFG6_REG),
    .CH0_RX_ADC_CFG0 (CH0_RX_ADC_CFG0_REG),
    .CH0_RX_ADC_CFG1 (CH0_RX_ADC_CFG1_REG),
    .CH0_RX_ANA_CFG0 (CH0_RX_ANA_CFG0_REG),
    .CH0_RX_ANA_CFG1 (CH0_RX_ANA_CFG1_REG),
    .CH0_RX_ANA_CFG2 (CH0_RX_ANA_CFG2_REG),
    .CH0_RX_APT_CFG0A (CH0_RX_APT_CFG0A_REG),
    .CH0_RX_APT_CFG0B (CH0_RX_APT_CFG0B_REG),
    .CH0_RX_APT_CFG10A (CH0_RX_APT_CFG10A_REG),
    .CH0_RX_APT_CFG10B (CH0_RX_APT_CFG10B_REG),
    .CH0_RX_APT_CFG11A (CH0_RX_APT_CFG11A_REG),
    .CH0_RX_APT_CFG11B (CH0_RX_APT_CFG11B_REG),
    .CH0_RX_APT_CFG12A (CH0_RX_APT_CFG12A_REG),
    .CH0_RX_APT_CFG12B (CH0_RX_APT_CFG12B_REG),
    .CH0_RX_APT_CFG13A (CH0_RX_APT_CFG13A_REG),
    .CH0_RX_APT_CFG13B (CH0_RX_APT_CFG13B_REG),
    .CH0_RX_APT_CFG14A (CH0_RX_APT_CFG14A_REG),
    .CH0_RX_APT_CFG14B (CH0_RX_APT_CFG14B_REG),
    .CH0_RX_APT_CFG15A (CH0_RX_APT_CFG15A_REG),
    .CH0_RX_APT_CFG15B (CH0_RX_APT_CFG15B_REG),
    .CH0_RX_APT_CFG16A (CH0_RX_APT_CFG16A_REG),
    .CH0_RX_APT_CFG16B (CH0_RX_APT_CFG16B_REG),
    .CH0_RX_APT_CFG17A (CH0_RX_APT_CFG17A_REG),
    .CH0_RX_APT_CFG17B (CH0_RX_APT_CFG17B_REG),
    .CH0_RX_APT_CFG18A (CH0_RX_APT_CFG18A_REG),
    .CH0_RX_APT_CFG18B (CH0_RX_APT_CFG18B_REG),
    .CH0_RX_APT_CFG19A (CH0_RX_APT_CFG19A_REG),
    .CH0_RX_APT_CFG19B (CH0_RX_APT_CFG19B_REG),
    .CH0_RX_APT_CFG1A (CH0_RX_APT_CFG1A_REG),
    .CH0_RX_APT_CFG1B (CH0_RX_APT_CFG1B_REG),
    .CH0_RX_APT_CFG20A (CH0_RX_APT_CFG20A_REG),
    .CH0_RX_APT_CFG20B (CH0_RX_APT_CFG20B_REG),
    .CH0_RX_APT_CFG21A (CH0_RX_APT_CFG21A_REG),
    .CH0_RX_APT_CFG21B (CH0_RX_APT_CFG21B_REG),
    .CH0_RX_APT_CFG22A (CH0_RX_APT_CFG22A_REG),
    .CH0_RX_APT_CFG22B (CH0_RX_APT_CFG22B_REG),
    .CH0_RX_APT_CFG23A (CH0_RX_APT_CFG23A_REG),
    .CH0_RX_APT_CFG23B (CH0_RX_APT_CFG23B_REG),
    .CH0_RX_APT_CFG24A (CH0_RX_APT_CFG24A_REG),
    .CH0_RX_APT_CFG24B (CH0_RX_APT_CFG24B_REG),
    .CH0_RX_APT_CFG25A (CH0_RX_APT_CFG25A_REG),
    .CH0_RX_APT_CFG25B (CH0_RX_APT_CFG25B_REG),
    .CH0_RX_APT_CFG26A (CH0_RX_APT_CFG26A_REG),
    .CH0_RX_APT_CFG26B (CH0_RX_APT_CFG26B_REG),
    .CH0_RX_APT_CFG27A (CH0_RX_APT_CFG27A_REG),
    .CH0_RX_APT_CFG27B (CH0_RX_APT_CFG27B_REG),
    .CH0_RX_APT_CFG28A (CH0_RX_APT_CFG28A_REG),
    .CH0_RX_APT_CFG28B (CH0_RX_APT_CFG28B_REG),
    .CH0_RX_APT_CFG2A (CH0_RX_APT_CFG2A_REG),
    .CH0_RX_APT_CFG2B (CH0_RX_APT_CFG2B_REG),
    .CH0_RX_APT_CFG3A (CH0_RX_APT_CFG3A_REG),
    .CH0_RX_APT_CFG3B (CH0_RX_APT_CFG3B_REG),
    .CH0_RX_APT_CFG4A (CH0_RX_APT_CFG4A_REG),
    .CH0_RX_APT_CFG4B (CH0_RX_APT_CFG4B_REG),
    .CH0_RX_APT_CFG5A (CH0_RX_APT_CFG5A_REG),
    .CH0_RX_APT_CFG5B (CH0_RX_APT_CFG5B_REG),
    .CH0_RX_APT_CFG6A (CH0_RX_APT_CFG6A_REG),
    .CH0_RX_APT_CFG6B (CH0_RX_APT_CFG6B_REG),
    .CH0_RX_APT_CFG7A (CH0_RX_APT_CFG7A_REG),
    .CH0_RX_APT_CFG7B (CH0_RX_APT_CFG7B_REG),
    .CH0_RX_APT_CFG8A (CH0_RX_APT_CFG8A_REG),
    .CH0_RX_APT_CFG8B (CH0_RX_APT_CFG8B_REG),
    .CH0_RX_APT_CFG9A (CH0_RX_APT_CFG9A_REG),
    .CH0_RX_APT_CFG9B (CH0_RX_APT_CFG9B_REG),
    .CH0_RX_APT_CTRL_CFG2 (CH0_RX_APT_CTRL_CFG2_REG),
    .CH0_RX_APT_CTRL_CFG3 (CH0_RX_APT_CTRL_CFG3_REG),
    .CH0_RX_CAL_CFG0A (CH0_RX_CAL_CFG0A_REG),
    .CH0_RX_CAL_CFG0B (CH0_RX_CAL_CFG0B_REG),
    .CH0_RX_CAL_CFG1A (CH0_RX_CAL_CFG1A_REG),
    .CH0_RX_CAL_CFG1B (CH0_RX_CAL_CFG1B_REG),
    .CH0_RX_CAL_CFG2A (CH0_RX_CAL_CFG2A_REG),
    .CH0_RX_CAL_CFG2B (CH0_RX_CAL_CFG2B_REG),
    .CH0_RX_CDR_CFG0A (CH0_RX_CDR_CFG0A_REG),
    .CH0_RX_CDR_CFG0B (CH0_RX_CDR_CFG0B_REG),
    .CH0_RX_CDR_CFG1A (CH0_RX_CDR_CFG1A_REG),
    .CH0_RX_CDR_CFG1B (CH0_RX_CDR_CFG1B_REG),
    .CH0_RX_CDR_CFG2A (CH0_RX_CDR_CFG2A_REG),
    .CH0_RX_CDR_CFG2B (CH0_RX_CDR_CFG2B_REG),
    .CH0_RX_CDR_CFG3A (CH0_RX_CDR_CFG3A_REG),
    .CH0_RX_CDR_CFG3B (CH0_RX_CDR_CFG3B_REG),
    .CH0_RX_CDR_CFG4A (CH0_RX_CDR_CFG4A_REG),
    .CH0_RX_CDR_CFG4B (CH0_RX_CDR_CFG4B_REG),
    .CH0_RX_CLKGN_CFG0 (CH0_RX_CLKGN_CFG0_REG),
    .CH0_RX_CLKGN_CFG1 (CH0_RX_CLKGN_CFG1_REG),
    .CH0_RX_CTLE_CFG0 (CH0_RX_CTLE_CFG0_REG),
    .CH0_RX_CTLE_CFG1 (CH0_RX_CTLE_CFG1_REG),
    .CH0_RX_CTLE_CFG2 (CH0_RX_CTLE_CFG2_REG),
    .CH0_RX_CTLE_CFG3 (CH0_RX_CTLE_CFG3_REG),
    .CH0_RX_DSP_CFG (CH0_RX_DSP_CFG_REG),
    .CH0_RX_MON_CFG (CH0_RX_MON_CFG_REG),
    .CH0_RX_PAD_CFG0 (CH0_RX_PAD_CFG0_REG),
    .CH0_RX_PAD_CFG1 (CH0_RX_PAD_CFG1_REG),
    .CH0_RX_PCS_CFG0 (CH0_RX_PCS_CFG0_REG),
    .CH0_RX_PCS_CFG1 (CH0_RX_PCS_CFG1_REG),
    .CH0_TX_ANA_CFG0 (CH0_TX_ANA_CFG0_REG),
    .CH0_TX_ANA_CFG1 (CH0_TX_ANA_CFG1_REG),
    .CH0_TX_ANA_CFG2 (CH0_TX_ANA_CFG2_REG),
    .CH0_TX_ANA_CFG3 (CH0_TX_ANA_CFG3_REG),
    .CH0_TX_ANA_CFG4 (CH0_TX_ANA_CFG4_REG),
    .CH0_TX_CAL_CFG0 (CH0_TX_CAL_CFG0_REG),
    .CH0_TX_CAL_CFG1 (CH0_TX_CAL_CFG1_REG),
    .CH0_TX_DRV_CFG0 (CH0_TX_DRV_CFG0_REG),
    .CH0_TX_DRV_CFG1 (CH0_TX_DRV_CFG1_REG),
    .CH0_TX_DRV_CFG2 (CH0_TX_DRV_CFG2_REG),
    .CH0_TX_DRV_CFG3 (CH0_TX_DRV_CFG3_REG),
    .CH0_TX_DRV_CFG4 (CH0_TX_DRV_CFG4_REG),
    .CH0_TX_DRV_CFG5 (CH0_TX_DRV_CFG5_REG),
    .CH0_TX_LPBK_CFG0 (CH0_TX_LPBK_CFG0_REG),
    .CH0_TX_LPBK_CFG1 (CH0_TX_LPBK_CFG1_REG),
    .CH0_TX_PCS_CFG0 (CH0_TX_PCS_CFG0_REG),
    .CH0_TX_PCS_CFG1 (CH0_TX_PCS_CFG1_REG),
    .CH0_TX_PCS_CFG10 (CH0_TX_PCS_CFG10_REG),
    .CH0_TX_PCS_CFG11 (CH0_TX_PCS_CFG11_REG),
    .CH0_TX_PCS_CFG12 (CH0_TX_PCS_CFG12_REG),
    .CH0_TX_PCS_CFG13 (CH0_TX_PCS_CFG13_REG),
    .CH0_TX_PCS_CFG14 (CH0_TX_PCS_CFG14_REG),
    .CH0_TX_PCS_CFG15 (CH0_TX_PCS_CFG15_REG),
    .CH0_TX_PCS_CFG16 (CH0_TX_PCS_CFG16_REG),
    .CH0_TX_PCS_CFG17 (CH0_TX_PCS_CFG17_REG),
    .CH0_TX_PCS_CFG2 (CH0_TX_PCS_CFG2_REG),
    .CH0_TX_PCS_CFG3 (CH0_TX_PCS_CFG3_REG),
    .CH0_TX_PCS_CFG4 (CH0_TX_PCS_CFG4_REG),
    .CH0_TX_PCS_CFG5 (CH0_TX_PCS_CFG5_REG),
    .CH0_TX_PCS_CFG6 (CH0_TX_PCS_CFG6_REG),
    .CH0_TX_PCS_CFG7 (CH0_TX_PCS_CFG7_REG),
    .CH0_TX_PCS_CFG8 (CH0_TX_PCS_CFG8_REG),
    .CH0_TX_PCS_CFG9 (CH0_TX_PCS_CFG9_REG),
    .CH1_A_CH_CFG0 (CH1_A_CH_CFG0_REG),
    .CH1_A_CH_CFG1 (CH1_A_CH_CFG1_REG),
    .CH1_A_CH_CFG2 (CH1_A_CH_CFG2_REG),
    .CH1_A_CH_CFG3 (CH1_A_CH_CFG3_REG),
    .CH1_A_CH_CFG4 (CH1_A_CH_CFG4_REG),
    .CH1_A_CH_CFG5 (CH1_A_CH_CFG5_REG),
    .CH1_A_CH_CFG6 (CH1_A_CH_CFG6_REG),
    .CH1_RST_LP_CFG0 (CH1_RST_LP_CFG0_REG),
    .CH1_RST_LP_CFG1 (CH1_RST_LP_CFG1_REG),
    .CH1_RST_LP_CFG2 (CH1_RST_LP_CFG2_REG),
    .CH1_RST_LP_CFG3 (CH1_RST_LP_CFG3_REG),
    .CH1_RST_LP_CFG4 (CH1_RST_LP_CFG4_REG),
    .CH1_RST_LP_ID_CFG0 (CH1_RST_LP_ID_CFG0_REG),
    .CH1_RST_LP_ID_CFG1 (CH1_RST_LP_ID_CFG1_REG),
    .CH1_RST_TIME_CFG0 (CH1_RST_TIME_CFG0_REG),
    .CH1_RST_TIME_CFG1 (CH1_RST_TIME_CFG1_REG),
    .CH1_RST_TIME_CFG2 (CH1_RST_TIME_CFG2_REG),
    .CH1_RST_TIME_CFG3 (CH1_RST_TIME_CFG3_REG),
    .CH1_RST_TIME_CFG4 (CH1_RST_TIME_CFG4_REG),
    .CH1_RST_TIME_CFG5 (CH1_RST_TIME_CFG5_REG),
    .CH1_RST_TIME_CFG6 (CH1_RST_TIME_CFG6_REG),
    .CH1_RX_ADC_CFG0 (CH1_RX_ADC_CFG0_REG),
    .CH1_RX_ADC_CFG1 (CH1_RX_ADC_CFG1_REG),
    .CH1_RX_ANA_CFG0 (CH1_RX_ANA_CFG0_REG),
    .CH1_RX_ANA_CFG1 (CH1_RX_ANA_CFG1_REG),
    .CH1_RX_ANA_CFG2 (CH1_RX_ANA_CFG2_REG),
    .CH1_RX_APT_CFG0A (CH1_RX_APT_CFG0A_REG),
    .CH1_RX_APT_CFG0B (CH1_RX_APT_CFG0B_REG),
    .CH1_RX_APT_CFG10A (CH1_RX_APT_CFG10A_REG),
    .CH1_RX_APT_CFG10B (CH1_RX_APT_CFG10B_REG),
    .CH1_RX_APT_CFG11A (CH1_RX_APT_CFG11A_REG),
    .CH1_RX_APT_CFG11B (CH1_RX_APT_CFG11B_REG),
    .CH1_RX_APT_CFG12A (CH1_RX_APT_CFG12A_REG),
    .CH1_RX_APT_CFG12B (CH1_RX_APT_CFG12B_REG),
    .CH1_RX_APT_CFG13A (CH1_RX_APT_CFG13A_REG),
    .CH1_RX_APT_CFG13B (CH1_RX_APT_CFG13B_REG),
    .CH1_RX_APT_CFG14A (CH1_RX_APT_CFG14A_REG),
    .CH1_RX_APT_CFG14B (CH1_RX_APT_CFG14B_REG),
    .CH1_RX_APT_CFG15A (CH1_RX_APT_CFG15A_REG),
    .CH1_RX_APT_CFG15B (CH1_RX_APT_CFG15B_REG),
    .CH1_RX_APT_CFG16A (CH1_RX_APT_CFG16A_REG),
    .CH1_RX_APT_CFG16B (CH1_RX_APT_CFG16B_REG),
    .CH1_RX_APT_CFG17A (CH1_RX_APT_CFG17A_REG),
    .CH1_RX_APT_CFG17B (CH1_RX_APT_CFG17B_REG),
    .CH1_RX_APT_CFG18A (CH1_RX_APT_CFG18A_REG),
    .CH1_RX_APT_CFG18B (CH1_RX_APT_CFG18B_REG),
    .CH1_RX_APT_CFG19A (CH1_RX_APT_CFG19A_REG),
    .CH1_RX_APT_CFG19B (CH1_RX_APT_CFG19B_REG),
    .CH1_RX_APT_CFG1A (CH1_RX_APT_CFG1A_REG),
    .CH1_RX_APT_CFG1B (CH1_RX_APT_CFG1B_REG),
    .CH1_RX_APT_CFG20A (CH1_RX_APT_CFG20A_REG),
    .CH1_RX_APT_CFG20B (CH1_RX_APT_CFG20B_REG),
    .CH1_RX_APT_CFG21A (CH1_RX_APT_CFG21A_REG),
    .CH1_RX_APT_CFG21B (CH1_RX_APT_CFG21B_REG),
    .CH1_RX_APT_CFG22A (CH1_RX_APT_CFG22A_REG),
    .CH1_RX_APT_CFG22B (CH1_RX_APT_CFG22B_REG),
    .CH1_RX_APT_CFG23A (CH1_RX_APT_CFG23A_REG),
    .CH1_RX_APT_CFG23B (CH1_RX_APT_CFG23B_REG),
    .CH1_RX_APT_CFG24A (CH1_RX_APT_CFG24A_REG),
    .CH1_RX_APT_CFG24B (CH1_RX_APT_CFG24B_REG),
    .CH1_RX_APT_CFG25A (CH1_RX_APT_CFG25A_REG),
    .CH1_RX_APT_CFG25B (CH1_RX_APT_CFG25B_REG),
    .CH1_RX_APT_CFG26A (CH1_RX_APT_CFG26A_REG),
    .CH1_RX_APT_CFG26B (CH1_RX_APT_CFG26B_REG),
    .CH1_RX_APT_CFG27A (CH1_RX_APT_CFG27A_REG),
    .CH1_RX_APT_CFG27B (CH1_RX_APT_CFG27B_REG),
    .CH1_RX_APT_CFG28A (CH1_RX_APT_CFG28A_REG),
    .CH1_RX_APT_CFG28B (CH1_RX_APT_CFG28B_REG),
    .CH1_RX_APT_CFG2A (CH1_RX_APT_CFG2A_REG),
    .CH1_RX_APT_CFG2B (CH1_RX_APT_CFG2B_REG),
    .CH1_RX_APT_CFG3A (CH1_RX_APT_CFG3A_REG),
    .CH1_RX_APT_CFG3B (CH1_RX_APT_CFG3B_REG),
    .CH1_RX_APT_CFG4A (CH1_RX_APT_CFG4A_REG),
    .CH1_RX_APT_CFG4B (CH1_RX_APT_CFG4B_REG),
    .CH1_RX_APT_CFG5A (CH1_RX_APT_CFG5A_REG),
    .CH1_RX_APT_CFG5B (CH1_RX_APT_CFG5B_REG),
    .CH1_RX_APT_CFG6A (CH1_RX_APT_CFG6A_REG),
    .CH1_RX_APT_CFG6B (CH1_RX_APT_CFG6B_REG),
    .CH1_RX_APT_CFG7A (CH1_RX_APT_CFG7A_REG),
    .CH1_RX_APT_CFG7B (CH1_RX_APT_CFG7B_REG),
    .CH1_RX_APT_CFG8A (CH1_RX_APT_CFG8A_REG),
    .CH1_RX_APT_CFG8B (CH1_RX_APT_CFG8B_REG),
    .CH1_RX_APT_CFG9A (CH1_RX_APT_CFG9A_REG),
    .CH1_RX_APT_CFG9B (CH1_RX_APT_CFG9B_REG),
    .CH1_RX_APT_CTRL_CFG2 (CH1_RX_APT_CTRL_CFG2_REG),
    .CH1_RX_APT_CTRL_CFG3 (CH1_RX_APT_CTRL_CFG3_REG),
    .CH1_RX_CAL_CFG0A (CH1_RX_CAL_CFG0A_REG),
    .CH1_RX_CAL_CFG0B (CH1_RX_CAL_CFG0B_REG),
    .CH1_RX_CAL_CFG1A (CH1_RX_CAL_CFG1A_REG),
    .CH1_RX_CAL_CFG1B (CH1_RX_CAL_CFG1B_REG),
    .CH1_RX_CAL_CFG2A (CH1_RX_CAL_CFG2A_REG),
    .CH1_RX_CAL_CFG2B (CH1_RX_CAL_CFG2B_REG),
    .CH1_RX_CDR_CFG0A (CH1_RX_CDR_CFG0A_REG),
    .CH1_RX_CDR_CFG0B (CH1_RX_CDR_CFG0B_REG),
    .CH1_RX_CDR_CFG1A (CH1_RX_CDR_CFG1A_REG),
    .CH1_RX_CDR_CFG1B (CH1_RX_CDR_CFG1B_REG),
    .CH1_RX_CDR_CFG2A (CH1_RX_CDR_CFG2A_REG),
    .CH1_RX_CDR_CFG2B (CH1_RX_CDR_CFG2B_REG),
    .CH1_RX_CDR_CFG3A (CH1_RX_CDR_CFG3A_REG),
    .CH1_RX_CDR_CFG3B (CH1_RX_CDR_CFG3B_REG),
    .CH1_RX_CDR_CFG4A (CH1_RX_CDR_CFG4A_REG),
    .CH1_RX_CDR_CFG4B (CH1_RX_CDR_CFG4B_REG),
    .CH1_RX_CLKGN_CFG0 (CH1_RX_CLKGN_CFG0_REG),
    .CH1_RX_CLKGN_CFG1 (CH1_RX_CLKGN_CFG1_REG),
    .CH1_RX_CTLE_CFG0 (CH1_RX_CTLE_CFG0_REG),
    .CH1_RX_CTLE_CFG1 (CH1_RX_CTLE_CFG1_REG),
    .CH1_RX_CTLE_CFG2 (CH1_RX_CTLE_CFG2_REG),
    .CH1_RX_CTLE_CFG3 (CH1_RX_CTLE_CFG3_REG),
    .CH1_RX_DSP_CFG (CH1_RX_DSP_CFG_REG),
    .CH1_RX_MON_CFG (CH1_RX_MON_CFG_REG),
    .CH1_RX_PAD_CFG0 (CH1_RX_PAD_CFG0_REG),
    .CH1_RX_PAD_CFG1 (CH1_RX_PAD_CFG1_REG),
    .CH1_RX_PCS_CFG0 (CH1_RX_PCS_CFG0_REG),
    .CH1_RX_PCS_CFG1 (CH1_RX_PCS_CFG1_REG),
    .CH1_TX_ANA_CFG0 (CH1_TX_ANA_CFG0_REG),
    .CH1_TX_ANA_CFG1 (CH1_TX_ANA_CFG1_REG),
    .CH1_TX_ANA_CFG2 (CH1_TX_ANA_CFG2_REG),
    .CH1_TX_ANA_CFG3 (CH1_TX_ANA_CFG3_REG),
    .CH1_TX_ANA_CFG4 (CH1_TX_ANA_CFG4_REG),
    .CH1_TX_CAL_CFG0 (CH1_TX_CAL_CFG0_REG),
    .CH1_TX_CAL_CFG1 (CH1_TX_CAL_CFG1_REG),
    .CH1_TX_DRV_CFG0 (CH1_TX_DRV_CFG0_REG),
    .CH1_TX_DRV_CFG1 (CH1_TX_DRV_CFG1_REG),
    .CH1_TX_DRV_CFG2 (CH1_TX_DRV_CFG2_REG),
    .CH1_TX_DRV_CFG3 (CH1_TX_DRV_CFG3_REG),
    .CH1_TX_DRV_CFG4 (CH1_TX_DRV_CFG4_REG),
    .CH1_TX_DRV_CFG5 (CH1_TX_DRV_CFG5_REG),
    .CH1_TX_LPBK_CFG0 (CH1_TX_LPBK_CFG0_REG),
    .CH1_TX_LPBK_CFG1 (CH1_TX_LPBK_CFG1_REG),
    .CH1_TX_PCS_CFG0 (CH1_TX_PCS_CFG0_REG),
    .CH1_TX_PCS_CFG1 (CH1_TX_PCS_CFG1_REG),
    .CH1_TX_PCS_CFG10 (CH1_TX_PCS_CFG10_REG),
    .CH1_TX_PCS_CFG11 (CH1_TX_PCS_CFG11_REG),
    .CH1_TX_PCS_CFG12 (CH1_TX_PCS_CFG12_REG),
    .CH1_TX_PCS_CFG13 (CH1_TX_PCS_CFG13_REG),
    .CH1_TX_PCS_CFG14 (CH1_TX_PCS_CFG14_REG),
    .CH1_TX_PCS_CFG15 (CH1_TX_PCS_CFG15_REG),
    .CH1_TX_PCS_CFG16 (CH1_TX_PCS_CFG16_REG),
    .CH1_TX_PCS_CFG17 (CH1_TX_PCS_CFG17_REG),
    .CH1_TX_PCS_CFG2 (CH1_TX_PCS_CFG2_REG),
    .CH1_TX_PCS_CFG3 (CH1_TX_PCS_CFG3_REG),
    .CH1_TX_PCS_CFG4 (CH1_TX_PCS_CFG4_REG),
    .CH1_TX_PCS_CFG5 (CH1_TX_PCS_CFG5_REG),
    .CH1_TX_PCS_CFG6 (CH1_TX_PCS_CFG6_REG),
    .CH1_TX_PCS_CFG7 (CH1_TX_PCS_CFG7_REG),
    .CH1_TX_PCS_CFG8 (CH1_TX_PCS_CFG8_REG),
    .CH1_TX_PCS_CFG9 (CH1_TX_PCS_CFG9_REG),
    .DRPEN_CFG (DRPEN_CFG_REG),
    .FEC_CFG0 (FEC_CFG0_REG),
    .FEC_CFG1 (FEC_CFG1_REG),
    .FEC_CFG10 (FEC_CFG10_REG),
    .FEC_CFG11 (FEC_CFG11_REG),
    .FEC_CFG12 (FEC_CFG12_REG),
    .FEC_CFG13 (FEC_CFG13_REG),
    .FEC_CFG14 (FEC_CFG14_REG),
    .FEC_CFG15 (FEC_CFG15_REG),
    .FEC_CFG16 (FEC_CFG16_REG),
    .FEC_CFG17 (FEC_CFG17_REG),
    .FEC_CFG18 (FEC_CFG18_REG),
    .FEC_CFG19 (FEC_CFG19_REG),
    .FEC_CFG2 (FEC_CFG2_REG),
    .FEC_CFG20 (FEC_CFG20_REG),
    .FEC_CFG21 (FEC_CFG21_REG),
    .FEC_CFG22 (FEC_CFG22_REG),
    .FEC_CFG23 (FEC_CFG23_REG),
    .FEC_CFG24 (FEC_CFG24_REG),
    .FEC_CFG25 (FEC_CFG25_REG),
    .FEC_CFG26 (FEC_CFG26_REG),
    .FEC_CFG27 (FEC_CFG27_REG),
    .FEC_CFG3 (FEC_CFG3_REG),
    .FEC_CFG4 (FEC_CFG4_REG),
    .FEC_CFG5 (FEC_CFG5_REG),
    .FEC_CFG6 (FEC_CFG6_REG),
    .FEC_CFG7 (FEC_CFG7_REG),
    .FEC_CFG8 (FEC_CFG8_REG),
    .FEC_CFG9 (FEC_CFG9_REG),
    .PLL_CFG0 (PLL_CFG0_REG),
    .PLL_CFG1 (PLL_CFG1_REG),
    .PLL_CFG2 (PLL_CFG2_REG),
    .PLL_CFG3 (PLL_CFG3_REG),
    .PLL_CFG4 (PLL_CFG4_REG),
    .PLL_CFG5 (PLL_CFG5_REG),
    .PLL_CFG6 (PLL_CFG6_REG),
    .PLL_CRS_CTRL_CFG0 (PLL_CRS_CTRL_CFG0_REG),
    .PLL_CRS_CTRL_CFG1 (PLL_CRS_CTRL_CFG1_REG),
    .PLL_IPS_PIN_EN (PLL_IPS_PIN_EN_REG),
    .PLL_IPS_REFCLK_SEL (PLL_IPS_REFCLK_SEL_REG),
    .RCALSAP_TESTEN (RCALSAP_TESTEN_REG),
    .RCAL_APROBE (RCAL_APROBE_REG),
    .RST_CFG (RST_CFG_REG),
    .RST_PLL_CFG0 (RST_PLL_CFG0_REG),
    .SAP_CFG0 (SAP_CFG0_REG),
    .SDM_CFG0 (SDM_CFG0_REG),
    .SDM_CFG1 (SDM_CFG1_REG),
    .SDM_CFG2 (SDM_CFG2_REG),
    .SDM_SEED_CFG0 (SDM_SEED_CFG0_REG),
    .SDM_SEED_CFG1 (SDM_SEED_CFG1_REG),
    .SIM_DEVICE (SIM_DEVICE_REG),
    .CH0_AXISTDATA (CH0_AXISTDATA_out),
    .CH0_AXISTLAST (CH0_AXISTLAST_out),
    .CH0_AXISTVALID (CH0_AXISTVALID_out),
    .CH0_DMONITOROUT (CH0_DMONITOROUT_out),
    .CH0_DMONITOROUTCLK (CH0_DMONITOROUTCLK_out),
    //.CH0_GTMTXN (CH0_GTMTXN_out),
    //.CH0_GTMTXP (CH0_GTMTXP_out),
    .CH0_GTMTXN (CH0_GTMTXN_integer),
    .CH0_GTMTXP (CH0_GTMTXP_integer),
    .CH0_PCSRSVDOUT (CH0_PCSRSVDOUT_out),
    .CH0_PCSSCANOUT (CH0_PCSSCANOUT_out),
    .CH0_PMARSVDOUT (CH0_PMARSVDOUT_out),
    .CH0_PMASCANOUT (CH0_PMASCANOUT_out),
    .CH0_RESETEXCEPTION (CH0_RESETEXCEPTION_out),
    .CH0_RXBUFSTATUS (CH0_RXBUFSTATUS_out),
    .CH0_RXDATA (CH0_RXDATA_out),
    .CH0_RXDATAFLAGS (CH0_RXDATAFLAGS_out),
    .CH0_RXDATAISAM (CH0_RXDATAISAM_out),
    .CH0_RXDATASTART (CH0_RXDATASTART_out),
    .CH0_RXOUTCLK (CH0_RXOUTCLK_out),
    .CH0_RXPMARESETDONE (CH0_RXPMARESETDONE_out),
    .CH0_RXPRBSERR (CH0_RXPRBSERR_out),
    .CH0_RXPRBSLOCKED (CH0_RXPRBSLOCKED_out),
    .CH0_RXPRGDIVRESETDONE (CH0_RXPRGDIVRESETDONE_out),
    .CH0_RXPROGDIVCLK (CH0_RXPROGDIVCLK_out),
    .CH0_RXRESETDONE (CH0_RXRESETDONE_out),
    .CH0_TXBUFSTATUS (CH0_TXBUFSTATUS_out),
    .CH0_TXOUTCLK (CH0_TXOUTCLK_out),
    .CH0_TXPMARESETDONE (CH0_TXPMARESETDONE_out),
    .CH0_TXPRGDIVRESETDONE (CH0_TXPRGDIVRESETDONE_out),
    .CH0_TXPROGDIVCLK (CH0_TXPROGDIVCLK_out),
    .CH0_TXRESETDONE (CH0_TXRESETDONE_out),
    .CH1_AXISTDATA (CH1_AXISTDATA_out),
    .CH1_AXISTLAST (CH1_AXISTLAST_out),
    .CH1_AXISTVALID (CH1_AXISTVALID_out),
    .CH1_DMONITOROUT (CH1_DMONITOROUT_out),
    .CH1_DMONITOROUTCLK (CH1_DMONITOROUTCLK_out),
    //.CH1_GTMTXN (CH1_GTMTXN_out),
    //.CH1_GTMTXP (CH1_GTMTXP_out),
    .CH1_GTMTXN (CH1_GTMTXN_integer),
    .CH1_GTMTXP (CH1_GTMTXP_integer),
    .CH1_PCSRSVDOUT (CH1_PCSRSVDOUT_out),
    .CH1_PCSSCANOUT (CH1_PCSSCANOUT_out),
    .CH1_PMARSVDOUT (CH1_PMARSVDOUT_out),
    .CH1_PMASCANOUT (CH1_PMASCANOUT_out),
    .CH1_RESETEXCEPTION (CH1_RESETEXCEPTION_out),
    .CH1_RXBUFSTATUS (CH1_RXBUFSTATUS_out),
    .CH1_RXDATA (CH1_RXDATA_out),
    .CH1_RXDATAFLAGS (CH1_RXDATAFLAGS_out),
    .CH1_RXDATAISAM (CH1_RXDATAISAM_out),
    .CH1_RXDATASTART (CH1_RXDATASTART_out),
    .CH1_RXOUTCLK (CH1_RXOUTCLK_out),
    .CH1_RXPMARESETDONE (CH1_RXPMARESETDONE_out),
    .CH1_RXPRBSERR (CH1_RXPRBSERR_out),
    .CH1_RXPRBSLOCKED (CH1_RXPRBSLOCKED_out),
    .CH1_RXPRGDIVRESETDONE (CH1_RXPRGDIVRESETDONE_out),
    .CH1_RXPROGDIVCLK (CH1_RXPROGDIVCLK_out),
    .CH1_RXRESETDONE (CH1_RXRESETDONE_out),
    .CH1_TXBUFSTATUS (CH1_TXBUFSTATUS_out),
    .CH1_TXOUTCLK (CH1_TXOUTCLK_out),
    .CH1_TXPMARESETDONE (CH1_TXPMARESETDONE_out),
    .CH1_TXPRGDIVRESETDONE (CH1_TXPRGDIVRESETDONE_out),
    .CH1_TXPROGDIVCLK (CH1_TXPROGDIVCLK_out),
    .CH1_TXRESETDONE (CH1_TXRESETDONE_out),
    .CLKTESTSIG2PAD (CLKTESTSIG2PAD_out),
    .DMONITOROUTPLLCLK (DMONITOROUTPLLCLK_out),
    .DRPDO (DRPDO_out),
    .DRPRDY (DRPRDY_out),
    .FECRX0ALIGNED (FECRX0ALIGNED_out),
    .FECRX0CORRCWINC (FECRX0CORRCWINC_out),
    .FECRX0CWINC (FECRX0CWINC_out),
    .FECRX0UNCORRCWINC (FECRX0UNCORRCWINC_out),
    .FECRX1ALIGNED (FECRX1ALIGNED_out),
    .FECRX1CORRCWINC (FECRX1CORRCWINC_out),
    .FECRX1CWINC (FECRX1CWINC_out),
    .FECRX1UNCORRCWINC (FECRX1UNCORRCWINC_out),
    .FECRXLN0BITERR0TO1INC (FECRXLN0BITERR0TO1INC_out),
    .FECRXLN0BITERR1TO0INC (FECRXLN0BITERR1TO0INC_out),
    .FECRXLN0DLY (FECRXLN0DLY_out),
    .FECRXLN0ERRCNTINC (FECRXLN0ERRCNTINC_out),
    .FECRXLN0MAPPING (FECRXLN0MAPPING_out),
    .FECRXLN1BITERR0TO1INC (FECRXLN1BITERR0TO1INC_out),
    .FECRXLN1BITERR1TO0INC (FECRXLN1BITERR1TO0INC_out),
    .FECRXLN1DLY (FECRXLN1DLY_out),
    .FECRXLN1ERRCNTINC (FECRXLN1ERRCNTINC_out),
    .FECRXLN1MAPPING (FECRXLN1MAPPING_out),
    .FECRXLN2BITERR0TO1INC (FECRXLN2BITERR0TO1INC_out),
    .FECRXLN2BITERR1TO0INC (FECRXLN2BITERR1TO0INC_out),
    .FECRXLN2DLY (FECRXLN2DLY_out),
    .FECRXLN2ERRCNTINC (FECRXLN2ERRCNTINC_out),
    .FECRXLN2MAPPING (FECRXLN2MAPPING_out),
    .FECRXLN3BITERR0TO1INC (FECRXLN3BITERR0TO1INC_out),
    .FECRXLN3BITERR1TO0INC (FECRXLN3BITERR1TO0INC_out),
    .FECRXLN3DLY (FECRXLN3DLY_out),
    .FECRXLN3ERRCNTINC (FECRXLN3ERRCNTINC_out),
    .FECRXLN3MAPPING (FECRXLN3MAPPING_out),
    .FECSCANOUT (FECSCANOUT_out),
    .FECTRXLN0LOCK (FECTRXLN0LOCK_out),
    .FECTRXLN1LOCK (FECTRXLN1LOCK_out),
    .FECTRXLN2LOCK (FECTRXLN2LOCK_out),
    .FECTRXLN3LOCK (FECTRXLN3LOCK_out),
    .GTPOWERGOOD (GTPOWERGOOD_out),
    .PLLFBCLKLOST (PLLFBCLKLOST_out),
    .PLLLOCK (PLLLOCK_out),
    .PLLREFCLKLOST (PLLREFCLKLOST_out),
    .PLLREFCLKMONITOR (PLLREFCLKMONITOR_out),
    .PLLRESETDONE (PLLRESETDONE_out),
    .PLLRSVDOUT (PLLRSVDOUT_out),
    .PLLSCANOUT (PLLSCANOUT_out),
    .RCALCMP (RCALCMP_out),
    .RCALOUT (RCALOUT_out),
    .REFCLK2BUFG (REFCLK2BUFG_out),
    .REFCLKPDB_SA (REFCLKPDB_SA_out),
    .RXRECCLK0 (RXRECCLK0_out),
    .RXRECCLK1 (RXRECCLK1_out),
    .BGBYPASSB (BGBYPASSB_in),
    .BGMONITORENB (BGMONITORENB_in),
    .BGPDB (BGPDB_in),
    .BGRCALOVRD (BGRCALOVRD_in),
    .BGRCALOVRDENB (BGRCALOVRDENB_in),
    .CH0_AXISEN (CH0_AXISEN_in),
    .CH0_AXISRST (CH0_AXISRST_in),
    .CH0_AXISTRDY (CH0_AXISTRDY_in),
    .CH0_BSRSERIAL (CH0_BSRSERIAL_in),
    .CH0_CFGRESET (CH0_CFGRESET_in),
    .CH0_DMONFIFORESET (CH0_DMONFIFORESET_in),
    .CH0_DMONITORCLK (CH0_DMONITORCLK_in),
    //.CH0_GTMRXN (CH0_GTMRXN_in),
    //.CH0_GTMRXP (CH0_GTMRXP_in),
    .CH0_GTMRXN (CH0_GTMRXN_integer),
    .CH0_GTMRXP (CH0_GTMRXP_integer),
    .CH0_GTRXRESET (CH0_GTRXRESET_in),
    .CH0_GTTXRESET (CH0_GTTXRESET_in),
    .CH0_LOOPBACK (CH0_LOOPBACK_in),
    .CH0_PCSRSVDIN (CH0_PCSRSVDIN_in),
    .CH0_PCSSCANCLK (CH0_PCSSCANCLK_in),
    .CH0_PCSSCANENB (CH0_PCSSCANENB_in),
    .CH0_PCSSCANIN (CH0_PCSSCANIN_in),
    .CH0_PCSSCANMODEB (CH0_PCSSCANMODEB_in),
    .CH0_PCSSCANRSTB (CH0_PCSSCANRSTB_in),
    .CH0_PCSSCANRSTEN (CH0_PCSSCANRSTEN_in),
    .CH0_PMARSVDIN (CH0_PMARSVDIN_in),
    .CH0_PMASCANCLK (CH0_PMASCANCLK_in),
    .CH0_PMASCANENB (CH0_PMASCANENB_in),
    .CH0_PMASCANIN (CH0_PMASCANIN_in),
    .CH0_PMASCANMODEB (CH0_PMASCANMODEB_in),
    .CH0_PMASCANRSTEN (CH0_PMASCANRSTEN_in),
    .CH0_RESETOVRD (CH0_RESETOVRD_in),
    .CH0_RXADAPTRESET (CH0_RXADAPTRESET_in),
    .CH0_RXADCCALRESET (CH0_RXADCCALRESET_in),
    .CH0_RXADCCLKGENRESET (CH0_RXADCCLKGENRESET_in),
    .CH0_RXBUFRESET (CH0_RXBUFRESET_in),
    .CH0_RXCDRFREQOS (CH0_RXCDRFREQOS_in),
    .CH0_RXCDRFRRESET (CH0_RXCDRFRRESET_in),
    .CH0_RXCDRHOLD (CH0_RXCDRHOLD_in),
    .CH0_RXCDRINCPCTRL (CH0_RXCDRINCPCTRL_in),
    .CH0_RXCDROVRDEN (CH0_RXCDROVRDEN_in),
    .CH0_RXCDRPHRESET (CH0_RXCDRPHRESET_in),
    .CH0_RXDFERESET (CH0_RXDFERESET_in),
    .CH0_RXDSPRESET (CH0_RXDSPRESET_in),
    .CH0_RXEQTRAINING (CH0_RXEQTRAINING_in),
    .CH0_RXEYESCANRESET (CH0_RXEYESCANRESET_in),
    .CH0_RXFECRESET (CH0_RXFECRESET_in),
    .CH0_RXOUTCLKSEL (CH0_RXOUTCLKSEL_in),
    .CH0_RXPCSRESET (CH0_RXPCSRESET_in),
    .CH0_RXPCSRESETMASK (CH0_RXPCSRESETMASK_in),
    .CH0_RXPMARESET (CH0_RXPMARESET_in),
    .CH0_RXPMARESETMASK (CH0_RXPMARESETMASK_in),
    .CH0_RXPOLARITY (CH0_RXPOLARITY_in),
    .CH0_RXPRBSCNTSTOP (CH0_RXPRBSCNTSTOP_in),
    .CH0_RXPRBSCSCNTRST (CH0_RXPRBSCSCNTRST_in),
    .CH0_RXPRBSPTN (CH0_RXPRBSPTN_in),
    .CH0_RXPROGDIVRESET (CH0_RXPROGDIVRESET_in),
    .CH0_RXQPRBSEN (CH0_RXQPRBSEN_in),
    .CH0_RXRESETMODE (CH0_RXRESETMODE_in),
    .CH0_RXSPCSEQADV (CH0_RXSPCSEQADV_in),
    .CH0_RXUSRCLK (CH0_RXUSRCLK_in),
    .CH0_RXUSRCLK2 (CH0_RXUSRCLK2_in),
    .CH0_RXUSRRDY (CH0_RXUSRRDY_in),
    .CH0_RXUSRSTART (CH0_RXUSRSTART_in),
    .CH0_RXUSRSTOP (CH0_RXUSRSTOP_in),
    .CH0_TSTCLK0 (CH0_TSTCLK0_in),
    .CH0_TSTCLK1 (CH0_TSTCLK1_in),
    .CH0_TXCKALRESET (CH0_TXCKALRESET_in),
    .CH0_TXCTLFIRDAT (CH0_TXCTLFIRDAT_in),
    .CH0_TXDATA (CH0_TXDATA_in),
    .CH0_TXDATASTART (CH0_TXDATASTART_in),
    .CH0_TXDRVAMP (CH0_TXDRVAMP_in),
    .CH0_TXEMPMAIN (CH0_TXEMPMAIN_in),
    .CH0_TXEMPPOST (CH0_TXEMPPOST_in),
    .CH0_TXEMPPRE (CH0_TXEMPPRE_in),
    .CH0_TXEMPPRE2 (CH0_TXEMPPRE2_in),
    .CH0_TXFECRESET (CH0_TXFECRESET_in),
    .CH0_TXINHIBIT (CH0_TXINHIBIT_in),
    .CH0_TXMUXDCDEXHOLD (CH0_TXMUXDCDEXHOLD_in),
    .CH0_TXMUXDCDORWREN (CH0_TXMUXDCDORWREN_in),
    .CH0_TXOUTCLKSEL (CH0_TXOUTCLKSEL_in),
    .CH0_TXPCSRESET (CH0_TXPCSRESET_in),
    .CH0_TXPCSRESETMASK (CH0_TXPCSRESETMASK_in),
    .CH0_TXPMARESET (CH0_TXPMARESET_in),
    .CH0_TXPMARESETMASK (CH0_TXPMARESETMASK_in),
    .CH0_TXPOLARITY (CH0_TXPOLARITY_in),
    .CH0_TXPRBSINERR (CH0_TXPRBSINERR_in),
    .CH0_TXPRBSPTN (CH0_TXPRBSPTN_in),
    .CH0_TXPROGDIVRESET (CH0_TXPROGDIVRESET_in),
    .CH0_TXQPRBSEN (CH0_TXQPRBSEN_in),
    .CH0_TXRESETMODE (CH0_TXRESETMODE_in),
    .CH0_TXSPCSEQADV (CH0_TXSPCSEQADV_in),
    .CH0_TXUSRCLK (CH0_TXUSRCLK_in),
    .CH0_TXUSRCLK2 (CH0_TXUSRCLK2_in),
    .CH0_TXUSRRDY (CH0_TXUSRRDY_in),
    .CH1_AXISEN (CH1_AXISEN_in),
    .CH1_AXISRST (CH1_AXISRST_in),
    .CH1_AXISTRDY (CH1_AXISTRDY_in),
    .CH1_BSRSERIAL (CH1_BSRSERIAL_in),
    .CH1_CFGRESET (CH1_CFGRESET_in),
    .CH1_DMONFIFORESET (CH1_DMONFIFORESET_in),
    .CH1_DMONITORCLK (CH1_DMONITORCLK_in),
    //.CH1_GTMRXN (CH1_GTMRXN_in),
    //.CH1_GTMRXP (CH1_GTMRXP_in),
    .CH1_GTMRXN (CH1_GTMRXN_integer),
    .CH1_GTMRXP (CH1_GTMRXP_integer),
    .CH1_GTRXRESET (CH1_GTRXRESET_in),
    .CH1_GTTXRESET (CH1_GTTXRESET_in),
    .CH1_LOOPBACK (CH1_LOOPBACK_in),
    .CH1_PCSRSVDIN (CH1_PCSRSVDIN_in),
    .CH1_PCSSCANCLK (CH1_PCSSCANCLK_in),
    .CH1_PCSSCANENB (CH1_PCSSCANENB_in),
    .CH1_PCSSCANIN (CH1_PCSSCANIN_in),
    .CH1_PCSSCANMODEB (CH1_PCSSCANMODEB_in),
    .CH1_PCSSCANRSTB (CH1_PCSSCANRSTB_in),
    .CH1_PCSSCANRSTEN (CH1_PCSSCANRSTEN_in),
    .CH1_PMARSVDIN (CH1_PMARSVDIN_in),
    .CH1_PMASCANCLK (CH1_PMASCANCLK_in),
    .CH1_PMASCANENB (CH1_PMASCANENB_in),
    .CH1_PMASCANIN (CH1_PMASCANIN_in),
    .CH1_PMASCANMODEB (CH1_PMASCANMODEB_in),
    .CH1_PMASCANRSTEN (CH1_PMASCANRSTEN_in),
    .CH1_RESETOVRD (CH1_RESETOVRD_in),
    .CH1_RXADAPTRESET (CH1_RXADAPTRESET_in),
    .CH1_RXADCCALRESET (CH1_RXADCCALRESET_in),
    .CH1_RXADCCLKGENRESET (CH1_RXADCCLKGENRESET_in),
    .CH1_RXBUFRESET (CH1_RXBUFRESET_in),
    .CH1_RXCDRFREQOS (CH1_RXCDRFREQOS_in),
    .CH1_RXCDRFRRESET (CH1_RXCDRFRRESET_in),
    .CH1_RXCDRHOLD (CH1_RXCDRHOLD_in),
    .CH1_RXCDRINCPCTRL (CH1_RXCDRINCPCTRL_in),
    .CH1_RXCDROVRDEN (CH1_RXCDROVRDEN_in),
    .CH1_RXCDRPHRESET (CH1_RXCDRPHRESET_in),
    .CH1_RXDFERESET (CH1_RXDFERESET_in),
    .CH1_RXDSPRESET (CH1_RXDSPRESET_in),
    .CH1_RXEQTRAINING (CH1_RXEQTRAINING_in),
    .CH1_RXEYESCANRESET (CH1_RXEYESCANRESET_in),
    .CH1_RXFECRESET (CH1_RXFECRESET_in),
    .CH1_RXOUTCLKSEL (CH1_RXOUTCLKSEL_in),
    .CH1_RXPCSRESET (CH1_RXPCSRESET_in),
    .CH1_RXPCSRESETMASK (CH1_RXPCSRESETMASK_in),
    .CH1_RXPMARESET (CH1_RXPMARESET_in),
    .CH1_RXPMARESETMASK (CH1_RXPMARESETMASK_in),
    .CH1_RXPOLARITY (CH1_RXPOLARITY_in),
    .CH1_RXPRBSCNTSTOP (CH1_RXPRBSCNTSTOP_in),
    .CH1_RXPRBSCSCNTRST (CH1_RXPRBSCSCNTRST_in),
    .CH1_RXPRBSPTN (CH1_RXPRBSPTN_in),
    .CH1_RXPROGDIVRESET (CH1_RXPROGDIVRESET_in),
    .CH1_RXQPRBSEN (CH1_RXQPRBSEN_in),
    .CH1_RXRESETMODE (CH1_RXRESETMODE_in),
    .CH1_RXSPCSEQADV (CH1_RXSPCSEQADV_in),
    .CH1_RXUSRCLK (CH1_RXUSRCLK_in),
    .CH1_RXUSRCLK2 (CH1_RXUSRCLK2_in),
    .CH1_RXUSRRDY (CH1_RXUSRRDY_in),
    .CH1_RXUSRSTART (CH1_RXUSRSTART_in),
    .CH1_RXUSRSTOP (CH1_RXUSRSTOP_in),
    .CH1_TSTCLK0 (CH1_TSTCLK0_in),
    .CH1_TSTCLK1 (CH1_TSTCLK1_in),
    .CH1_TXCKALRESET (CH1_TXCKALRESET_in),
    .CH1_TXCTLFIRDAT (CH1_TXCTLFIRDAT_in),
    .CH1_TXDATA (CH1_TXDATA_in),
    .CH1_TXDATASTART (CH1_TXDATASTART_in),
    .CH1_TXDRVAMP (CH1_TXDRVAMP_in),
    .CH1_TXEMPMAIN (CH1_TXEMPMAIN_in),
    .CH1_TXEMPPOST (CH1_TXEMPPOST_in),
    .CH1_TXEMPPRE (CH1_TXEMPPRE_in),
    .CH1_TXEMPPRE2 (CH1_TXEMPPRE2_in),
    .CH1_TXFECRESET (CH1_TXFECRESET_in),
    .CH1_TXINHIBIT (CH1_TXINHIBIT_in),
    .CH1_TXMUXDCDEXHOLD (CH1_TXMUXDCDEXHOLD_in),
    .CH1_TXMUXDCDORWREN (CH1_TXMUXDCDORWREN_in),
    .CH1_TXOUTCLKSEL (CH1_TXOUTCLKSEL_in),
    .CH1_TXPCSRESET (CH1_TXPCSRESET_in),
    .CH1_TXPCSRESETMASK (CH1_TXPCSRESETMASK_in),
    .CH1_TXPMARESET (CH1_TXPMARESET_in),
    .CH1_TXPMARESETMASK (CH1_TXPMARESETMASK_in),
    .CH1_TXPOLARITY (CH1_TXPOLARITY_in),
    .CH1_TXPRBSINERR (CH1_TXPRBSINERR_in),
    .CH1_TXPRBSPTN (CH1_TXPRBSPTN_in),
    .CH1_TXPROGDIVRESET (CH1_TXPROGDIVRESET_in),
    .CH1_TXQPRBSEN (CH1_TXQPRBSEN_in),
    .CH1_TXRESETMODE (CH1_TXRESETMODE_in),
    .CH1_TXSPCSEQADV (CH1_TXSPCSEQADV_in),
    .CH1_TXUSRCLK (CH1_TXUSRCLK_in),
    .CH1_TXUSRCLK2 (CH1_TXUSRCLK2_in),
    .CH1_TXUSRRDY (CH1_TXUSRRDY_in),
    .CLKTESTSIG (CLKTESTSIG_in),
    .DRPADDR (DRPADDR_in),
    .DRPCLK (DRPCLK_in),
    .DRPDI (DRPDI_in),
    .DRPEN (DRPEN_in),
    .DRPRST (DRPRST_in),
    .DRPWE (DRPWE_in),
    .FECCTRLRX0BITSLIPFS (FECCTRLRX0BITSLIPFS_in),
    .FECCTRLRX1BITSLIPFS (FECCTRLRX1BITSLIPFS_in),
    .FECSCANCLK (FECSCANCLK_in),
    .FECSCANENB (FECSCANENB_in),
    .FECSCANIN (FECSCANIN_in),
    .FECSCANMODEB (FECSCANMODEB_in),
    .FECSCANRSTB (FECSCANRSTB_in),
    .GTGREFCLK2PLL (GTGREFCLK2PLL_in),
    .GTNORTHREFCLK (GTNORTHREFCLK_in),
    .GTREFCLK (GTREFCLK_in),
    .GTREFCLKPD (GTREFCLKPD_in),
    .GTSOUTHREFCLK (GTSOUTHREFCLK_in),
    .PLLFBDIV (PLLFBDIV_in),
    .PLLMONCLK (PLLMONCLK_in),
    .PLLPD (PLLPD_in),
    .PLLREFCLKSEL (PLLREFCLKSEL_in),
    .PLLRESET (PLLRESET_in),
    .PLLRESETBYPASSMODE (PLLRESETBYPASSMODE_in),
    .PLLRESETMASK (PLLRESETMASK_in),
    .PLLRSVDIN (PLLRSVDIN_in),
    .PLLSCANCLK (PLLSCANCLK_in),
    .PLLSCANENB (PLLSCANENB_in),
    .PLLSCANIN (PLLSCANIN_in),
    .PLLSCANMODEB (PLLSCANMODEB_in),
    .PLLSCANRSTEN (PLLSCANRSTEN_in),
    .RCALENB (RCALENB_in),
    .RCALSEL (RCALSEL_in),
    .REFCLK2HROW (REFCLK2HROW_in),
    .SDMDATA (SDMDATA_in),
    .SDMTOGGLE (SDMTOGGLE_in),
    .GSR (glblGSR)
  );

`ifdef XIL_TIMING
  reg notifier;
`endif

`ifndef XIL_XECLIB
  specify
    (CH0_DMONITORCLK => CH0_DMONITOROUT[0]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[10]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[11]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[12]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[13]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[14]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[15]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[16]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[17]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[18]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[19]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[1]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[20]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[21]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[22]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[23]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[24]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[25]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[26]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[27]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[28]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[29]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[2]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[30]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[31]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[3]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[4]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[5]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[6]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[7]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[8]) = (0:0:0, 0:0:0);
    (CH0_DMONITORCLK => CH0_DMONITOROUT[9]) = (0:0:0, 0:0:0);
    (CH0_RXUSRCLK2 => CH0_RXBUFSTATUS[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXBUFSTATUS[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATAFLAGS[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATAFLAGS[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATAFLAGS[2]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATAFLAGS[3]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATAISAM) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATASTART) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[100]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[101]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[102]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[103]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[104]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[105]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[106]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[107]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[108]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[109]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[10]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[110]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[111]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[112]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[113]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[114]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[115]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[116]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[117]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[118]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[119]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[11]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[120]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[121]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[122]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[123]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[124]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[125]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[126]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[127]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[128]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[129]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[12]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[130]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[131]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[132]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[133]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[134]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[135]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[136]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[137]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[138]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[139]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[13]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[140]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[141]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[142]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[143]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[144]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[145]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[146]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[147]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[148]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[149]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[14]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[150]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[151]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[152]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[153]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[154]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[155]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[156]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[157]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[158]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[159]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[15]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[160]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[161]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[162]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[163]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[164]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[165]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[166]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[167]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[168]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[169]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[16]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[170]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[171]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[172]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[173]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[174]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[175]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[176]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[177]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[178]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[179]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[17]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[180]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[181]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[182]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[183]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[184]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[185]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[186]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[187]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[188]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[189]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[18]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[190]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[191]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[192]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[193]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[194]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[195]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[196]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[197]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[198]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[199]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[19]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[200]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[201]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[202]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[203]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[204]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[205]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[206]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[207]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[208]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[209]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[20]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[210]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[211]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[212]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[213]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[214]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[215]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[216]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[217]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[218]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[219]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[21]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[220]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[221]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[222]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[223]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[224]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[225]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[226]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[227]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[228]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[229]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[22]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[230]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[231]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[232]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[233]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[234]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[235]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[236]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[237]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[238]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[239]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[23]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[240]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[241]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[242]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[243]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[244]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[245]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[246]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[247]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[248]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[249]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[24]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[250]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[251]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[252]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[253]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[254]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[255]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[25]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[26]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[27]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[28]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[29]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[2]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[30]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[31]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[32]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[33]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[34]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[35]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[36]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[37]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[38]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[39]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[3]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[40]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[41]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[42]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[43]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[44]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[45]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[46]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[47]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[48]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[49]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[4]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[50]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[51]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[52]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[53]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[54]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[55]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[56]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[57]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[58]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[59]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[5]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[60]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[61]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[62]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[63]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[64]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[65]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[66]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[67]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[68]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[69]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[6]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[70]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[71]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[72]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[73]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[74]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[75]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[76]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[77]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[78]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[79]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[7]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[80]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[81]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[82]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[83]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[84]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[85]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[86]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[87]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[88]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[89]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[8]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[90]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[91]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[92]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[93]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[94]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[95]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[96]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[97]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[98]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[99]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXDATA[9]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXPRBSERR) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXPRBSLOCKED) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH0_RXRESETDONE) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXBUFSTATUS[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXBUFSTATUS[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATAFLAGS[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATAFLAGS[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATAFLAGS[2]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATAFLAGS[3]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATAISAM) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATASTART) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[100]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[101]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[102]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[103]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[104]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[105]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[106]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[107]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[108]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[109]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[10]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[110]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[111]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[112]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[113]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[114]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[115]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[116]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[117]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[118]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[119]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[11]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[120]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[121]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[122]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[123]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[124]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[125]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[126]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[127]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[128]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[129]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[12]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[130]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[131]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[132]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[133]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[134]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[135]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[136]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[137]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[138]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[139]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[13]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[140]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[141]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[142]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[143]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[144]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[145]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[146]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[147]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[148]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[149]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[14]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[150]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[151]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[152]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[153]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[154]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[155]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[156]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[157]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[158]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[159]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[15]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[160]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[161]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[162]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[163]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[164]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[165]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[166]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[167]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[168]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[169]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[16]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[170]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[171]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[172]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[173]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[174]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[175]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[176]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[177]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[178]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[179]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[17]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[180]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[181]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[182]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[183]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[184]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[185]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[186]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[187]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[188]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[189]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[18]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[190]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[191]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[192]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[193]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[194]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[195]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[196]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[197]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[198]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[199]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[19]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[200]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[201]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[202]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[203]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[204]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[205]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[206]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[207]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[208]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[209]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[20]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[210]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[211]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[212]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[213]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[214]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[215]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[216]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[217]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[218]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[219]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[21]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[220]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[221]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[222]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[223]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[224]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[225]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[226]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[227]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[228]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[229]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[22]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[230]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[231]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[232]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[233]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[234]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[235]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[236]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[237]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[238]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[239]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[23]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[240]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[241]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[242]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[243]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[244]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[245]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[246]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[247]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[248]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[249]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[24]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[250]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[251]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[252]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[253]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[254]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[255]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[25]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[26]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[27]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[28]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[29]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[2]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[30]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[31]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[32]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[33]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[34]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[35]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[36]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[37]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[38]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[39]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[3]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[40]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[41]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[42]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[43]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[44]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[45]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[46]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[47]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[48]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[49]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[4]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[50]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[51]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[52]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[53]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[54]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[55]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[56]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[57]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[58]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[59]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[5]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[60]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[61]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[62]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[63]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[64]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[65]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[66]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[67]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[68]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[69]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[6]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[70]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[71]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[72]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[73]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[74]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[75]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[76]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[77]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[78]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[79]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[7]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[80]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[81]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[82]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[83]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[84]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[85]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[86]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[87]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[88]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[89]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[8]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[90]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[91]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[92]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[93]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[94]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[95]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[96]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[97]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[98]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[99]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXDATA[9]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXPRBSERR) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXPRBSLOCKED) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => CH1_RXRESETDONE) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRX0ALIGNED) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRX0CORRCWINC) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRX0CWINC) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRX0UNCORRCWINC) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRX1ALIGNED) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRX1CORRCWINC) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRX1CWINC) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRX1UNCORRCWINC) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0BITERR0TO1INC[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0BITERR0TO1INC[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0BITERR0TO1INC[2]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0BITERR0TO1INC[3]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0BITERR0TO1INC[4]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0BITERR0TO1INC[5]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0BITERR0TO1INC[6]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0BITERR0TO1INC[7]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0BITERR1TO0INC[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0BITERR1TO0INC[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0BITERR1TO0INC[2]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0BITERR1TO0INC[3]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0BITERR1TO0INC[4]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0BITERR1TO0INC[5]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0BITERR1TO0INC[6]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0BITERR1TO0INC[7]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0DLY[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0DLY[10]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0DLY[11]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0DLY[12]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0DLY[13]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0DLY[14]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0DLY[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0DLY[2]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0DLY[3]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0DLY[4]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0DLY[5]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0DLY[6]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0DLY[7]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0DLY[8]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0DLY[9]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0ERRCNTINC[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0ERRCNTINC[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0ERRCNTINC[2]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0ERRCNTINC[3]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0MAPPING[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN0MAPPING[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1BITERR0TO1INC[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1BITERR0TO1INC[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1BITERR0TO1INC[2]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1BITERR0TO1INC[3]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1BITERR0TO1INC[4]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1BITERR0TO1INC[5]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1BITERR0TO1INC[6]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1BITERR0TO1INC[7]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1BITERR1TO0INC[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1BITERR1TO0INC[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1BITERR1TO0INC[2]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1BITERR1TO0INC[3]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1BITERR1TO0INC[4]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1BITERR1TO0INC[5]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1BITERR1TO0INC[6]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1BITERR1TO0INC[7]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1DLY[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1DLY[10]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1DLY[11]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1DLY[12]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1DLY[13]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1DLY[14]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1DLY[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1DLY[2]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1DLY[3]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1DLY[4]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1DLY[5]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1DLY[6]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1DLY[7]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1DLY[8]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1DLY[9]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1ERRCNTINC[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1ERRCNTINC[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1ERRCNTINC[2]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1ERRCNTINC[3]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1MAPPING[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN1MAPPING[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2BITERR0TO1INC[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2BITERR0TO1INC[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2BITERR0TO1INC[2]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2BITERR0TO1INC[3]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2BITERR0TO1INC[4]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2BITERR0TO1INC[5]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2BITERR0TO1INC[6]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2BITERR0TO1INC[7]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2BITERR1TO0INC[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2BITERR1TO0INC[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2BITERR1TO0INC[2]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2BITERR1TO0INC[3]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2BITERR1TO0INC[4]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2BITERR1TO0INC[5]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2BITERR1TO0INC[6]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2BITERR1TO0INC[7]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2DLY[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2DLY[10]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2DLY[11]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2DLY[12]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2DLY[13]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2DLY[14]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2DLY[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2DLY[2]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2DLY[3]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2DLY[4]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2DLY[5]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2DLY[6]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2DLY[7]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2DLY[8]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2DLY[9]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2ERRCNTINC[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2ERRCNTINC[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2ERRCNTINC[2]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2ERRCNTINC[3]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2MAPPING[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN2MAPPING[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3BITERR0TO1INC[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3BITERR0TO1INC[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3BITERR0TO1INC[2]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3BITERR0TO1INC[3]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3BITERR0TO1INC[4]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3BITERR0TO1INC[5]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3BITERR0TO1INC[6]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3BITERR0TO1INC[7]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3BITERR1TO0INC[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3BITERR1TO0INC[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3BITERR1TO0INC[2]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3BITERR1TO0INC[3]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3BITERR1TO0INC[4]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3BITERR1TO0INC[5]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3BITERR1TO0INC[6]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3BITERR1TO0INC[7]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3DLY[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3DLY[10]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3DLY[11]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3DLY[12]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3DLY[13]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3DLY[14]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3DLY[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3DLY[2]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3DLY[3]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3DLY[4]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3DLY[5]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3DLY[6]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3DLY[7]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3DLY[8]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3DLY[9]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3ERRCNTINC[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3ERRCNTINC[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3ERRCNTINC[2]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3ERRCNTINC[3]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3MAPPING[0]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECRXLN3MAPPING[1]) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECTRXLN0LOCK) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECTRXLN1LOCK) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECTRXLN2LOCK) = (100:100:100, 100:100:100);
    (CH0_RXUSRCLK2 => FECTRXLN3LOCK) = (100:100:100, 100:100:100);
    (CH0_TXUSRCLK2 => CH0_TXBUFSTATUS[0]) = (100:100:100, 100:100:100);
    (CH0_TXUSRCLK2 => CH0_TXBUFSTATUS[1]) = (100:100:100, 100:100:100);
    (CH0_TXUSRCLK2 => CH0_TXRESETDONE) = (100:100:100, 100:100:100);
    (CH0_TXUSRCLK2 => CH1_TXBUFSTATUS[0]) = (100:100:100, 100:100:100);
    (CH0_TXUSRCLK2 => CH1_TXBUFSTATUS[1]) = (100:100:100, 100:100:100);
    (CH0_TXUSRCLK2 => CH1_TXRESETDONE) = (100:100:100, 100:100:100);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[0]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[10]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[11]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[12]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[13]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[14]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[15]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[16]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[17]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[18]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[19]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[1]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[20]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[21]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[22]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[23]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[24]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[25]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[26]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[27]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[28]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[29]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[2]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[30]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[31]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[3]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[4]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[5]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[6]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[7]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[8]) = (0:0:0, 0:0:0);
    (CH1_DMONITORCLK => CH1_DMONITOROUT[9]) = (0:0:0, 0:0:0);
    (CH1_RXUSRCLK2 => CH1_RXBUFSTATUS[0]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXBUFSTATUS[1]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATAFLAGS[0]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATAFLAGS[1]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATAFLAGS[2]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATAFLAGS[3]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATAISAM) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATASTART) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[0]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[100]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[101]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[102]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[103]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[104]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[105]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[106]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[107]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[108]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[109]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[10]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[110]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[111]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[112]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[113]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[114]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[115]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[116]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[117]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[118]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[119]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[11]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[120]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[121]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[122]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[123]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[124]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[125]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[126]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[127]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[128]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[129]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[12]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[130]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[131]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[132]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[133]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[134]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[135]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[136]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[137]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[138]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[139]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[13]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[140]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[141]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[142]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[143]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[144]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[145]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[146]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[147]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[148]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[149]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[14]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[150]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[151]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[152]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[153]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[154]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[155]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[156]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[157]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[158]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[159]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[15]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[160]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[161]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[162]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[163]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[164]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[165]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[166]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[167]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[168]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[169]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[16]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[170]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[171]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[172]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[173]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[174]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[175]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[176]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[177]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[178]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[179]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[17]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[180]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[181]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[182]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[183]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[184]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[185]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[186]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[187]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[188]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[189]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[18]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[190]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[191]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[192]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[193]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[194]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[195]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[196]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[197]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[198]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[199]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[19]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[1]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[200]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[201]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[202]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[203]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[204]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[205]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[206]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[207]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[208]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[209]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[20]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[210]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[211]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[212]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[213]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[214]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[215]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[216]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[217]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[218]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[219]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[21]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[220]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[221]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[222]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[223]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[224]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[225]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[226]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[227]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[228]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[229]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[22]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[230]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[231]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[232]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[233]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[234]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[235]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[236]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[237]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[238]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[239]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[23]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[240]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[241]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[242]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[243]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[244]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[245]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[246]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[247]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[248]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[249]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[24]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[250]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[251]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[252]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[253]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[254]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[255]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[25]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[26]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[27]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[28]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[29]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[2]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[30]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[31]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[32]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[33]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[34]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[35]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[36]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[37]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[38]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[39]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[3]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[40]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[41]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[42]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[43]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[44]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[45]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[46]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[47]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[48]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[49]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[4]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[50]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[51]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[52]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[53]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[54]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[55]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[56]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[57]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[58]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[59]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[5]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[60]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[61]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[62]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[63]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[64]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[65]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[66]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[67]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[68]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[69]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[6]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[70]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[71]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[72]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[73]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[74]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[75]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[76]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[77]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[78]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[79]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[7]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[80]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[81]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[82]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[83]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[84]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[85]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[86]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[87]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[88]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[89]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[8]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[90]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[91]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[92]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[93]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[94]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[95]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[96]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[97]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[98]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[99]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXDATA[9]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXPRBSERR) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXPRBSLOCKED) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => CH1_RXRESETDONE) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRX1ALIGNED) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRX1CORRCWINC) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRX1CWINC) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRX1UNCORRCWINC) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2BITERR0TO1INC[0]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2BITERR0TO1INC[1]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2BITERR0TO1INC[2]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2BITERR0TO1INC[3]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2BITERR0TO1INC[4]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2BITERR0TO1INC[5]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2BITERR0TO1INC[6]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2BITERR0TO1INC[7]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2BITERR1TO0INC[0]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2BITERR1TO0INC[1]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2BITERR1TO0INC[2]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2BITERR1TO0INC[3]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2BITERR1TO0INC[4]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2BITERR1TO0INC[5]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2BITERR1TO0INC[6]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2BITERR1TO0INC[7]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2DLY[0]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2DLY[10]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2DLY[11]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2DLY[12]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2DLY[13]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2DLY[14]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2DLY[1]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2DLY[2]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2DLY[3]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2DLY[4]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2DLY[5]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2DLY[6]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2DLY[7]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2DLY[8]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2DLY[9]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2ERRCNTINC[0]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2ERRCNTINC[1]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2ERRCNTINC[2]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2ERRCNTINC[3]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2MAPPING[0]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN2MAPPING[1]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3BITERR0TO1INC[0]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3BITERR0TO1INC[1]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3BITERR0TO1INC[2]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3BITERR0TO1INC[3]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3BITERR0TO1INC[4]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3BITERR0TO1INC[5]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3BITERR0TO1INC[6]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3BITERR0TO1INC[7]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3BITERR1TO0INC[0]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3BITERR1TO0INC[1]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3BITERR1TO0INC[2]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3BITERR1TO0INC[3]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3BITERR1TO0INC[4]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3BITERR1TO0INC[5]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3BITERR1TO0INC[6]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3BITERR1TO0INC[7]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3DLY[0]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3DLY[10]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3DLY[11]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3DLY[12]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3DLY[13]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3DLY[14]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3DLY[1]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3DLY[2]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3DLY[3]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3DLY[4]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3DLY[5]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3DLY[6]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3DLY[7]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3DLY[8]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3DLY[9]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3ERRCNTINC[0]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3ERRCNTINC[1]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3ERRCNTINC[2]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3ERRCNTINC[3]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3MAPPING[0]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECRXLN3MAPPING[1]) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECTRXLN2LOCK) = (100:100:100, 100:100:100);
    (CH1_RXUSRCLK2 => FECTRXLN3LOCK) = (100:100:100, 100:100:100);
    (CH1_TXUSRCLK2 => CH1_TXBUFSTATUS[0]) = (100:100:100, 100:100:100);
    (CH1_TXUSRCLK2 => CH1_TXBUFSTATUS[1]) = (100:100:100, 100:100:100);
    (CH1_TXUSRCLK2 => CH1_TXRESETDONE) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[0]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[10]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[11]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[12]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[13]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[14]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[15]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[16]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[17]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[18]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[19]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[1]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[20]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[21]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[22]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[23]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[24]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[25]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[26]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[27]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[2]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[3]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[4]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[5]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[6]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[7]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[8]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTDATA[9]) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTLAST) = (100:100:100, 100:100:100);
    (DRPCLK => CH0_AXISTVALID) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[0]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[10]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[11]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[12]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[13]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[14]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[15]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[16]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[17]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[18]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[19]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[1]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[20]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[21]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[22]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[23]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[24]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[25]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[26]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[27]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[2]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[3]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[4]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[5]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[6]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[7]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[8]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTDATA[9]) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTLAST) = (100:100:100, 100:100:100);
    (DRPCLK => CH1_AXISTVALID) = (100:100:100, 100:100:100);
    (DRPCLK => DRPDO[0]) = (100:100:100, 100:100:100);
    (DRPCLK => DRPDO[10]) = (100:100:100, 100:100:100);
    (DRPCLK => DRPDO[11]) = (100:100:100, 100:100:100);
    (DRPCLK => DRPDO[12]) = (100:100:100, 100:100:100);
    (DRPCLK => DRPDO[13]) = (100:100:100, 100:100:100);
    (DRPCLK => DRPDO[14]) = (100:100:100, 100:100:100);
    (DRPCLK => DRPDO[15]) = (100:100:100, 100:100:100);
    (DRPCLK => DRPDO[1]) = (100:100:100, 100:100:100);
    (DRPCLK => DRPDO[2]) = (100:100:100, 100:100:100);
    (DRPCLK => DRPDO[3]) = (100:100:100, 100:100:100);
    (DRPCLK => DRPDO[4]) = (100:100:100, 100:100:100);
    (DRPCLK => DRPDO[5]) = (100:100:100, 100:100:100);
    (DRPCLK => DRPDO[6]) = (100:100:100, 100:100:100);
    (DRPCLK => DRPDO[7]) = (100:100:100, 100:100:100);
    (DRPCLK => DRPDO[8]) = (100:100:100, 100:100:100);
    (DRPCLK => DRPDO[9]) = (100:100:100, 100:100:100);
    (DRPCLK => DRPRDY) = (100:100:100, 100:100:100);
    (GTREFCLK => PLLREFCLKMONITOR) = (0:0:0, 0:0:0);
`ifdef XIL_TIMING
    $period (negedge CH0_RXUSRCLK2, 0:0:0, notifier);
    $period (negedge CH0_TXUSRCLK2, 0:0:0, notifier);
    $period (negedge CH1_RXUSRCLK2, 0:0:0, notifier);
    $period (negedge CH1_TXUSRCLK2, 0:0:0, notifier);
    $period (negedge DRPCLK, 0:0:0, notifier);
    $period (posedge CH0_RXUSRCLK2, 0:0:0, notifier);
    $period (posedge CH0_TXUSRCLK2, 0:0:0, notifier);
    $period (posedge CH1_RXUSRCLK2, 0:0:0, notifier);
    $period (posedge CH1_TXUSRCLK2, 0:0:0, notifier);
    $period (posedge DRPCLK, 0:0:0, notifier);
    $setuphold (negedge CH0_RXUSRCLK, negedge CH0_RXUSRCLK2, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK_delay, CH0_RXUSRCLK2_delay);
    $setuphold (negedge CH0_RXUSRCLK, posedge CH0_RXUSRCLK2, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK_delay, CH0_RXUSRCLK2_delay);
    $setuphold (negedge CH0_TXUSRCLK, negedge CH0_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXINHIBIT_delay);
    $setuphold (negedge CH0_TXUSRCLK, negedge CH0_TXUSRCLK2, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXUSRCLK2_delay);
    $setuphold (negedge CH0_TXUSRCLK, negedge CH1_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXINHIBIT_delay);
    $setuphold (negedge CH0_TXUSRCLK, posedge CH0_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXINHIBIT_delay);
    $setuphold (negedge CH0_TXUSRCLK, posedge CH0_TXUSRCLK2, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXUSRCLK2_delay);
    $setuphold (negedge CH0_TXUSRCLK, posedge CH1_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXINHIBIT_delay);
    $setuphold (negedge CH0_TXUSRCLK2, negedge CH0_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXINHIBIT_delay);
    $setuphold (negedge CH0_TXUSRCLK2, negedge CH1_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXINHIBIT_delay);
    $setuphold (negedge CH0_TXUSRCLK2, posedge CH0_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXINHIBIT_delay);
    $setuphold (negedge CH0_TXUSRCLK2, posedge CH1_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXINHIBIT_delay);
    $setuphold (negedge CH1_RXUSRCLK, negedge CH1_RXUSRCLK2, 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK_delay, CH1_RXUSRCLK2_delay);
    $setuphold (negedge CH1_RXUSRCLK, posedge CH1_RXUSRCLK2, 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK_delay, CH1_RXUSRCLK2_delay);
    $setuphold (negedge CH1_TXUSRCLK, negedge CH1_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXINHIBIT_delay);
    $setuphold (negedge CH1_TXUSRCLK, negedge CH1_TXUSRCLK2, 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXUSRCLK2_delay);
    $setuphold (negedge CH1_TXUSRCLK, posedge CH1_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXINHIBIT_delay);
    $setuphold (negedge CH1_TXUSRCLK, posedge CH1_TXUSRCLK2, 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXUSRCLK2_delay);
    $setuphold (negedge CH1_TXUSRCLK2, negedge CH1_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXINHIBIT_delay);
    $setuphold (negedge CH1_TXUSRCLK2, posedge CH1_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXINHIBIT_delay);
    $setuphold (posedge CH0_RXUSRCLK, negedge CH0_RXUSRCLK2, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK_delay, CH0_RXUSRCLK2_delay);
    $setuphold (posedge CH0_RXUSRCLK, posedge CH0_RXUSRCLK2, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK_delay, CH0_RXUSRCLK2_delay);
    $setuphold (posedge CH0_RXUSRCLK2, negedge CH0_RXEQTRAINING, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH0_RXEQTRAINING_delay);
    $setuphold (posedge CH0_RXUSRCLK2, negedge CH0_RXPOLARITY, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH0_RXPOLARITY_delay);
    $setuphold (posedge CH0_RXUSRCLK2, negedge CH0_RXPRBSCNTSTOP, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH0_RXPRBSCNTSTOP_delay);
    $setuphold (posedge CH0_RXUSRCLK2, negedge CH0_RXPRBSPTN[0], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH0_RXPRBSPTN_delay[0]);
    $setuphold (posedge CH0_RXUSRCLK2, negedge CH0_RXPRBSPTN[1], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH0_RXPRBSPTN_delay[1]);
    $setuphold (posedge CH0_RXUSRCLK2, negedge CH0_RXPRBSPTN[2], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH0_RXPRBSPTN_delay[2]);
    $setuphold (posedge CH0_RXUSRCLK2, negedge CH0_RXPRBSPTN[3], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH0_RXPRBSPTN_delay[3]);
    $setuphold (posedge CH0_RXUSRCLK2, negedge CH0_RXQPRBSEN, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH0_RXQPRBSEN_delay);
    $setuphold (posedge CH0_RXUSRCLK2, negedge CH1_RXEQTRAINING, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH1_RXEQTRAINING_delay);
    $setuphold (posedge CH0_RXUSRCLK2, negedge CH1_RXPOLARITY, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH1_RXPOLARITY_delay);
    $setuphold (posedge CH0_RXUSRCLK2, negedge CH1_RXPRBSCNTSTOP, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH1_RXPRBSCNTSTOP_delay);
    $setuphold (posedge CH0_RXUSRCLK2, negedge CH1_RXPRBSPTN[0], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH1_RXPRBSPTN_delay[0]);
    $setuphold (posedge CH0_RXUSRCLK2, negedge CH1_RXPRBSPTN[1], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH1_RXPRBSPTN_delay[1]);
    $setuphold (posedge CH0_RXUSRCLK2, negedge CH1_RXPRBSPTN[2], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH1_RXPRBSPTN_delay[2]);
    $setuphold (posedge CH0_RXUSRCLK2, negedge CH1_RXPRBSPTN[3], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH1_RXPRBSPTN_delay[3]);
    $setuphold (posedge CH0_RXUSRCLK2, negedge CH1_RXQPRBSEN, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH1_RXQPRBSEN_delay);
    $setuphold (posedge CH0_RXUSRCLK2, negedge FECCTRLRX0BITSLIPFS, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, FECCTRLRX0BITSLIPFS_delay);
    $setuphold (posedge CH0_RXUSRCLK2, negedge FECCTRLRX1BITSLIPFS, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, FECCTRLRX1BITSLIPFS_delay);
    $setuphold (posedge CH0_RXUSRCLK2, posedge CH0_RXEQTRAINING, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH0_RXEQTRAINING_delay);
    $setuphold (posedge CH0_RXUSRCLK2, posedge CH0_RXPOLARITY, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH0_RXPOLARITY_delay);
    $setuphold (posedge CH0_RXUSRCLK2, posedge CH0_RXPRBSCNTSTOP, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH0_RXPRBSCNTSTOP_delay);
    $setuphold (posedge CH0_RXUSRCLK2, posedge CH0_RXPRBSPTN[0], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH0_RXPRBSPTN_delay[0]);
    $setuphold (posedge CH0_RXUSRCLK2, posedge CH0_RXPRBSPTN[1], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH0_RXPRBSPTN_delay[1]);
    $setuphold (posedge CH0_RXUSRCLK2, posedge CH0_RXPRBSPTN[2], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH0_RXPRBSPTN_delay[2]);
    $setuphold (posedge CH0_RXUSRCLK2, posedge CH0_RXPRBSPTN[3], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH0_RXPRBSPTN_delay[3]);
    $setuphold (posedge CH0_RXUSRCLK2, posedge CH0_RXQPRBSEN, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH0_RXQPRBSEN_delay);
    $setuphold (posedge CH0_RXUSRCLK2, posedge CH1_RXEQTRAINING, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH1_RXEQTRAINING_delay);
    $setuphold (posedge CH0_RXUSRCLK2, posedge CH1_RXPOLARITY, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH1_RXPOLARITY_delay);
    $setuphold (posedge CH0_RXUSRCLK2, posedge CH1_RXPRBSCNTSTOP, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH1_RXPRBSCNTSTOP_delay);
    $setuphold (posedge CH0_RXUSRCLK2, posedge CH1_RXPRBSPTN[0], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH1_RXPRBSPTN_delay[0]);
    $setuphold (posedge CH0_RXUSRCLK2, posedge CH1_RXPRBSPTN[1], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH1_RXPRBSPTN_delay[1]);
    $setuphold (posedge CH0_RXUSRCLK2, posedge CH1_RXPRBSPTN[2], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH1_RXPRBSPTN_delay[2]);
    $setuphold (posedge CH0_RXUSRCLK2, posedge CH1_RXPRBSPTN[3], 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH1_RXPRBSPTN_delay[3]);
    $setuphold (posedge CH0_RXUSRCLK2, posedge CH1_RXQPRBSEN, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, CH1_RXQPRBSEN_delay);
    $setuphold (posedge CH0_RXUSRCLK2, posedge FECCTRLRX0BITSLIPFS, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, FECCTRLRX0BITSLIPFS_delay);
    $setuphold (posedge CH0_RXUSRCLK2, posedge FECCTRLRX1BITSLIPFS, 0:0:0, 0:0:0, notifier, , , CH0_RXUSRCLK2_delay, FECCTRLRX1BITSLIPFS_delay);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXINHIBIT_delay);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH0_TXUSRCLK2, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXUSRCLK2_delay);
    $setuphold (posedge CH0_TXUSRCLK, negedge CH1_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXINHIBIT_delay);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXINHIBIT_delay);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH0_TXUSRCLK2, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH0_TXUSRCLK2_delay);
    $setuphold (posedge CH0_TXUSRCLK, posedge CH1_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK_delay, CH1_TXINHIBIT_delay);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATASTART, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATASTART_delay);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[0], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[0]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[100], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[100]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[101], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[101]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[102], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[102]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[103], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[103]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[104], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[104]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[105], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[105]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[106], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[106]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[107], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[107]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[108], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[108]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[109], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[109]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[10], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[10]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[110], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[110]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[111], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[111]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[112], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[112]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[113], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[113]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[114], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[114]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[115], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[115]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[116], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[116]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[117], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[117]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[118], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[118]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[119], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[119]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[11], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[11]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[120], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[120]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[121], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[121]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[122], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[122]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[123], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[123]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[124], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[124]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[125], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[125]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[126], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[126]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[127], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[127]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[128], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[128]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[129], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[129]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[12], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[12]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[130], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[130]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[131], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[131]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[132], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[132]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[133], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[133]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[134], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[134]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[135], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[135]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[136], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[136]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[137], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[137]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[138], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[138]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[139], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[139]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[13], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[13]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[140], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[140]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[141], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[141]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[142], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[142]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[143], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[143]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[144], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[144]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[145], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[145]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[146], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[146]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[147], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[147]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[148], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[148]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[149], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[149]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[14], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[14]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[150], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[150]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[151], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[151]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[152], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[152]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[153], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[153]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[154], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[154]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[155], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[155]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[156], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[156]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[157], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[157]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[158], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[158]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[159], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[159]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[15], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[15]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[160], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[160]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[161], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[161]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[162], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[162]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[163], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[163]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[164], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[164]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[165], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[165]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[166], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[166]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[167], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[167]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[168], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[168]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[169], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[169]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[16], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[16]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[170], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[170]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[171], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[171]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[172], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[172]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[173], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[173]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[174], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[174]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[175], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[175]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[176], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[176]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[177], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[177]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[178], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[178]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[179], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[179]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[17], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[17]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[180], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[180]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[181], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[181]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[182], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[182]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[183], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[183]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[184], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[184]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[185], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[185]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[186], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[186]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[187], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[187]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[188], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[188]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[189], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[189]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[18], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[18]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[190], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[190]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[191], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[191]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[192], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[192]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[193], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[193]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[194], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[194]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[195], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[195]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[196], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[196]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[197], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[197]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[198], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[198]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[199], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[199]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[19], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[19]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[1], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[1]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[200], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[200]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[201], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[201]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[202], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[202]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[203], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[203]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[204], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[204]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[205], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[205]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[206], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[206]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[207], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[207]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[208], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[208]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[209], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[209]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[20], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[20]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[210], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[210]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[211], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[211]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[212], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[212]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[213], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[213]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[214], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[214]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[215], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[215]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[216], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[216]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[217], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[217]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[218], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[218]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[219], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[219]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[21], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[21]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[220], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[220]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[221], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[221]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[222], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[222]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[223], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[223]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[224], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[224]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[225], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[225]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[226], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[226]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[227], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[227]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[228], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[228]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[229], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[229]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[22], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[22]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[230], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[230]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[231], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[231]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[232], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[232]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[233], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[233]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[234], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[234]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[235], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[235]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[236], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[236]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[237], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[237]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[238], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[238]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[239], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[239]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[23], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[23]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[240], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[240]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[241], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[241]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[242], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[242]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[243], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[243]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[244], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[244]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[245], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[245]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[246], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[246]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[247], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[247]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[248], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[248]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[249], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[249]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[24], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[24]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[250], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[250]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[251], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[251]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[252], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[252]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[253], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[253]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[254], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[254]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[255], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[255]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[25], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[25]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[26], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[26]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[27], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[27]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[28], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[28]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[29], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[29]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[2], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[2]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[30], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[30]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[31], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[31]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[32], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[32]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[33], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[33]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[34], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[34]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[35], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[35]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[36], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[36]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[37], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[37]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[38], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[38]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[39], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[39]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[3], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[3]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[40], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[40]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[41], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[41]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[42], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[42]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[43], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[43]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[44], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[44]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[45], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[45]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[46], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[46]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[47], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[47]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[48], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[48]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[49], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[49]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[4], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[4]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[50], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[50]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[51], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[51]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[52], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[52]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[53], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[53]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[54], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[54]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[55], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[55]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[56], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[56]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[57], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[57]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[58], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[58]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[59], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[59]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[5], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[5]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[60], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[60]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[61], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[61]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[62], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[62]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[63], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[63]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[64], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[64]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[65], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[65]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[66], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[66]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[67], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[67]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[68], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[68]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[69], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[69]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[6], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[6]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[70], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[70]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[71], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[71]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[72], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[72]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[73], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[73]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[74], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[74]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[75], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[75]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[76], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[76]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[77], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[77]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[78], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[78]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[79], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[79]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[7], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[7]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[80], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[80]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[81], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[81]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[82], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[82]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[83], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[83]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[84], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[84]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[85], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[85]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[86], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[86]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[87], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[87]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[88], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[88]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[89], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[89]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[8], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[8]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[90], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[90]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[91], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[91]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[92], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[92]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[93], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[93]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[94], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[94]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[95], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[95]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[96], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[96]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[97], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[97]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[98], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[98]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[99], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[99]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXDATA[9], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[9]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXINHIBIT_delay);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXPOLARITY, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXPOLARITY_delay);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXPRBSINERR, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXPRBSINERR_delay);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXPRBSPTN[0], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXPRBSPTN_delay[0]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXPRBSPTN[1], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXPRBSPTN_delay[1]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXPRBSPTN[2], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXPRBSPTN_delay[2]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXPRBSPTN[3], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXPRBSPTN_delay[3]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH0_TXQPRBSEN, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXQPRBSEN_delay);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATASTART, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATASTART_delay);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[0], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[0]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[100], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[100]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[101], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[101]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[102], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[102]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[103], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[103]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[104], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[104]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[105], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[105]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[106], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[106]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[107], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[107]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[108], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[108]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[109], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[109]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[10], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[10]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[110], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[110]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[111], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[111]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[112], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[112]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[113], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[113]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[114], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[114]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[115], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[115]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[116], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[116]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[117], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[117]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[118], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[118]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[119], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[119]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[11], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[11]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[120], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[120]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[121], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[121]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[122], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[122]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[123], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[123]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[124], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[124]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[125], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[125]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[126], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[126]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[127], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[127]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[128], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[128]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[129], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[129]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[12], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[12]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[130], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[130]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[131], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[131]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[132], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[132]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[133], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[133]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[134], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[134]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[135], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[135]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[136], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[136]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[137], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[137]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[138], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[138]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[139], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[139]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[13], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[13]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[140], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[140]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[141], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[141]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[142], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[142]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[143], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[143]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[144], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[144]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[145], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[145]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[146], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[146]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[147], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[147]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[148], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[148]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[149], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[149]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[14], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[14]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[150], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[150]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[151], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[151]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[152], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[152]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[153], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[153]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[154], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[154]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[155], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[155]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[156], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[156]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[157], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[157]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[158], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[158]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[159], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[159]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[15], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[15]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[160], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[160]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[161], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[161]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[162], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[162]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[163], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[163]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[164], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[164]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[165], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[165]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[166], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[166]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[167], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[167]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[168], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[168]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[169], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[169]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[16], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[16]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[170], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[170]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[171], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[171]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[172], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[172]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[173], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[173]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[174], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[174]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[175], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[175]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[176], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[176]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[177], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[177]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[178], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[178]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[179], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[179]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[17], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[17]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[180], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[180]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[181], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[181]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[182], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[182]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[183], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[183]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[184], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[184]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[185], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[185]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[186], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[186]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[187], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[187]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[188], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[188]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[189], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[189]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[18], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[18]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[190], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[190]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[191], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[191]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[192], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[192]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[193], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[193]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[194], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[194]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[195], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[195]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[196], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[196]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[197], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[197]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[198], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[198]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[199], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[199]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[19], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[19]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[1], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[1]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[200], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[200]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[201], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[201]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[202], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[202]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[203], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[203]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[204], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[204]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[205], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[205]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[206], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[206]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[207], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[207]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[208], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[208]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[209], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[209]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[20], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[20]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[210], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[210]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[211], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[211]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[212], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[212]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[213], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[213]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[214], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[214]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[215], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[215]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[216], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[216]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[217], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[217]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[218], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[218]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[219], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[219]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[21], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[21]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[220], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[220]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[221], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[221]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[222], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[222]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[223], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[223]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[224], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[224]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[225], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[225]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[226], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[226]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[227], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[227]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[228], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[228]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[229], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[229]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[22], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[22]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[230], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[230]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[231], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[231]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[232], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[232]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[233], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[233]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[234], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[234]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[235], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[235]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[236], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[236]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[237], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[237]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[238], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[238]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[239], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[239]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[23], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[23]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[240], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[240]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[241], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[241]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[242], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[242]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[243], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[243]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[244], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[244]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[245], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[245]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[246], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[246]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[247], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[247]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[248], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[248]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[249], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[249]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[24], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[24]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[250], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[250]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[251], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[251]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[252], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[252]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[253], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[253]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[254], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[254]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[255], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[255]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[25], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[25]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[26], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[26]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[27], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[27]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[28], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[28]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[29], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[29]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[2], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[2]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[30], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[30]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[31], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[31]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[32], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[32]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[33], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[33]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[34], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[34]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[35], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[35]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[36], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[36]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[37], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[37]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[38], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[38]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[39], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[39]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[3], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[3]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[40], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[40]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[41], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[41]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[42], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[42]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[43], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[43]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[44], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[44]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[45], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[45]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[46], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[46]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[47], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[47]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[48], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[48]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[49], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[49]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[4], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[4]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[50], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[50]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[51], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[51]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[52], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[52]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[53], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[53]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[54], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[54]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[55], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[55]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[56], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[56]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[57], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[57]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[58], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[58]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[59], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[59]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[5], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[5]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[60], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[60]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[61], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[61]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[62], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[62]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[63], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[63]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[64], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[64]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[65], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[65]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[66], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[66]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[67], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[67]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[68], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[68]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[69], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[69]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[6], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[6]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[70], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[70]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[71], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[71]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[72], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[72]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[73], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[73]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[74], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[74]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[75], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[75]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[76], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[76]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[77], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[77]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[78], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[78]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[79], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[79]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[7], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[7]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[80], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[80]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[81], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[81]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[82], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[82]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[83], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[83]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[84], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[84]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[85], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[85]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[86], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[86]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[87], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[87]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[88], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[88]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[89], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[89]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[8], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[8]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[90], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[90]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[91], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[91]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[92], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[92]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[93], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[93]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[94], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[94]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[95], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[95]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[96], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[96]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[97], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[97]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[98], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[98]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[99], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[99]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXDATA[9], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[9]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXINHIBIT_delay);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXPOLARITY, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXPOLARITY_delay);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXPRBSINERR, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXPRBSINERR_delay);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXPRBSPTN[0], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXPRBSPTN_delay[0]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXPRBSPTN[1], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXPRBSPTN_delay[1]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXPRBSPTN[2], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXPRBSPTN_delay[2]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXPRBSPTN[3], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXPRBSPTN_delay[3]);
    $setuphold (posedge CH0_TXUSRCLK2, negedge CH1_TXQPRBSEN, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXQPRBSEN_delay);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATASTART, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATASTART_delay);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[0], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[0]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[100], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[100]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[101], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[101]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[102], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[102]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[103], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[103]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[104], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[104]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[105], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[105]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[106], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[106]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[107], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[107]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[108], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[108]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[109], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[109]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[10], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[10]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[110], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[110]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[111], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[111]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[112], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[112]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[113], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[113]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[114], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[114]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[115], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[115]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[116], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[116]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[117], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[117]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[118], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[118]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[119], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[119]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[11], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[11]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[120], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[120]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[121], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[121]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[122], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[122]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[123], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[123]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[124], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[124]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[125], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[125]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[126], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[126]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[127], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[127]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[128], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[128]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[129], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[129]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[12], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[12]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[130], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[130]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[131], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[131]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[132], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[132]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[133], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[133]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[134], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[134]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[135], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[135]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[136], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[136]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[137], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[137]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[138], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[138]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[139], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[139]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[13], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[13]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[140], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[140]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[141], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[141]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[142], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[142]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[143], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[143]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[144], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[144]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[145], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[145]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[146], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[146]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[147], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[147]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[148], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[148]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[149], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[149]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[14], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[14]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[150], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[150]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[151], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[151]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[152], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[152]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[153], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[153]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[154], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[154]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[155], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[155]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[156], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[156]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[157], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[157]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[158], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[158]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[159], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[159]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[15], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[15]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[160], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[160]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[161], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[161]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[162], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[162]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[163], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[163]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[164], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[164]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[165], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[165]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[166], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[166]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[167], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[167]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[168], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[168]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[169], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[169]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[16], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[16]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[170], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[170]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[171], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[171]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[172], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[172]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[173], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[173]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[174], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[174]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[175], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[175]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[176], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[176]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[177], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[177]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[178], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[178]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[179], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[179]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[17], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[17]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[180], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[180]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[181], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[181]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[182], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[182]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[183], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[183]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[184], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[184]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[185], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[185]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[186], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[186]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[187], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[187]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[188], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[188]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[189], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[189]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[18], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[18]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[190], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[190]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[191], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[191]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[192], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[192]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[193], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[193]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[194], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[194]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[195], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[195]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[196], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[196]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[197], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[197]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[198], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[198]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[199], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[199]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[19], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[19]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[1], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[1]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[200], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[200]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[201], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[201]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[202], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[202]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[203], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[203]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[204], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[204]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[205], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[205]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[206], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[206]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[207], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[207]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[208], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[208]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[209], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[209]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[20], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[20]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[210], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[210]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[211], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[211]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[212], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[212]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[213], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[213]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[214], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[214]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[215], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[215]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[216], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[216]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[217], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[217]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[218], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[218]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[219], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[219]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[21], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[21]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[220], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[220]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[221], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[221]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[222], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[222]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[223], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[223]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[224], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[224]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[225], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[225]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[226], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[226]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[227], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[227]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[228], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[228]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[229], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[229]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[22], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[22]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[230], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[230]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[231], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[231]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[232], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[232]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[233], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[233]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[234], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[234]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[235], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[235]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[236], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[236]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[237], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[237]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[238], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[238]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[239], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[239]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[23], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[23]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[240], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[240]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[241], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[241]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[242], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[242]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[243], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[243]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[244], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[244]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[245], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[245]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[246], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[246]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[247], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[247]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[248], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[248]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[249], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[249]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[24], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[24]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[250], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[250]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[251], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[251]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[252], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[252]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[253], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[253]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[254], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[254]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[255], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[255]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[25], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[25]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[26], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[26]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[27], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[27]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[28], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[28]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[29], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[29]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[2], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[2]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[30], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[30]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[31], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[31]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[32], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[32]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[33], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[33]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[34], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[34]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[35], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[35]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[36], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[36]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[37], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[37]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[38], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[38]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[39], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[39]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[3], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[3]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[40], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[40]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[41], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[41]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[42], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[42]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[43], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[43]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[44], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[44]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[45], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[45]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[46], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[46]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[47], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[47]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[48], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[48]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[49], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[49]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[4], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[4]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[50], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[50]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[51], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[51]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[52], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[52]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[53], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[53]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[54], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[54]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[55], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[55]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[56], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[56]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[57], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[57]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[58], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[58]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[59], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[59]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[5], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[5]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[60], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[60]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[61], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[61]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[62], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[62]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[63], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[63]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[64], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[64]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[65], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[65]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[66], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[66]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[67], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[67]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[68], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[68]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[69], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[69]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[6], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[6]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[70], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[70]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[71], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[71]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[72], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[72]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[73], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[73]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[74], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[74]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[75], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[75]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[76], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[76]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[77], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[77]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[78], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[78]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[79], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[79]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[7], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[7]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[80], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[80]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[81], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[81]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[82], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[82]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[83], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[83]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[84], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[84]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[85], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[85]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[86], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[86]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[87], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[87]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[88], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[88]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[89], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[89]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[8], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[8]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[90], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[90]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[91], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[91]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[92], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[92]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[93], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[93]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[94], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[94]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[95], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[95]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[96], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[96]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[97], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[97]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[98], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[98]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[99], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[99]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXDATA[9], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXDATA_delay[9]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXINHIBIT_delay);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXPOLARITY, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXPOLARITY_delay);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXPRBSINERR, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXPRBSINERR_delay);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXPRBSPTN[0], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXPRBSPTN_delay[0]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXPRBSPTN[1], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXPRBSPTN_delay[1]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXPRBSPTN[2], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXPRBSPTN_delay[2]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXPRBSPTN[3], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXPRBSPTN_delay[3]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH0_TXQPRBSEN, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH0_TXQPRBSEN_delay);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATASTART, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATASTART_delay);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[0], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[0]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[100], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[100]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[101], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[101]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[102], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[102]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[103], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[103]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[104], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[104]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[105], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[105]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[106], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[106]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[107], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[107]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[108], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[108]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[109], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[109]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[10], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[10]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[110], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[110]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[111], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[111]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[112], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[112]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[113], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[113]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[114], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[114]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[115], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[115]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[116], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[116]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[117], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[117]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[118], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[118]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[119], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[119]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[11], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[11]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[120], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[120]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[121], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[121]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[122], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[122]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[123], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[123]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[124], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[124]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[125], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[125]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[126], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[126]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[127], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[127]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[128], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[128]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[129], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[129]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[12], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[12]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[130], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[130]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[131], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[131]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[132], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[132]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[133], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[133]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[134], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[134]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[135], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[135]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[136], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[136]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[137], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[137]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[138], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[138]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[139], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[139]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[13], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[13]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[140], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[140]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[141], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[141]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[142], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[142]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[143], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[143]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[144], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[144]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[145], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[145]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[146], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[146]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[147], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[147]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[148], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[148]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[149], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[149]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[14], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[14]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[150], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[150]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[151], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[151]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[152], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[152]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[153], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[153]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[154], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[154]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[155], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[155]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[156], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[156]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[157], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[157]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[158], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[158]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[159], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[159]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[15], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[15]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[160], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[160]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[161], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[161]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[162], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[162]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[163], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[163]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[164], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[164]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[165], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[165]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[166], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[166]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[167], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[167]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[168], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[168]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[169], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[169]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[16], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[16]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[170], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[170]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[171], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[171]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[172], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[172]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[173], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[173]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[174], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[174]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[175], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[175]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[176], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[176]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[177], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[177]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[178], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[178]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[179], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[179]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[17], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[17]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[180], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[180]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[181], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[181]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[182], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[182]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[183], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[183]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[184], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[184]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[185], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[185]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[186], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[186]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[187], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[187]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[188], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[188]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[189], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[189]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[18], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[18]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[190], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[190]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[191], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[191]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[192], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[192]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[193], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[193]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[194], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[194]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[195], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[195]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[196], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[196]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[197], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[197]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[198], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[198]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[199], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[199]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[19], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[19]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[1], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[1]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[200], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[200]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[201], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[201]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[202], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[202]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[203], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[203]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[204], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[204]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[205], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[205]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[206], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[206]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[207], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[207]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[208], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[208]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[209], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[209]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[20], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[20]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[210], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[210]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[211], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[211]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[212], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[212]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[213], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[213]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[214], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[214]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[215], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[215]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[216], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[216]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[217], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[217]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[218], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[218]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[219], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[219]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[21], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[21]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[220], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[220]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[221], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[221]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[222], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[222]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[223], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[223]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[224], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[224]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[225], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[225]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[226], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[226]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[227], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[227]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[228], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[228]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[229], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[229]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[22], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[22]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[230], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[230]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[231], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[231]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[232], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[232]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[233], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[233]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[234], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[234]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[235], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[235]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[236], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[236]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[237], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[237]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[238], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[238]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[239], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[239]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[23], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[23]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[240], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[240]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[241], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[241]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[242], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[242]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[243], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[243]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[244], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[244]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[245], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[245]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[246], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[246]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[247], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[247]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[248], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[248]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[249], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[249]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[24], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[24]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[250], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[250]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[251], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[251]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[252], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[252]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[253], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[253]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[254], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[254]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[255], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[255]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[25], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[25]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[26], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[26]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[27], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[27]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[28], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[28]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[29], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[29]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[2], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[2]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[30], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[30]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[31], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[31]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[32], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[32]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[33], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[33]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[34], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[34]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[35], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[35]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[36], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[36]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[37], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[37]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[38], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[38]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[39], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[39]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[3], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[3]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[40], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[40]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[41], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[41]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[42], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[42]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[43], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[43]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[44], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[44]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[45], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[45]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[46], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[46]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[47], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[47]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[48], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[48]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[49], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[49]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[4], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[4]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[50], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[50]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[51], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[51]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[52], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[52]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[53], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[53]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[54], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[54]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[55], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[55]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[56], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[56]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[57], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[57]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[58], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[58]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[59], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[59]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[5], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[5]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[60], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[60]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[61], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[61]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[62], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[62]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[63], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[63]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[64], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[64]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[65], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[65]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[66], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[66]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[67], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[67]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[68], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[68]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[69], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[69]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[6], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[6]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[70], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[70]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[71], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[71]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[72], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[72]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[73], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[73]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[74], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[74]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[75], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[75]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[76], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[76]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[77], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[77]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[78], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[78]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[79], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[79]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[7], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[7]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[80], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[80]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[81], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[81]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[82], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[82]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[83], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[83]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[84], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[84]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[85], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[85]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[86], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[86]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[87], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[87]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[88], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[88]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[89], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[89]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[8], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[8]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[90], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[90]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[91], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[91]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[92], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[92]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[93], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[93]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[94], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[94]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[95], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[95]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[96], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[96]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[97], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[97]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[98], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[98]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[99], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[99]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXDATA[9], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXDATA_delay[9]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXINHIBIT_delay);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXPOLARITY, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXPOLARITY_delay);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXPRBSINERR, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXPRBSINERR_delay);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXPRBSPTN[0], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXPRBSPTN_delay[0]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXPRBSPTN[1], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXPRBSPTN_delay[1]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXPRBSPTN[2], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXPRBSPTN_delay[2]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXPRBSPTN[3], 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXPRBSPTN_delay[3]);
    $setuphold (posedge CH0_TXUSRCLK2, posedge CH1_TXQPRBSEN, 0:0:0, 0:0:0, notifier, , , CH0_TXUSRCLK2_delay, CH1_TXQPRBSEN_delay);
    $setuphold (posedge CH1_RXUSRCLK, negedge CH1_RXUSRCLK2, 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK_delay, CH1_RXUSRCLK2_delay);
    $setuphold (posedge CH1_RXUSRCLK, posedge CH1_RXUSRCLK2, 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK_delay, CH1_RXUSRCLK2_delay);
    $setuphold (posedge CH1_RXUSRCLK2, negedge CH1_RXEQTRAINING, 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK2_delay, CH1_RXEQTRAINING_delay);
    $setuphold (posedge CH1_RXUSRCLK2, negedge CH1_RXPOLARITY, 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK2_delay, CH1_RXPOLARITY_delay);
    $setuphold (posedge CH1_RXUSRCLK2, negedge CH1_RXPRBSCNTSTOP, 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK2_delay, CH1_RXPRBSCNTSTOP_delay);
    $setuphold (posedge CH1_RXUSRCLK2, negedge CH1_RXPRBSPTN[0], 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK2_delay, CH1_RXPRBSPTN_delay[0]);
    $setuphold (posedge CH1_RXUSRCLK2, negedge CH1_RXPRBSPTN[1], 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK2_delay, CH1_RXPRBSPTN_delay[1]);
    $setuphold (posedge CH1_RXUSRCLK2, negedge CH1_RXPRBSPTN[2], 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK2_delay, CH1_RXPRBSPTN_delay[2]);
    $setuphold (posedge CH1_RXUSRCLK2, negedge CH1_RXPRBSPTN[3], 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK2_delay, CH1_RXPRBSPTN_delay[3]);
    $setuphold (posedge CH1_RXUSRCLK2, negedge CH1_RXQPRBSEN, 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK2_delay, CH1_RXQPRBSEN_delay);
    $setuphold (posedge CH1_RXUSRCLK2, negedge FECCTRLRX1BITSLIPFS, 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK2_delay, FECCTRLRX1BITSLIPFS_delay);
    $setuphold (posedge CH1_RXUSRCLK2, posedge CH1_RXEQTRAINING, 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK2_delay, CH1_RXEQTRAINING_delay);
    $setuphold (posedge CH1_RXUSRCLK2, posedge CH1_RXPOLARITY, 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK2_delay, CH1_RXPOLARITY_delay);
    $setuphold (posedge CH1_RXUSRCLK2, posedge CH1_RXPRBSCNTSTOP, 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK2_delay, CH1_RXPRBSCNTSTOP_delay);
    $setuphold (posedge CH1_RXUSRCLK2, posedge CH1_RXPRBSPTN[0], 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK2_delay, CH1_RXPRBSPTN_delay[0]);
    $setuphold (posedge CH1_RXUSRCLK2, posedge CH1_RXPRBSPTN[1], 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK2_delay, CH1_RXPRBSPTN_delay[1]);
    $setuphold (posedge CH1_RXUSRCLK2, posedge CH1_RXPRBSPTN[2], 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK2_delay, CH1_RXPRBSPTN_delay[2]);
    $setuphold (posedge CH1_RXUSRCLK2, posedge CH1_RXPRBSPTN[3], 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK2_delay, CH1_RXPRBSPTN_delay[3]);
    $setuphold (posedge CH1_RXUSRCLK2, posedge CH1_RXQPRBSEN, 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK2_delay, CH1_RXQPRBSEN_delay);
    $setuphold (posedge CH1_RXUSRCLK2, posedge FECCTRLRX1BITSLIPFS, 0:0:0, 0:0:0, notifier, , , CH1_RXUSRCLK2_delay, FECCTRLRX1BITSLIPFS_delay);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXINHIBIT_delay);
    $setuphold (posedge CH1_TXUSRCLK, negedge CH1_TXUSRCLK2, 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXUSRCLK2_delay);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXINHIBIT_delay);
    $setuphold (posedge CH1_TXUSRCLK, posedge CH1_TXUSRCLK2, 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK_delay, CH1_TXUSRCLK2_delay);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATASTART, 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATASTART_delay);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[0], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[0]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[100], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[100]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[101], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[101]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[102], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[102]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[103], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[103]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[104], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[104]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[105], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[105]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[106], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[106]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[107], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[107]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[108], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[108]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[109], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[109]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[10], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[10]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[110], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[110]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[111], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[111]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[112], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[112]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[113], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[113]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[114], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[114]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[115], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[115]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[116], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[116]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[117], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[117]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[118], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[118]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[119], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[119]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[11], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[11]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[120], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[120]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[121], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[121]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[122], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[122]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[123], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[123]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[124], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[124]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[125], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[125]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[126], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[126]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[127], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[127]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[128], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[128]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[129], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[129]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[12], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[12]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[130], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[130]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[131], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[131]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[132], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[132]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[133], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[133]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[134], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[134]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[135], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[135]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[136], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[136]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[137], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[137]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[138], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[138]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[139], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[139]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[13], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[13]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[140], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[140]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[141], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[141]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[142], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[142]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[143], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[143]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[144], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[144]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[145], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[145]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[146], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[146]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[147], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[147]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[148], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[148]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[149], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[149]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[14], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[14]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[150], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[150]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[151], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[151]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[152], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[152]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[153], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[153]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[154], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[154]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[155], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[155]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[156], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[156]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[157], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[157]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[158], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[158]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[159], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[159]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[15], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[15]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[160], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[160]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[161], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[161]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[162], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[162]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[163], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[163]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[164], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[164]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[165], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[165]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[166], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[166]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[167], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[167]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[168], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[168]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[169], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[169]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[16], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[16]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[170], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[170]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[171], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[171]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[172], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[172]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[173], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[173]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[174], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[174]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[175], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[175]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[176], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[176]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[177], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[177]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[178], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[178]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[179], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[179]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[17], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[17]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[180], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[180]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[181], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[181]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[182], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[182]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[183], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[183]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[184], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[184]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[185], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[185]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[186], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[186]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[187], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[187]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[188], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[188]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[189], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[189]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[18], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[18]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[190], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[190]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[191], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[191]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[192], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[192]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[193], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[193]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[194], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[194]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[195], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[195]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[196], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[196]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[197], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[197]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[198], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[198]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[199], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[199]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[19], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[19]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[1], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[1]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[200], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[200]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[201], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[201]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[202], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[202]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[203], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[203]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[204], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[204]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[205], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[205]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[206], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[206]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[207], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[207]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[208], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[208]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[209], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[209]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[20], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[20]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[210], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[210]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[211], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[211]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[212], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[212]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[213], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[213]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[214], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[214]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[215], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[215]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[216], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[216]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[217], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[217]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[218], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[218]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[219], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[219]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[21], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[21]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[220], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[220]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[221], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[221]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[222], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[222]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[223], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[223]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[224], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[224]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[225], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[225]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[226], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[226]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[227], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[227]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[228], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[228]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[229], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[229]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[22], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[22]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[230], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[230]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[231], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[231]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[232], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[232]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[233], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[233]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[234], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[234]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[235], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[235]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[236], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[236]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[237], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[237]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[238], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[238]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[239], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[239]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[23], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[23]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[240], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[240]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[241], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[241]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[242], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[242]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[243], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[243]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[244], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[244]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[245], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[245]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[246], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[246]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[247], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[247]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[248], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[248]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[249], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[249]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[24], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[24]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[250], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[250]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[251], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[251]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[252], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[252]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[253], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[253]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[254], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[254]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[255], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[255]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[25], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[25]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[26], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[26]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[27], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[27]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[28], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[28]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[29], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[29]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[2], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[2]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[30], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[30]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[31], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[31]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[32], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[32]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[33], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[33]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[34], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[34]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[35], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[35]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[36], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[36]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[37], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[37]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[38], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[38]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[39], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[39]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[3], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[3]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[40], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[40]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[41], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[41]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[42], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[42]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[43], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[43]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[44], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[44]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[45], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[45]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[46], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[46]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[47], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[47]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[48], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[48]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[49], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[49]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[4], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[4]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[50], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[50]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[51], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[51]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[52], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[52]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[53], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[53]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[54], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[54]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[55], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[55]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[56], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[56]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[57], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[57]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[58], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[58]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[59], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[59]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[5], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[5]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[60], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[60]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[61], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[61]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[62], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[62]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[63], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[63]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[64], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[64]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[65], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[65]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[66], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[66]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[67], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[67]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[68], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[68]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[69], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[69]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[6], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[6]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[70], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[70]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[71], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[71]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[72], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[72]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[73], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[73]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[74], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[74]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[75], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[75]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[76], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[76]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[77], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[77]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[78], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[78]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[79], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[79]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[7], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[7]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[80], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[80]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[81], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[81]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[82], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[82]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[83], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[83]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[84], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[84]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[85], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[85]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[86], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[86]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[87], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[87]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[88], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[88]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[89], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[89]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[8], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[8]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[90], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[90]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[91], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[91]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[92], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[92]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[93], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[93]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[94], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[94]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[95], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[95]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[96], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[96]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[97], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[97]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[98], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[98]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[99], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[99]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXDATA[9], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[9]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXINHIBIT_delay);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXPOLARITY, 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXPOLARITY_delay);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXPRBSINERR, 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXPRBSINERR_delay);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXPRBSPTN[0], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXPRBSPTN_delay[0]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXPRBSPTN[1], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXPRBSPTN_delay[1]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXPRBSPTN[2], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXPRBSPTN_delay[2]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXPRBSPTN[3], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXPRBSPTN_delay[3]);
    $setuphold (posedge CH1_TXUSRCLK2, negedge CH1_TXQPRBSEN, 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXQPRBSEN_delay);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATASTART, 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATASTART_delay);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[0], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[0]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[100], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[100]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[101], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[101]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[102], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[102]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[103], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[103]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[104], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[104]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[105], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[105]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[106], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[106]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[107], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[107]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[108], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[108]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[109], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[109]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[10], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[10]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[110], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[110]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[111], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[111]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[112], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[112]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[113], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[113]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[114], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[114]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[115], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[115]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[116], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[116]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[117], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[117]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[118], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[118]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[119], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[119]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[11], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[11]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[120], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[120]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[121], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[121]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[122], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[122]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[123], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[123]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[124], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[124]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[125], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[125]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[126], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[126]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[127], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[127]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[128], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[128]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[129], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[129]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[12], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[12]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[130], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[130]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[131], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[131]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[132], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[132]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[133], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[133]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[134], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[134]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[135], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[135]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[136], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[136]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[137], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[137]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[138], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[138]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[139], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[139]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[13], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[13]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[140], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[140]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[141], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[141]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[142], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[142]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[143], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[143]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[144], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[144]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[145], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[145]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[146], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[146]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[147], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[147]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[148], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[148]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[149], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[149]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[14], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[14]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[150], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[150]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[151], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[151]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[152], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[152]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[153], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[153]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[154], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[154]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[155], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[155]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[156], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[156]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[157], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[157]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[158], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[158]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[159], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[159]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[15], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[15]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[160], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[160]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[161], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[161]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[162], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[162]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[163], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[163]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[164], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[164]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[165], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[165]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[166], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[166]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[167], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[167]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[168], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[168]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[169], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[169]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[16], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[16]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[170], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[170]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[171], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[171]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[172], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[172]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[173], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[173]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[174], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[174]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[175], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[175]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[176], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[176]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[177], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[177]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[178], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[178]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[179], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[179]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[17], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[17]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[180], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[180]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[181], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[181]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[182], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[182]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[183], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[183]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[184], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[184]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[185], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[185]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[186], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[186]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[187], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[187]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[188], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[188]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[189], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[189]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[18], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[18]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[190], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[190]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[191], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[191]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[192], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[192]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[193], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[193]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[194], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[194]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[195], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[195]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[196], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[196]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[197], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[197]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[198], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[198]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[199], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[199]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[19], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[19]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[1], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[1]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[200], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[200]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[201], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[201]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[202], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[202]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[203], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[203]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[204], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[204]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[205], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[205]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[206], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[206]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[207], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[207]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[208], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[208]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[209], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[209]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[20], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[20]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[210], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[210]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[211], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[211]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[212], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[212]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[213], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[213]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[214], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[214]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[215], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[215]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[216], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[216]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[217], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[217]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[218], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[218]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[219], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[219]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[21], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[21]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[220], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[220]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[221], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[221]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[222], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[222]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[223], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[223]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[224], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[224]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[225], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[225]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[226], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[226]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[227], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[227]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[228], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[228]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[229], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[229]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[22], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[22]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[230], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[230]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[231], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[231]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[232], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[232]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[233], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[233]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[234], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[234]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[235], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[235]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[236], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[236]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[237], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[237]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[238], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[238]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[239], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[239]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[23], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[23]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[240], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[240]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[241], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[241]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[242], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[242]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[243], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[243]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[244], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[244]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[245], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[245]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[246], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[246]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[247], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[247]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[248], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[248]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[249], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[249]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[24], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[24]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[250], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[250]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[251], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[251]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[252], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[252]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[253], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[253]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[254], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[254]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[255], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[255]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[25], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[25]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[26], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[26]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[27], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[27]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[28], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[28]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[29], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[29]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[2], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[2]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[30], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[30]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[31], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[31]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[32], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[32]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[33], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[33]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[34], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[34]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[35], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[35]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[36], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[36]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[37], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[37]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[38], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[38]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[39], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[39]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[3], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[3]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[40], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[40]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[41], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[41]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[42], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[42]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[43], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[43]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[44], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[44]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[45], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[45]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[46], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[46]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[47], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[47]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[48], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[48]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[49], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[49]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[4], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[4]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[50], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[50]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[51], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[51]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[52], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[52]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[53], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[53]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[54], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[54]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[55], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[55]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[56], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[56]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[57], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[57]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[58], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[58]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[59], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[59]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[5], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[5]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[60], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[60]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[61], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[61]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[62], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[62]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[63], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[63]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[64], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[64]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[65], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[65]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[66], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[66]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[67], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[67]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[68], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[68]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[69], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[69]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[6], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[6]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[70], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[70]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[71], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[71]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[72], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[72]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[73], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[73]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[74], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[74]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[75], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[75]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[76], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[76]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[77], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[77]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[78], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[78]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[79], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[79]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[7], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[7]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[80], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[80]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[81], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[81]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[82], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[82]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[83], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[83]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[84], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[84]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[85], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[85]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[86], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[86]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[87], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[87]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[88], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[88]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[89], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[89]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[8], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[8]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[90], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[90]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[91], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[91]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[92], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[92]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[93], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[93]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[94], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[94]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[95], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[95]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[96], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[96]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[97], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[97]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[98], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[98]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[99], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[99]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXDATA[9], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXDATA_delay[9]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXINHIBIT, 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXINHIBIT_delay);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXPOLARITY, 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXPOLARITY_delay);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXPRBSINERR, 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXPRBSINERR_delay);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXPRBSPTN[0], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXPRBSPTN_delay[0]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXPRBSPTN[1], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXPRBSPTN_delay[1]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXPRBSPTN[2], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXPRBSPTN_delay[2]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXPRBSPTN[3], 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXPRBSPTN_delay[3]);
    $setuphold (posedge CH1_TXUSRCLK2, posedge CH1_TXQPRBSEN, 0:0:0, 0:0:0, notifier, , , CH1_TXUSRCLK2_delay, CH1_TXQPRBSEN_delay);
    $setuphold (posedge DRPCLK, negedge CH0_AXISEN, 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, CH0_AXISEN_delay);
    $setuphold (posedge DRPCLK, negedge CH0_AXISTRDY, 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, CH0_AXISTRDY_delay);
    $setuphold (posedge DRPCLK, negedge CH1_AXISEN, 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, CH1_AXISEN_delay);
    $setuphold (posedge DRPCLK, negedge CH1_AXISTRDY, 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, CH1_AXISTRDY_delay);
    $setuphold (posedge DRPCLK, negedge DRPADDR[0], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPADDR_delay[0]);
    $setuphold (posedge DRPCLK, negedge DRPADDR[10], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPADDR_delay[10]);
    $setuphold (posedge DRPCLK, negedge DRPADDR[1], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPADDR_delay[1]);
    $setuphold (posedge DRPCLK, negedge DRPADDR[2], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPADDR_delay[2]);
    $setuphold (posedge DRPCLK, negedge DRPADDR[3], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPADDR_delay[3]);
    $setuphold (posedge DRPCLK, negedge DRPADDR[4], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPADDR_delay[4]);
    $setuphold (posedge DRPCLK, negedge DRPADDR[5], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPADDR_delay[5]);
    $setuphold (posedge DRPCLK, negedge DRPADDR[6], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPADDR_delay[6]);
    $setuphold (posedge DRPCLK, negedge DRPADDR[7], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPADDR_delay[7]);
    $setuphold (posedge DRPCLK, negedge DRPADDR[8], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPADDR_delay[8]);
    $setuphold (posedge DRPCLK, negedge DRPADDR[9], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPADDR_delay[9]);
    $setuphold (posedge DRPCLK, negedge DRPDI[0], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[0]);
    $setuphold (posedge DRPCLK, negedge DRPDI[10], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[10]);
    $setuphold (posedge DRPCLK, negedge DRPDI[11], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[11]);
    $setuphold (posedge DRPCLK, negedge DRPDI[12], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[12]);
    $setuphold (posedge DRPCLK, negedge DRPDI[13], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[13]);
    $setuphold (posedge DRPCLK, negedge DRPDI[14], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[14]);
    $setuphold (posedge DRPCLK, negedge DRPDI[15], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[15]);
    $setuphold (posedge DRPCLK, negedge DRPDI[1], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[1]);
    $setuphold (posedge DRPCLK, negedge DRPDI[2], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[2]);
    $setuphold (posedge DRPCLK, negedge DRPDI[3], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[3]);
    $setuphold (posedge DRPCLK, negedge DRPDI[4], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[4]);
    $setuphold (posedge DRPCLK, negedge DRPDI[5], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[5]);
    $setuphold (posedge DRPCLK, negedge DRPDI[6], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[6]);
    $setuphold (posedge DRPCLK, negedge DRPDI[7], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[7]);
    $setuphold (posedge DRPCLK, negedge DRPDI[8], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[8]);
    $setuphold (posedge DRPCLK, negedge DRPDI[9], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[9]);
    $setuphold (posedge DRPCLK, negedge DRPEN, 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPEN_delay);
    $setuphold (posedge DRPCLK, negedge DRPWE, 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPWE_delay);
    $setuphold (posedge DRPCLK, posedge CH0_AXISEN, 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, CH0_AXISEN_delay);
    $setuphold (posedge DRPCLK, posedge CH0_AXISTRDY, 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, CH0_AXISTRDY_delay);
    $setuphold (posedge DRPCLK, posedge CH1_AXISEN, 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, CH1_AXISEN_delay);
    $setuphold (posedge DRPCLK, posedge CH1_AXISTRDY, 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, CH1_AXISTRDY_delay);
    $setuphold (posedge DRPCLK, posedge DRPADDR[0], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPADDR_delay[0]);
    $setuphold (posedge DRPCLK, posedge DRPADDR[10], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPADDR_delay[10]);
    $setuphold (posedge DRPCLK, posedge DRPADDR[1], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPADDR_delay[1]);
    $setuphold (posedge DRPCLK, posedge DRPADDR[2], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPADDR_delay[2]);
    $setuphold (posedge DRPCLK, posedge DRPADDR[3], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPADDR_delay[3]);
    $setuphold (posedge DRPCLK, posedge DRPADDR[4], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPADDR_delay[4]);
    $setuphold (posedge DRPCLK, posedge DRPADDR[5], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPADDR_delay[5]);
    $setuphold (posedge DRPCLK, posedge DRPADDR[6], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPADDR_delay[6]);
    $setuphold (posedge DRPCLK, posedge DRPADDR[7], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPADDR_delay[7]);
    $setuphold (posedge DRPCLK, posedge DRPADDR[8], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPADDR_delay[8]);
    $setuphold (posedge DRPCLK, posedge DRPADDR[9], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPADDR_delay[9]);
    $setuphold (posedge DRPCLK, posedge DRPDI[0], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[0]);
    $setuphold (posedge DRPCLK, posedge DRPDI[10], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[10]);
    $setuphold (posedge DRPCLK, posedge DRPDI[11], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[11]);
    $setuphold (posedge DRPCLK, posedge DRPDI[12], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[12]);
    $setuphold (posedge DRPCLK, posedge DRPDI[13], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[13]);
    $setuphold (posedge DRPCLK, posedge DRPDI[14], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[14]);
    $setuphold (posedge DRPCLK, posedge DRPDI[15], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[15]);
    $setuphold (posedge DRPCLK, posedge DRPDI[1], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[1]);
    $setuphold (posedge DRPCLK, posedge DRPDI[2], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[2]);
    $setuphold (posedge DRPCLK, posedge DRPDI[3], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[3]);
    $setuphold (posedge DRPCLK, posedge DRPDI[4], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[4]);
    $setuphold (posedge DRPCLK, posedge DRPDI[5], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[5]);
    $setuphold (posedge DRPCLK, posedge DRPDI[6], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[6]);
    $setuphold (posedge DRPCLK, posedge DRPDI[7], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[7]);
    $setuphold (posedge DRPCLK, posedge DRPDI[8], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[8]);
    $setuphold (posedge DRPCLK, posedge DRPDI[9], 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPDI_delay[9]);
    $setuphold (posedge DRPCLK, posedge DRPEN, 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPEN_delay);
    $setuphold (posedge DRPCLK, posedge DRPWE, 0:0:0, 0:0:0, notifier, , , DRPCLK_delay, DRPWE_delay);
    $width (negedge CH0_RXUSRCLK2, 0:0:0, 0, notifier);
    $width (negedge CH0_TXUSRCLK2, 0:0:0, 0, notifier);
    $width (negedge CH1_RXUSRCLK2, 0:0:0, 0, notifier);
    $width (negedge CH1_TXUSRCLK2, 0:0:0, 0, notifier);
    $width (negedge DRPCLK, 0:0:0, 0, notifier);
    $width (posedge CH0_RXUSRCLK2, 0:0:0, 0, notifier);
    $width (posedge CH0_TXUSRCLK2, 0:0:0, 0, notifier);
    $width (posedge CH1_RXUSRCLK2, 0:0:0, 0, notifier);
    $width (posedge CH1_TXUSRCLK2, 0:0:0, 0, notifier);
    $width (posedge DRPCLK, 0:0:0, 0, notifier);
`endif
    specparam PATHPULSE$ = 0;
  endspecify
`endif
endmodule

`endcelldefine
